 export default /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./node_modules/deeplearn/dist/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/deeplearn/dist/data/checkpoint_loader.js":
/*!***************************************************************!*\
  !*** ./node_modules/deeplearn/dist/data/checkpoint_loader.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar MANIFEST_FILE = 'manifest.json';\nvar CheckpointLoader = (function () {\n    function CheckpointLoader(urlPath) {\n        this.urlPath = urlPath;\n        if (this.urlPath.charAt(this.urlPath.length - 1) !== '/') {\n            this.urlPath += '/';\n        }\n    }\n    CheckpointLoader.prototype.loadManifest = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', _this.urlPath + MANIFEST_FILE);\n            xhr.onload = function () {\n                _this.checkpointManifest = JSON.parse(xhr.responseText);\n                resolve();\n            };\n            xhr.onerror = function (error) {\n                throw new Error(MANIFEST_FILE + \" not found at \" + _this.urlPath + \". \" + error);\n            };\n            xhr.send();\n        });\n    };\n    CheckpointLoader.prototype.getCheckpointManifest = function () {\n        var _this = this;\n        if (this.checkpointManifest == null) {\n            return new Promise(function (resolve, reject) {\n                _this.loadManifest().then(function () {\n                    resolve(_this.checkpointManifest);\n                });\n            });\n        }\n        return new Promise(function (resolve, reject) {\n            resolve(_this.checkpointManifest);\n        });\n    };\n    CheckpointLoader.prototype.getAllVariables = function () {\n        var _this = this;\n        if (this.variables != null) {\n            return new Promise(function (resolve, reject) {\n                resolve(_this.variables);\n            });\n        }\n        return new Promise(function (resolve, reject) {\n            _this.getCheckpointManifest().then(function (checkpointDefinition) {\n                var variableNames = Object.keys(_this.checkpointManifest);\n                var variablePromises = [];\n                for (var i = 0; i < variableNames.length; i++) {\n                    variablePromises.push(_this.getVariable(variableNames[i]));\n                }\n                Promise.all(variablePromises).then(function (variables) {\n                    _this.variables = {};\n                    for (var i = 0; i < variables.length; i++) {\n                        _this.variables[variableNames[i]] = variables[i];\n                    }\n                    resolve(_this.variables);\n                });\n            });\n        });\n    };\n    CheckpointLoader.prototype.getVariable = function (varName) {\n        var _this = this;\n        if (!(varName in this.checkpointManifest)) {\n            throw new Error('Cannot load non-existant variable ' + varName);\n        }\n        var variableRequestPromiseMethod = function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'arraybuffer';\n            var fname = _this.checkpointManifest[varName].filename;\n            xhr.open('GET', _this.urlPath + fname);\n            xhr.onload = function () {\n                if (xhr.status === 404) {\n                    throw new Error(\"Not found variable \" + varName);\n                }\n                var values = new Float32Array(xhr.response);\n                var ndarray = ndarray_1.NDArray.make(_this.checkpointManifest[varName].shape, { values: values });\n                resolve(ndarray);\n            };\n            xhr.onerror = function (error) {\n                throw new Error(\"Could not fetch variable \" + varName + \": \" + error);\n            };\n            xhr.send();\n        };\n        if (this.checkpointManifest == null) {\n            return new Promise(function (resolve, reject) {\n                _this.loadManifest().then(function () {\n                    new Promise(variableRequestPromiseMethod).then(resolve);\n                });\n            });\n        }\n        return new Promise(variableRequestPromiseMethod);\n    };\n    return CheckpointLoader;\n}());\nexports.CheckpointLoader = CheckpointLoader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZGF0YS9jaGVja3BvaW50X2xvYWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9kYXRhL2NoZWNrcG9pbnRfbG9hZGVyLmpzPzk0OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbmRhcnJheV8xID0gcmVxdWlyZShcIi4uL21hdGgvbmRhcnJheVwiKTtcbnZhciBNQU5JRkVTVF9GSUxFID0gJ21hbmlmZXN0Lmpzb24nO1xudmFyIENoZWNrcG9pbnRMb2FkZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENoZWNrcG9pbnRMb2FkZXIodXJsUGF0aCkge1xuICAgICAgICB0aGlzLnVybFBhdGggPSB1cmxQYXRoO1xuICAgICAgICBpZiAodGhpcy51cmxQYXRoLmNoYXJBdCh0aGlzLnVybFBhdGgubGVuZ3RoIC0gMSkgIT09ICcvJykge1xuICAgICAgICAgICAgdGhpcy51cmxQYXRoICs9ICcvJztcbiAgICAgICAgfVxuICAgIH1cbiAgICBDaGVja3BvaW50TG9hZGVyLnByb3RvdHlwZS5sb2FkTWFuaWZlc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgICAgICB4aHIub3BlbignR0VUJywgX3RoaXMudXJsUGF0aCArIE1BTklGRVNUX0ZJTEUpO1xuICAgICAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5jaGVja3BvaW50TWFuaWZlc3QgPSBKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihNQU5JRkVTVF9GSUxFICsgXCIgbm90IGZvdW5kIGF0IFwiICsgX3RoaXMudXJsUGF0aCArIFwiLiBcIiArIGVycm9yKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB4aHIuc2VuZCgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENoZWNrcG9pbnRMb2FkZXIucHJvdG90eXBlLmdldENoZWNrcG9pbnRNYW5pZmVzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuY2hlY2twb2ludE1hbmlmZXN0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMubG9hZE1hbmlmZXN0KCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoX3RoaXMuY2hlY2twb2ludE1hbmlmZXN0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICByZXNvbHZlKF90aGlzLmNoZWNrcG9pbnRNYW5pZmVzdCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ2hlY2twb2ludExvYWRlci5wcm90b3R5cGUuZ2V0QWxsVmFyaWFibGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy52YXJpYWJsZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKF90aGlzLnZhcmlhYmxlcyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgX3RoaXMuZ2V0Q2hlY2twb2ludE1hbmlmZXN0KCkudGhlbihmdW5jdGlvbiAoY2hlY2twb2ludERlZmluaXRpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFyaWFibGVOYW1lcyA9IE9iamVjdC5rZXlzKF90aGlzLmNoZWNrcG9pbnRNYW5pZmVzdCk7XG4gICAgICAgICAgICAgICAgdmFyIHZhcmlhYmxlUHJvbWlzZXMgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhcmlhYmxlTmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVQcm9taXNlcy5wdXNoKF90aGlzLmdldFZhcmlhYmxlKHZhcmlhYmxlTmFtZXNbaV0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgUHJvbWlzZS5hbGwodmFyaWFibGVQcm9taXNlcykudGhlbihmdW5jdGlvbiAodmFyaWFibGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnZhcmlhYmxlcyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhcmlhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudmFyaWFibGVzW3ZhcmlhYmxlTmFtZXNbaV1dID0gdmFyaWFibGVzW2ldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoX3RoaXMudmFyaWFibGVzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENoZWNrcG9pbnRMb2FkZXIucHJvdG90eXBlLmdldFZhcmlhYmxlID0gZnVuY3Rpb24gKHZhck5hbWUpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKCEodmFyTmFtZSBpbiB0aGlzLmNoZWNrcG9pbnRNYW5pZmVzdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGxvYWQgbm9uLWV4aXN0YW50IHZhcmlhYmxlICcgKyB2YXJOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdmFyaWFibGVSZXF1ZXN0UHJvbWlzZU1ldGhvZCA9IGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInO1xuICAgICAgICAgICAgdmFyIGZuYW1lID0gX3RoaXMuY2hlY2twb2ludE1hbmlmZXN0W3Zhck5hbWVdLmZpbGVuYW1lO1xuICAgICAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIF90aGlzLnVybFBhdGggKyBmbmFtZSk7XG4gICAgICAgICAgICB4aHIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09PSA0MDQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGZvdW5kIHZhcmlhYmxlIFwiICsgdmFyTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB2YWx1ZXMgPSBuZXcgRmxvYXQzMkFycmF5KHhoci5yZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgdmFyIG5kYXJyYXkgPSBuZGFycmF5XzEuTkRBcnJheS5tYWtlKF90aGlzLmNoZWNrcG9pbnRNYW5pZmVzdFt2YXJOYW1lXS5zaGFwZSwgeyB2YWx1ZXM6IHZhbHVlcyB9KTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKG5kYXJyYXkpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGZldGNoIHZhcmlhYmxlIFwiICsgdmFyTmFtZSArIFwiOiBcIiArIGVycm9yKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB4aHIuc2VuZCgpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5jaGVja3BvaW50TWFuaWZlc3QgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkTWFuaWZlc3QoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3IFByb21pc2UodmFyaWFibGVSZXF1ZXN0UHJvbWlzZU1ldGhvZCkudGhlbihyZXNvbHZlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSh2YXJpYWJsZVJlcXVlc3RQcm9taXNlTWV0aG9kKTtcbiAgICB9O1xuICAgIHJldHVybiBDaGVja3BvaW50TG9hZGVyO1xufSgpKTtcbmV4cG9ydHMuQ2hlY2twb2ludExvYWRlciA9IENoZWNrcG9pbnRMb2FkZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/data/checkpoint_loader.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/data/dataset.js":
/*!*****************************************************!*\
  !*** ./node_modules/deeplearn/dist/data/dataset.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar STATS_SAMPLE_PERCENTAGE = 0.1;\nvar InMemoryDataset = (function () {\n    function InMemoryDataset(dataShapes) {\n        this.dataShapes = dataShapes;\n        this.normalizationInfo = {};\n    }\n    InMemoryDataset.prototype.getDataShape = function (dataIndex) {\n        return this.dataShapes[dataIndex];\n    };\n    InMemoryDataset.prototype.getData = function () {\n        return this.dataset;\n    };\n    InMemoryDataset.prototype.getStats = function () {\n        var _this = this;\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        return this.dataset.map(function (d) { return _this.getStatsForData(d); });\n    };\n    InMemoryDataset.prototype.getStatsForData = function (data) {\n        var inputMin = Number.POSITIVE_INFINITY;\n        var inputMax = Number.NEGATIVE_INFINITY;\n        var exampleIndices = data.map(function (example, i) { return i; });\n        util.shuffle(exampleIndices);\n        exampleIndices =\n            exampleIndices.slice(exampleIndices.length * STATS_SAMPLE_PERCENTAGE);\n        for (var i = 0; i < exampleIndices.length; i++) {\n            var inputValues = data[exampleIndices[i]].getValues();\n            for (var j = 0; j < inputValues.length; j++) {\n                inputMin = Math.min(inputMin, inputValues[j]);\n                inputMax = Math.max(inputMax, inputValues[j]);\n            }\n        }\n        return {\n            inputMin: inputMin,\n            inputMax: inputMax,\n            exampleCount: data.length,\n            shape: data[0].shape,\n        };\n    };\n    InMemoryDataset.prototype.normalizeExamplesToRange = function (examples, curLowerBounds, curUpperBounds, newLowerBounds, newUpperBounds) {\n        var curBoundsIsPerDimension = (curUpperBounds instanceof Float32Array &&\n            curLowerBounds instanceof Float32Array);\n        var newBoundsIsPerDimension = (newLowerBounds instanceof Float32Array &&\n            newUpperBounds instanceof Float32Array);\n        var inputSize = util.sizeFromShape(examples[0].shape);\n        var newExamples = [];\n        examples.forEach(function (example) {\n            var inputValues = example.getValues();\n            var normalizedValues = new Float32Array(inputSize);\n            for (var j = 0; j < inputSize; j++) {\n                var curLowerBound = curBoundsIsPerDimension ?\n                    curLowerBounds[j] :\n                    curLowerBounds;\n                var curUpperBound = curBoundsIsPerDimension ?\n                    curUpperBounds[j] :\n                    curUpperBounds;\n                var curRange = curUpperBound - curLowerBound;\n                var newLowerBound = newBoundsIsPerDimension ?\n                    newLowerBounds[j] :\n                    newLowerBounds;\n                var newUpperBound = newBoundsIsPerDimension ?\n                    newUpperBounds[j] :\n                    newUpperBounds;\n                var newRange = newUpperBound - newLowerBound;\n                if (curRange === 0) {\n                    normalizedValues[j] = newLowerBound;\n                }\n                else {\n                    normalizedValues[j] = newLowerBound +\n                        newRange * (inputValues[j] - curLowerBound) / curRange;\n                }\n            }\n            newExamples.push(ndarray_1.NDArray.make(example.shape, { values: normalizedValues }));\n        });\n        return newExamples;\n    };\n    InMemoryDataset.prototype.computeBounds = function (dataIndex) {\n        var _this = this;\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        var size = util.sizeFromShape(this.dataset[dataIndex][0].shape);\n        this.normalizationInfo[dataIndex] = {\n            isNormalized: false,\n            minValues: new Float32Array(size),\n            maxValues: new Float32Array(size)\n        };\n        for (var i = 0; i < size; i++) {\n            this.normalizationInfo[dataIndex].minValues[i] = Number.POSITIVE_INFINITY;\n            this.normalizationInfo[dataIndex].maxValues[i] = Number.NEGATIVE_INFINITY;\n        }\n        this.dataset[dataIndex].forEach(function (example) {\n            var inputValues = example.getValues();\n            for (var k = 0; k < size; k++) {\n                _this.normalizationInfo[dataIndex].minValues[k] = Math.min(_this.normalizationInfo[dataIndex].minValues[k], inputValues[k]);\n                _this.normalizationInfo[dataIndex].maxValues[k] = Math.max(_this.normalizationInfo[dataIndex].maxValues[k], inputValues[k]);\n            }\n        });\n    };\n    InMemoryDataset.prototype.normalizeWithinBounds = function (dataIndex, lowerBound, upperBound) {\n        if (this.dataset == null) {\n            throw new Error('Data is null.');\n        }\n        if (dataIndex >= this.dataset.length) {\n            throw new Error('dataIndex out of bounds.');\n        }\n        if (this.normalizationInfo[dataIndex] == null) {\n            this.computeBounds(dataIndex);\n        }\n        var curLowerBounds;\n        var curUpperBounds;\n        if (this.normalizationInfo[dataIndex].isNormalized) {\n            curLowerBounds = this.normalizationInfo[dataIndex].lowerBound;\n            curUpperBounds = this.normalizationInfo[dataIndex].upperBound;\n        }\n        else {\n            curLowerBounds = this.normalizationInfo[dataIndex].minValues;\n            curUpperBounds = this.normalizationInfo[dataIndex].maxValues;\n        }\n        this.dataset[dataIndex] = this.normalizeExamplesToRange(this.dataset[dataIndex], curLowerBounds, curUpperBounds, lowerBound, upperBound);\n        this.normalizationInfo[dataIndex].isNormalized = true;\n        this.normalizationInfo[dataIndex].lowerBound = lowerBound;\n        this.normalizationInfo[dataIndex].upperBound = upperBound;\n    };\n    InMemoryDataset.prototype.isNormalized = function (dataIndex) {\n        return this.normalizationInfo != null &&\n            this.normalizationInfo[dataIndex].isNormalized;\n    };\n    InMemoryDataset.prototype.removeNormalization = function (dataIndex) {\n        if (this.dataset == null) {\n            throw new Error('Training or test data is null.');\n        }\n        if (!this.isNormalized(dataIndex)) {\n            return;\n        }\n        this.dataset[dataIndex] = this.normalizeExamplesToRange(this.dataset[dataIndex], this.normalizationInfo[dataIndex].lowerBound, this.normalizationInfo[dataIndex].upperBound, this.normalizationInfo[dataIndex].minValues, this.normalizationInfo[dataIndex].maxValues);\n        this.normalizationInfo[dataIndex].isNormalized = false;\n    };\n    InMemoryDataset.prototype.unnormalizeExamples = function (examples, dataIndex) {\n        if (!this.isNormalized(dataIndex)) {\n            return examples;\n        }\n        return this.normalizeExamplesToRange(examples, this.normalizationInfo[dataIndex].lowerBound, this.normalizationInfo[dataIndex].upperBound, this.normalizationInfo[dataIndex].minValues, this.normalizationInfo[dataIndex].maxValues);\n    };\n    InMemoryDataset.prototype.dispose = function () {\n        if (this.dataset == null) {\n            return;\n        }\n        for (var i = 0; i < this.dataset.length; i++) {\n            for (var j = 0; j < this.dataset[i].length; j++) {\n                this.dataset[i][j].dispose();\n            }\n        }\n        this.dataset = [];\n    };\n    return InMemoryDataset;\n}());\nexports.InMemoryDataset = InMemoryDataset;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/data/dataset.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/data/input_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/deeplearn/dist/data/input_provider.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar InMemoryShuffledInputProviderBuilder = (function () {\n    function InMemoryShuffledInputProviderBuilder(inputs) {\n        this.inputs = inputs;\n        this.idx = 0;\n        this.inputCounter = 0;\n        this.epoch = 0;\n        this.shuffledIndices = util.createShuffledIndices(inputs[0].length);\n        this.numInputs = inputs.length;\n        var numExamples = this.inputs[0].length;\n        for (var i = 0; i < this.numInputs; i++) {\n            util.assert(this.inputs[i].length === numExamples, 'Number of examples must match across different inputs.');\n        }\n        for (var i = 0; i < this.numInputs; i++) {\n            var inputShape = this.inputs[i][0].shape;\n            for (var j = 0; j < this.inputs[i].length; j++) {\n                util.assertShapesMatch(inputShape, this.inputs[i][j].shape);\n            }\n        }\n    }\n    InMemoryShuffledInputProviderBuilder.prototype.getCurrentExampleIndex = function () {\n        var returnIdx = this.idx;\n        this.inputCounter++;\n        if (this.inputCounter >= this.numInputs) {\n            this.idx++;\n            this.inputCounter = 0;\n            if (this.idx >= this.inputs[0].length) {\n                this.idx = 0;\n                this.epoch++;\n            }\n        }\n        return returnIdx;\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getNextInput = function (inputId) {\n        var currentExampleIndex = this.getCurrentExampleIndex();\n        return this.inputs[inputId][this.shuffledIndices[currentExampleIndex]];\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getEpoch = function () {\n        return this.epoch;\n    };\n    InMemoryShuffledInputProviderBuilder.prototype.getInputProviders = function () {\n        var inputProviders = [];\n        for (var i = 0; i < this.numInputs; i++) {\n            inputProviders.push(this.getInputProvider(i));\n        }\n        return inputProviders;\n    };\n    return InMemoryShuffledInputProviderBuilder;\n}());\nexports.InMemoryShuffledInputProviderBuilder = InMemoryShuffledInputProviderBuilder;\nvar InCPUMemoryShuffledInputProviderBuilder = (function (_super) {\n    __extends(InCPUMemoryShuffledInputProviderBuilder, _super);\n    function InCPUMemoryShuffledInputProviderBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InCPUMemoryShuffledInputProviderBuilder.prototype.getInputProvider = function (inputId) {\n        var shuffledInputProvider = this;\n        return {\n            getNextCopy: function (math) {\n                return ndarray_1.NDArray.like(shuffledInputProvider.getNextInput(inputId));\n            },\n            disposeCopy: function (math, copy) {\n                copy.dispose();\n            }\n        };\n    };\n    return InCPUMemoryShuffledInputProviderBuilder;\n}(InMemoryShuffledInputProviderBuilder));\nexports.InCPUMemoryShuffledInputProviderBuilder = InCPUMemoryShuffledInputProviderBuilder;\nvar InGPUMemoryShuffledInputProviderBuilder = (function (_super) {\n    __extends(InGPUMemoryShuffledInputProviderBuilder, _super);\n    function InGPUMemoryShuffledInputProviderBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InGPUMemoryShuffledInputProviderBuilder.prototype.getInputProvider = function (inputId) {\n        var shuffledInputProvider = this;\n        return {\n            getNextCopy: function (math) {\n                return math.clone(shuffledInputProvider.getNextInput(inputId));\n            },\n            disposeCopy: function (math, copy) {\n                copy.dispose();\n            }\n        };\n    };\n    return InGPUMemoryShuffledInputProviderBuilder;\n}(InMemoryShuffledInputProviderBuilder));\nexports.InGPUMemoryShuffledInputProviderBuilder = InGPUMemoryShuffledInputProviderBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZGF0YS9pbnB1dF9wcm92aWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9kYXRhL2lucHV0X3Byb3ZpZGVyLmpzPzBjYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi4vbWF0aC9uZGFycmF5XCIpO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vdXRpbFwiKTtcbnZhciBJbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEluTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlcihpbnB1dHMpIHtcbiAgICAgICAgdGhpcy5pbnB1dHMgPSBpbnB1dHM7XG4gICAgICAgIHRoaXMuaWR4ID0gMDtcbiAgICAgICAgdGhpcy5pbnB1dENvdW50ZXIgPSAwO1xuICAgICAgICB0aGlzLmVwb2NoID0gMDtcbiAgICAgICAgdGhpcy5zaHVmZmxlZEluZGljZXMgPSB1dGlsLmNyZWF0ZVNodWZmbGVkSW5kaWNlcyhpbnB1dHNbMF0ubGVuZ3RoKTtcbiAgICAgICAgdGhpcy5udW1JbnB1dHMgPSBpbnB1dHMubGVuZ3RoO1xuICAgICAgICB2YXIgbnVtRXhhbXBsZXMgPSB0aGlzLmlucHV0c1swXS5sZW5ndGg7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1JbnB1dHM7IGkrKykge1xuICAgICAgICAgICAgdXRpbC5hc3NlcnQodGhpcy5pbnB1dHNbaV0ubGVuZ3RoID09PSBudW1FeGFtcGxlcywgJ051bWJlciBvZiBleGFtcGxlcyBtdXN0IG1hdGNoIGFjcm9zcyBkaWZmZXJlbnQgaW5wdXRzLicpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1JbnB1dHM7IGkrKykge1xuICAgICAgICAgICAgdmFyIGlucHV0U2hhcGUgPSB0aGlzLmlucHV0c1tpXVswXS5zaGFwZTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5pbnB1dHNbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICB1dGlsLmFzc2VydFNoYXBlc01hdGNoKGlucHV0U2hhcGUsIHRoaXMuaW5wdXRzW2ldW2pdLnNoYXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBJbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIucHJvdG90eXBlLmdldEN1cnJlbnRFeGFtcGxlSW5kZXggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXR1cm5JZHggPSB0aGlzLmlkeDtcbiAgICAgICAgdGhpcy5pbnB1dENvdW50ZXIrKztcbiAgICAgICAgaWYgKHRoaXMuaW5wdXRDb3VudGVyID49IHRoaXMubnVtSW5wdXRzKSB7XG4gICAgICAgICAgICB0aGlzLmlkeCsrO1xuICAgICAgICAgICAgdGhpcy5pbnB1dENvdW50ZXIgPSAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuaWR4ID49IHRoaXMuaW5wdXRzWzBdLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaWR4ID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmVwb2NoKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJldHVybklkeDtcbiAgICB9O1xuICAgIEluTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlci5wcm90b3R5cGUuZ2V0TmV4dElucHV0ID0gZnVuY3Rpb24gKGlucHV0SWQpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRFeGFtcGxlSW5kZXggPSB0aGlzLmdldEN1cnJlbnRFeGFtcGxlSW5kZXgoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXRzW2lucHV0SWRdW3RoaXMuc2h1ZmZsZWRJbmRpY2VzW2N1cnJlbnRFeGFtcGxlSW5kZXhdXTtcbiAgICB9O1xuICAgIEluTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlci5wcm90b3R5cGUuZ2V0RXBvY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVwb2NoO1xuICAgIH07XG4gICAgSW5NZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyLnByb3RvdHlwZS5nZXRJbnB1dFByb3ZpZGVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGlucHV0UHJvdmlkZXJzID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1JbnB1dHM7IGkrKykge1xuICAgICAgICAgICAgaW5wdXRQcm92aWRlcnMucHVzaCh0aGlzLmdldElucHV0UHJvdmlkZXIoaSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dFByb3ZpZGVycztcbiAgICB9O1xuICAgIHJldHVybiBJbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXI7XG59KCkpO1xuZXhwb3J0cy5Jbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIgPSBJbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXI7XG52YXIgSW5DUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSW5DUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEluQ1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBJbkNQVU1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIucHJvdG90eXBlLmdldElucHV0UHJvdmlkZXIgPSBmdW5jdGlvbiAoaW5wdXRJZCkge1xuICAgICAgICB2YXIgc2h1ZmZsZWRJbnB1dFByb3ZpZGVyID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGdldE5leHRDb3B5OiBmdW5jdGlvbiAobWF0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS5saWtlKHNodWZmbGVkSW5wdXRQcm92aWRlci5nZXROZXh0SW5wdXQoaW5wdXRJZCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc3Bvc2VDb3B5OiBmdW5jdGlvbiAobWF0aCwgY29weSkge1xuICAgICAgICAgICAgICAgIGNvcHkuZGlzcG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIEluQ1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlcjtcbn0oSW5NZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyKSk7XG5leHBvcnRzLkluQ1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlciA9IEluQ1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlcjtcbnZhciBJbkdQVU1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbkdQVU1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW5HUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIEluR1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlci5wcm90b3R5cGUuZ2V0SW5wdXRQcm92aWRlciA9IGZ1bmN0aW9uIChpbnB1dElkKSB7XG4gICAgICAgIHZhciBzaHVmZmxlZElucHV0UHJvdmlkZXIgPSB0aGlzO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZ2V0TmV4dENvcHk6IGZ1bmN0aW9uIChtYXRoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hdGguY2xvbmUoc2h1ZmZsZWRJbnB1dFByb3ZpZGVyLmdldE5leHRJbnB1dChpbnB1dElkKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGlzcG9zZUNvcHk6IGZ1bmN0aW9uIChtYXRoLCBjb3B5KSB7XG4gICAgICAgICAgICAgICAgY29weS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcbiAgICByZXR1cm4gSW5HUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyO1xufShJbk1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXIpKTtcbmV4cG9ydHMuSW5HUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyID0gSW5HUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/data/input_provider.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/data/xhr-dataset.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/data/xhr-dataset.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar dataset_1 = __webpack_require__(/*! ./dataset */ \"./node_modules/deeplearn/dist/data/dataset.js\");\nvar PARSING_IMAGE_CANVAS_HEIGHT_PX = 1000;\nfunction getXhrDatasetConfig(jsonConfigPath) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', jsonConfigPath);\n        xhr.onload = function () {\n            resolve(JSON.parse(xhr.responseText));\n        };\n        xhr.onerror = function (error) {\n            reject(error);\n        };\n        xhr.send();\n    });\n}\nexports.getXhrDatasetConfig = getXhrDatasetConfig;\nvar XhrDataset = (function (_super) {\n    __extends(XhrDataset, _super);\n    function XhrDataset(xhrDatasetConfig) {\n        var _this = _super.call(this, xhrDatasetConfig.data.map(function (x) { return x.shape; })) || this;\n        _this.xhrDatasetConfig = xhrDatasetConfig;\n        return _this;\n    }\n    XhrDataset.prototype.getNDArray = function (info) {\n        var dataPromise = info.dataType === 'png' ?\n            parseTypedArrayFromPng(info, info.shape) :\n            parseTypedArrayFromBinary(info);\n        return dataPromise.then(function (data) {\n            var inputSize = util.sizeFromShape(info.shape);\n            var ndarrays = [];\n            for (var i = 0; i < data.length / inputSize; i++) {\n                var values = data.subarray(i * inputSize, (i + 1) * inputSize);\n                var ndarray = ndarray_1.NDArray.make(info.shape, { values: new Float32Array(values) });\n                ndarrays.push(ndarray);\n            }\n            return ndarrays;\n        });\n    };\n    XhrDataset.prototype.fetchData = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = _this.xhrDatasetConfig.data.map(function (x) { return _this.getNDArray(x); });\n            Promise.all(promises).then(function (data) {\n                _this.dataset = data;\n                resolve();\n            });\n        });\n    };\n    return XhrDataset;\n}(dataset_1.InMemoryDataset));\nexports.XhrDataset = XhrDataset;\nfunction parseTypedArrayFromBinary(info) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', info.path);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function (event) {\n            var data = (info.dataType === 'float32') ?\n                new Float32Array(xhr.response) :\n                new Uint8Array(xhr.response);\n            resolve(data);\n        };\n        xhr.onerror = function (err) { return reject(err); };\n        xhr.send();\n    });\n}\nfunction parseGrayscaleImageData(data, result, resultOffset) {\n    var idx = resultOffset;\n    for (var i = 0; i < data.length; i += 4) {\n        result[idx++] = data[i];\n    }\n}\nfunction parseRGBImageData(data, result, resultOffset) {\n    var idx = resultOffset;\n    for (var i = 0; i < data.length; i += 4) {\n        result[idx] = data[i];\n        result[idx + 1] = data[i + 1];\n        result[idx + 2] = data[i + 2];\n        idx += 3;\n    }\n}\nfunction parseImage(img, shape) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var N = img.height;\n    var inputSize = util.sizeFromShape(shape);\n    var result = new Uint8Array(N * inputSize);\n    if (img.width !== shape[0] * shape[1]) {\n        throw new Error(\"Image width (\" + img.width + \") must be multiple of \" +\n            (\"rows*columns (\" + shape[0] + \"*\" + shape[1] + \") of the ndarray\"));\n    }\n    canvas.width = img.width;\n    canvas.height = PARSING_IMAGE_CANVAS_HEIGHT_PX;\n    var sx = 0;\n    var sWidth = canvas.width;\n    var sHeight = canvas.height;\n    var dx = 0;\n    var dy = 0;\n    var dWidth = sWidth;\n    var dHeight = sHeight;\n    var depth = shape[2];\n    var offset = 0;\n    var numPasses = Math.ceil(N / canvas.height);\n    for (var pass = 0; pass < numPasses; ++pass) {\n        var sy = pass * canvas.height;\n        if ((pass === numPasses - 1) && (N % canvas.height > 0)) {\n            canvas.height = N % canvas.height;\n            sHeight = canvas.height;\n            dHeight = sHeight;\n        }\n        ctx.drawImage(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n        var data = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n        (depth === 1) ? parseGrayscaleImageData(data, result, offset) :\n            parseRGBImageData(data, result, offset);\n        offset += canvas.height * inputSize;\n    }\n    return result;\n}\nfunction parseTypedArrayFromPng(info, shape) {\n    return new Promise(function (resolve, reject) {\n        var img = new Image();\n        img.setAttribute('crossOrigin', '');\n        img.onload = function () {\n            var result = parseImage(img, shape);\n            img.src = '';\n            img = null;\n            resolve(result);\n        };\n        img.src = info.path;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/data/xhr-dataset.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/device_util.js":
/*!****************************************************!*\
  !*** ./node_modules/deeplearn/dist/device_util.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    var a = navigator.userAgent || navigator.vendor || window.opera;\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n        .test(a) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n}\nexports.isMobile = isMobile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZGV2aWNlX3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZGV2aWNlX3V0aWwuanM/ZGIyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGlzTW9iaWxlKCkge1xuICAgIHZhciBhID0gbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCBuYXZpZ2F0b3IudmVuZG9yIHx8IHdpbmRvdy5vcGVyYTtcbiAgICByZXR1cm4gLyhhbmRyb2lkfGJiXFxkK3xtZWVnbykuK21vYmlsZXxhdmFudGdvfGJhZGFcXC98YmxhY2tiZXJyeXxibGF6ZXJ8Y29tcGFsfGVsYWluZXxmZW5uZWN8aGlwdG9wfGllbW9iaWxlfGlwKGhvbmV8b2QpfGlyaXN8a2luZGxlfGxnZSB8bWFlbW98bWlkcHxtbXB8bW9iaWxlLitmaXJlZm94fG5ldGZyb250fG9wZXJhIG0ob2J8aW4paXxwYWxtKCBvcyk/fHBob25lfHAoaXhpfHJlKVxcL3xwbHVja2VyfHBvY2tldHxwc3B8c2VyaWVzKDR8NikwfHN5bWJpYW58dHJlb3x1cFxcLihicm93c2VyfGxpbmspfHZvZGFmb25lfHdhcHx3aW5kb3dzIGNlfHhkYXx4aWluby9pXG4gICAgICAgIC50ZXN0KGEpIHx8XG4gICAgICAgIC8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzXFwtKXxhaShrb3xybil8YWwoYXZ8Y2F8Y28pfGFtb2l8YW4oZXh8bnl8eXcpfGFwdHV8YXIoY2h8Z28pfGFzKHRlfHVzKXxhdHR3fGF1KGRpfFxcLW18ciB8cyApfGF2YW58YmUoY2t8bGx8bnEpfGJpKGxifHJkKXxibChhY3xheil8YnIoZXx2KXd8YnVtYnxid1xcLShufHUpfGM1NVxcL3xjYXBpfGNjd2F8Y2RtXFwtfGNlbGx8Y2h0bXxjbGRjfGNtZFxcLXxjbyhtcHxuZCl8Y3Jhd3xkYShpdHxsbHxuZyl8ZGJ0ZXxkY1xcLXN8ZGV2aXxkaWNhfGRtb2J8ZG8oY3xwKW98ZHMoMTJ8XFwtZCl8ZWwoNDl8YWkpfGVtKGwyfHVsKXxlcihpY3xrMCl8ZXNsOHxleihbNC03XTB8b3N8d2F8emUpfGZldGN8Zmx5KFxcLXxfKXxnMSB1fGc1NjB8Z2VuZXxnZlxcLTV8Z1xcLW1vfGdvKFxcLnd8b2QpfGdyKGFkfHVuKXxoYWllfGhjaXR8aGRcXC0obXxwfHQpfGhlaVxcLXxoaShwdHx0YSl8aHAoIGl8aXApfGhzXFwtY3xodChjKFxcLXwgfF98YXxnfHB8c3x0KXx0cCl8aHUoYXd8dGMpfGlcXC0oMjB8Z298bWEpfGkyMzB8aWFjKCB8XFwtfFxcLyl8aWJyb3xpZGVhfGlnMDF8aWtvbXxpbTFrfGlubm98aXBhcXxpcmlzfGphKHR8dilhfGpicm98amVtdXxqaWdzfGtkZGl8a2VqaXxrZ3QoIHxcXC8pfGtsb258a3B0IHxrd2NcXC18a3lvKGN8ayl8bGUobm98eGkpfGxnKCBnfFxcLyhrfGx8dSl8NTB8NTR8XFwtW2Etd10pfGxpYnd8bHlueHxtMVxcLXd8bTNnYXxtNTBcXC98bWEodGV8dWl8eG8pfG1jKDAxfDIxfGNhKXxtXFwtY3J8bWUocmN8cmkpfG1pKG84fG9hfHRzKXxtbWVmfG1vKDAxfDAyfGJpfGRlfGRvfHQoXFwtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSlcXC18b258dGZ8d2Z8d2d8d3QpfG5vayg2fGkpfG56cGh8bzJpbXxvcCh0aXx3dil8b3Jhbnxvd2cxfHA4MDB8cGFuKGF8ZHx0KXxwZHhnfHBnKDEzfFxcLShbMS04XXxjKSl8cGhpbHxwaXJlfHBsKGF5fHVjKXxwblxcLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdFxcLWd8cWFcXC1hfHFjKDA3fDEyfDIxfDMyfDYwfFxcLVsyLTddfGlcXC0pfHF0ZWt8cjM4MHxyNjAwfHJha3N8cmltOXxybyh2ZXx6byl8czU1XFwvfHNhKGdlfG1hfG1tfG1zfG55fHZhKXxzYygwMXxoXFwtfG9vfHBcXC0pfHNka1xcL3xzZShjKFxcLXwwfDEpfDQ3fG1jfG5kfHJpKXxzZ2hcXC18c2hhcnxzaWUoXFwtfG0pfHNrXFwtMHxzbCg0NXxpZCl8c20oYWx8YXJ8YjN8aXR8dDUpfHNvKGZ0fG55KXxzcCgwMXxoXFwtfHZcXC18diApfHN5KDAxfG1iKXx0MigxOHw1MCl8dDYoMDB8MTB8MTgpfHRhKGd0fGxrKXx0Y2xcXC18dGRnXFwtfHRlbChpfG0pfHRpbVxcLXx0XFwtbW98dG8ocGx8c2gpfHRzKDcwfG1cXC18bTN8bTUpfHR4XFwtOXx1cChcXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118XFwtdil8dm00MHx2b2RhfHZ1bGN8dngoNTJ8NTN8NjB8NjF8NzB8ODB8ODF8ODN8ODV8OTgpfHczYyhcXC18ICl8d2ViY3x3aGl0fHdpKGcgfG5jfG53KXx3bWxifHdvbnV8eDcwMHx5YXNcXC18eW91cnx6ZXRvfHp0ZVxcLS9pXG4gICAgICAgICAgICAudGVzdChhLnN1YnN0cigwLCA0KSk7XG59XG5leHBvcnRzLmlzTW9iaWxlID0gaXNNb2JpbGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/device_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/environment.js":
/*!****************************************************!*\
  !*** ./node_modules/deeplearn/dist/environment.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar device_util = __webpack_require__(/*! ./device_util */ \"./node_modules/deeplearn/dist/device_util.js\");\nvar backend_1 = __webpack_require__(/*! ./math/backends/backend */ \"./node_modules/deeplearn/dist/math/backends/backend.js\");\nvar math_1 = __webpack_require__(/*! ./math/math */ \"./node_modules/deeplearn/dist/math/math.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/deeplearn/dist/util.js\");\nvar Type;\n(function (Type) {\n    Type[Type[\"NUMBER\"] = 0] = \"NUMBER\";\n    Type[Type[\"BOOLEAN\"] = 1] = \"BOOLEAN\";\n})(Type = exports.Type || (exports.Type = {}));\nexports.URL_PROPERTIES = [\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED', type: Type.BOOLEAN },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', type: Type.BOOLEAN },\n    { name: 'WEBGL_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_FLOAT_TEXTURE_ENABLED', type: Type.BOOLEAN }, {\n        name: 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED',\n        type: Type.BOOLEAN\n    }\n];\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion === 0) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    var tempCanvas = document.createElement('canvas');\n    if (webGLVersion === 1) {\n        return (tempCanvas.getContext('webgl') ||\n            tempCanvas.getContext('experimental-webgl'));\n    }\n    return tempCanvas.getContext('webgl2');\n}\nfunction loseContext(gl) {\n    if (gl != null) {\n        var loseContextExtension = gl.getExtension('WEBGL_lose_context');\n        if (loseContextExtension == null) {\n            throw new Error('Extension WEBGL_lose_context not supported on this browser.');\n        }\n        loseContextExtension.loseContext();\n    }\n}\nfunction isWebGLVersionEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (gl != null) {\n        loseContext(gl);\n        return true;\n    }\n    return false;\n}\nfunction isWebGLDisjointQueryTimerEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var extensionName = webGLVersion === 1 ? 'EXT_disjoint_timer_query' :\n        'EXT_disjoint_timer_query_webgl2';\n    var ext = gl.getExtension(extensionName);\n    var isExtEnabled = ext != null;\n    if (gl != null) {\n        loseContext(gl);\n    }\n    return isExtEnabled;\n}\nfunction isFloatTextureReadPixelsEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (gl.getExtension('OES_texture_float') == null) {\n            return false;\n        }\n    }\n    else {\n        if (gl.getExtension('EXT_color_buffer_float') == null) {\n            return false;\n        }\n    }\n    var frameBuffer = gl.createFramebuffer();\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var internalFormat = webGLVersion === 2 ? gl.RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var frameBufferComplete = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, new Float32Array(4));\n    var readPixelsNoError = gl.getError() === gl.NO_ERROR;\n    loseContext(gl);\n    return frameBufferComplete && readPixelsNoError;\n}\nfunction isWebGLGetBufferSubDataAsyncExtensionEnabled(webGLVersion) {\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var ext = gl.getExtension('WEBGL_get_buffer_sub_data_async');\n    var isEnabled = ext != null;\n    loseContext(gl);\n    return isEnabled;\n}\nfunction getBestBackend() {\n    var orderedBackends = ['webgl', 'cpu'];\n    for (var i = 0; i < orderedBackends.length; ++i) {\n        var backendId = orderedBackends[i];\n        if (backendId in backend_1.BACKEND_REGISTRY) {\n            return backendId;\n        }\n    }\n    throw new Error('No backend found in registry.');\n}\nvar Environment = (function () {\n    function Environment(features) {\n        this.features = {};\n        this.globalMath = null;\n        if (features != null) {\n            this.features = features;\n        }\n    }\n    Environment.prototype.get = function (feature) {\n        if (feature in this.features) {\n            return this.features[feature];\n        }\n        this.features[feature] = this.evaluateFeature(feature);\n        return this.features[feature];\n    };\n    Environment.prototype.evaluateFeature = function (feature) {\n        if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED') {\n            var webGLVersion = this.get('WEBGL_VERSION');\n            if (webGLVersion === 0) {\n                return false;\n            }\n            return isWebGLDisjointQueryTimerEnabled(webGLVersion);\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') {\n            return this.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED') &&\n                !device_util.isMobile();\n        }\n        else if (feature === 'WEBGL_VERSION') {\n            if (isWebGLVersionEnabled(2)) {\n                return 2;\n            }\n            else if (isWebGLVersionEnabled(1)) {\n                return 1;\n            }\n            return 0;\n        }\n        else if (feature === 'WEBGL_FLOAT_TEXTURE_ENABLED') {\n            return isFloatTextureReadPixelsEnabled(this.get('WEBGL_VERSION'));\n        }\n        else if (feature === 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') {\n            return isWebGLGetBufferSubDataAsyncExtensionEnabled(this.get('WEBGL_VERSION'));\n        }\n        throw new Error(\"Unknown feature \" + feature + \".\");\n    };\n    Environment.prototype.setGlobalMath = function (math) {\n        this.globalMath = math;\n    };\n    Object.defineProperty(Environment.prototype, \"math\", {\n        get: function () {\n            if (this.globalMath == null) {\n                var bestBackend = getBestBackend();\n                var safeMode = false;\n                this.globalMath = new math_1.NDArrayMath(bestBackend, safeMode);\n            }\n            return this.globalMath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Environment;\n}());\nexports.Environment = Environment;\nvar DEEPLEARNJS_FLAGS_PREFIX = 'dljsflags';\nfunction getFeaturesFromURL() {\n    var features = {};\n    if (typeof window === 'undefined') {\n        return features;\n    }\n    var urlParams = util.getQueryParams(window.location.search);\n    if (DEEPLEARNJS_FLAGS_PREFIX in urlParams) {\n        var urlFlags_1 = {};\n        var keyValues = urlParams[DEEPLEARNJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n            var _a = keyValue.split(':'), key = _a[0], value = _a[1];\n            urlFlags_1[key] = value;\n        });\n        exports.URL_PROPERTIES.forEach(function (urlProperty) {\n            if (urlProperty.name in urlFlags_1) {\n                console.log(\"Setting feature override from URL \" + urlProperty.name + \": \" +\n                    (\"\" + urlFlags_1[urlProperty.name]));\n                if (urlProperty.type === Type.NUMBER) {\n                    features[urlProperty.name] = +urlFlags_1[urlProperty.name];\n                }\n                else if (urlProperty.type === Type.BOOLEAN) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name] === 'true';\n                }\n                else {\n                    console.warn(\"Unknown URL param: \" + urlProperty.name + \".\");\n                }\n            }\n        });\n    }\n    return features;\n}\nexports.ENV = new Environment(getFeaturesFromURL());\nfunction setEnvironment(environment) {\n    exports.ENV = environment;\n}\nexports.setEnvironment = setEnvironment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/environment.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/graph.js":
/*!****************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/graph.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar initializers_1 = __webpack_require__(/*! ../initializers */ \"./node_modules/deeplearn/dist/initializers.js\");\nvar concat_util = __webpack_require__(/*! ../math/concat_util */ \"./node_modules/deeplearn/dist/math/concat_util.js\");\nvar conv_util = __webpack_require__(/*! ../math/conv_util */ \"./node_modules/deeplearn/dist/math/conv_util.js\");\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar GraphLayers = (function () {\n    function GraphLayers(g) {\n        this.g = g;\n    }\n    GraphLayers.prototype.dense = function (name, x, units, activation, useBias, kernelInitializer, biasInitializer) {\n        if (activation === void 0) { activation = null; }\n        if (useBias === void 0) { useBias = true; }\n        if (kernelInitializer === void 0) { kernelInitializer = new initializers_1.VarianceScalingInitializer(); }\n        if (biasInitializer === void 0) { biasInitializer = new initializers_1.ZerosInitializer(); }\n        var weights = this.g.variable(name + '-weights', kernelInitializer.initialize([x.shape[0], units], x.shape[0], units));\n        var out = this.g.matmul(x, weights);\n        if (useBias) {\n            var bias = this.g.variable(name + '-bias', biasInitializer.initialize([units], x.shape[0], units));\n            out = this.g.add(out, bias);\n        }\n        if (activation != null) {\n            out = activation(out);\n        }\n        return out;\n    };\n    return GraphLayers;\n}());\nexports.GraphLayers = GraphLayers;\nvar Graph = (function () {\n    function Graph() {\n        this.nodes = [];\n        this.layers = new GraphLayers(this);\n    }\n    Graph.prototype.variable = function (name, data) {\n        return this.addNodeAndReturnOutput(new VariableNode(this, name, data));\n    };\n    Graph.prototype.placeholder = function (name, shape) {\n        return this.addNodeAndReturnOutput(new PlaceholderNode(this, name, shape));\n    };\n    Graph.prototype.constant = function (value) {\n        var finalValue;\n        if (typeof value === 'number') {\n            finalValue = ndarray_1.Scalar.new(value);\n        }\n        else if (value instanceof ndarray_1.NDArray) {\n            finalValue = value;\n        }\n        else if (value instanceof Array) {\n            var flatValues = util.flatten(value);\n            var vals = new Float32Array(flatValues);\n            finalValue = ndarray_1.NDArray.make(util.inferShape(value), { values: vals });\n        }\n        else {\n            throw new Error('unimplemented constant type.');\n        }\n        return this.addNodeAndReturnOutput(new ConstantNode(this, finalValue));\n    };\n    Graph.prototype.reshape = function (x, shape) {\n        return this.addNodeAndReturnOutput(new ReshapeNode(this, 'Reshape', x, shape));\n    };\n    Graph.prototype.fusedLinearCombination = function (x1, x2, c1, c2) {\n        return this.addNodeAndReturnOutput(new FusedLinearCombinationNode(this, x1, x2, c1, c2));\n    };\n    Graph.prototype.add = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new AddNode(this, x1, x2));\n    };\n    Graph.prototype.subtract = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new SubtractNode(this, x1, x2));\n    };\n    Graph.prototype.multiply = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new MultiplyNode(this, x1, x2));\n    };\n    Graph.prototype.divide = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new DivideNode(this, x1, x2));\n    };\n    Graph.prototype.reduceSum = function (x) {\n        return this.addNodeAndReturnOutput(new ReduceSumNode(this, x));\n    };\n    Graph.prototype.concat3d = function (x1, x2, axis) {\n        return this.addNodeAndReturnOutput(new Concat3DNode(this, x1, x2, axis));\n    };\n    Graph.prototype.matmul = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new MatMulNode(this, x1, x2));\n    };\n    Graph.prototype.conv2d = function (x, w, b, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        return this.addNodeAndReturnOutput(new Convolution2DNode(this, x, w, b, fieldSize, outputDepth, stride, zeroPad));\n    };\n    Graph.prototype.maxPool = function (x, fieldSize, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        return this.addNodeAndReturnOutput(new MaxPoolNode(this, x, fieldSize, stride, zeroPad));\n    };\n    Graph.prototype.exp = function (x) {\n        return this.addNodeAndReturnOutput(new ExpNode(this, x));\n    };\n    Graph.prototype.log = function (x) {\n        return this.addNodeAndReturnOutput(new LogNode(this, x));\n    };\n    Graph.prototype.relu = function (x) {\n        return this.addNodeAndReturnOutput(new ReLUNode(this, x));\n    };\n    Graph.prototype.leakyRelu = function (x, alpha) {\n        return this.addNodeAndReturnOutput(new LeakyReLUNode(this, x, alpha));\n    };\n    Graph.prototype.elu = function (x) {\n        return this.addNodeAndReturnOutput(new EluNode(this, x));\n    };\n    Graph.prototype.tanh = function (x) {\n        return this.addNodeAndReturnOutput(new TanHNode(this, x));\n    };\n    Graph.prototype.sigmoid = function (x) {\n        return this.addNodeAndReturnOutput(new SigmoidNode(this, x));\n    };\n    Graph.prototype.square = function (x) {\n        return this.addNodeAndReturnOutput(new SquareNode(this, x));\n    };\n    Graph.prototype.softmax = function (x) {\n        return this.addNodeAndReturnOutput(new SoftmaxNode(this, x));\n    };\n    Graph.prototype.softmaxCrossEntropyCost = function (x, target) {\n        return this.addNodeAndReturnOutput(new SoftmaxCrossEntropyCostNode(this, x, target));\n    };\n    Graph.prototype.meanSquaredCost = function (label, prediction) {\n        return this.addNodeAndReturnOutput(new MeanSquaredCostNode(this, label, prediction));\n    };\n    Graph.prototype.argmax = function (x) {\n        return this.addNodeAndReturnOutput(new ArgMaxNode(this, x));\n    };\n    Graph.prototype.argmaxEquals = function (x1, x2) {\n        return this.addNodeAndReturnOutput(new ArgMaxEqualsNode(this, x1, x2));\n    };\n    Graph.prototype.addNodeAndReturnOutput = function (node) {\n        this.nodes.push(node);\n        node.validate();\n        return node.output;\n    };\n    Graph.prototype.getNodes = function () {\n        return this.nodes;\n    };\n    return Graph;\n}());\nexports.Graph = Graph;\nvar Tensor = (function () {\n    function Tensor(shape) {\n        this.shape = shape;\n        this.id = Tensor.nextID++;\n    }\n    Tensor.nextID = 0;\n    return Tensor;\n}());\nexports.Tensor = Tensor;\nvar Node = (function () {\n    function Node(graph, name, inputs, output) {\n        this.graph = graph;\n        this.name = name;\n        this.inputs = inputs;\n        this.output = output;\n        this.id = Node.nextID++;\n        output.node = this;\n    }\n    Node.nextID = 0;\n    return Node;\n}());\nexports.Node = Node;\nvar VariableNode = (function (_super) {\n    __extends(VariableNode, _super);\n    function VariableNode(graph, name, data) {\n        var _this = _super.call(this, graph, name, {}, new Tensor(data.shape)) || this;\n        _this.data = data;\n        return _this;\n    }\n    VariableNode.prototype.validate = function () {\n        util.assert(this.data != null, 'Error adding variable op: Data for variable \\'' + this.name +\n            '\\' is null or undefined');\n    };\n    return VariableNode;\n}(Node));\nexports.VariableNode = VariableNode;\nvar PlaceholderNode = (function (_super) {\n    __extends(PlaceholderNode, _super);\n    function PlaceholderNode(graph, name, shape) {\n        return _super.call(this, graph, name, {}, new Tensor(shape)) || this;\n    }\n    PlaceholderNode.prototype.validate = function () { };\n    return PlaceholderNode;\n}(Node));\nexports.PlaceholderNode = PlaceholderNode;\nvar ConstantNode = (function (_super) {\n    __extends(ConstantNode, _super);\n    function ConstantNode(graph, data) {\n        var _this = _super.call(this, graph, 'Constant', {}, new Tensor(data.shape)) || this;\n        _this.data = data;\n        return _this;\n    }\n    ConstantNode.prototype.validate = function () {\n        util.assert(this.data != null, 'Error adding constant: data for placeholder \\'' + this.name +\n            '\\' is null or undefined');\n    };\n    return ConstantNode;\n}(Node));\nexports.ConstantNode = ConstantNode;\nvar ReshapeNode = (function (_super) {\n    __extends(ReshapeNode, _super);\n    function ReshapeNode(graph, name, x, shape) {\n        var _this = _super.call(this, graph, name, { x: x }, new Tensor(shape)) || this;\n        _this.name = name;\n        _this.x = x;\n        _this.shape = shape;\n        return _this;\n    }\n    ReshapeNode.prototype.validate = function () {\n        var xSize = util.sizeFromShape(this.x.shape);\n        var shapeSize = util.sizeFromShape(this.shape);\n        util.assert(xSize === shapeSize, \"Error making reshape operation: input to reshape '\" + this.name + \"'\" +\n            (\" of shape (\" + this.x.shape + \") does not match size of \") +\n            (\"requested shape \" + this.shape + \".\"));\n    };\n    ReshapeNode.X = 'x';\n    return ReshapeNode;\n}(Node));\nexports.ReshapeNode = ReshapeNode;\nvar FusedLinearCombinationNode = (function (_super) {\n    __extends(FusedLinearCombinationNode, _super);\n    function FusedLinearCombinationNode(graph, t1, t2, c1, c2) {\n        var _this = _super.call(this, graph, 'Linear Combination', { t1: t1, t2: t2, c1: c1, c2: c2 }, new Tensor(t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        _this.c1 = c1;\n        _this.c2 = c2;\n        return _this;\n    }\n    FusedLinearCombinationNode.prototype.validate = function () {\n        util.assertShapesMatch(this.t1.shape, this.t2.shape);\n        if (!util.isScalarShape(this.c1.shape)) {\n            throw new Error('Error adding fusedLinearCombination: c1 is not a scalar, got ' +\n                (\"shape: \" + this.c1.shape));\n        }\n        if (!util.isScalarShape(this.c2.shape)) {\n            throw new Error('Error adding fusedLinearCombination: c2 is not a scalar, got ' +\n                (\"shape: \" + this.c2.shape));\n        }\n    };\n    FusedLinearCombinationNode.T1 = 't1';\n    FusedLinearCombinationNode.T2 = 't2';\n    FusedLinearCombinationNode.C1 = 'c1';\n    FusedLinearCombinationNode.C2 = 'c2';\n    return FusedLinearCombinationNode;\n}(Node));\nexports.FusedLinearCombinationNode = FusedLinearCombinationNode;\nvar AddNode = (function (_super) {\n    __extends(AddNode, _super);\n    function AddNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Add', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1\n            ? t2.shape\n            : (t1.shape.length < t2.shape.length ? t2.shape : t1.shape))) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    AddNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape) ||\n            (this.t1.shape.length === 2 && this.t2.shape.length === 1 &&\n                this.t1.shape[1] === this.t2.shape[0]) ||\n            (this.t1.shape.length === 1 && this.t2.shape.length === 2 &&\n                this.t1.shape[0] === this.t2.shape[1]), 'Error adding add operation op: one of inputs must be scalar, ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match,\") +\n            'or one of them can be broadcasted (2D and 1D).');\n    };\n    AddNode.T1 = 't1';\n    AddNode.T2 = 't2';\n    return AddNode;\n}(Node));\nexports.AddNode = AddNode;\nvar SubtractNode = (function (_super) {\n    __extends(SubtractNode, _super);\n    function SubtractNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Subtract', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    SubtractNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding subtract op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    SubtractNode.T1 = 't1';\n    SubtractNode.T2 = 't2';\n    return SubtractNode;\n}(Node));\nexports.SubtractNode = SubtractNode;\nvar MultiplyNode = (function (_super) {\n    __extends(MultiplyNode, _super);\n    function MultiplyNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Multiply', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    MultiplyNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding multiply op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    MultiplyNode.T1 = 't1';\n    MultiplyNode.T2 = 't2';\n    return MultiplyNode;\n}(Node));\nexports.MultiplyNode = MultiplyNode;\nvar DivideNode = (function (_super) {\n    __extends(DivideNode, _super);\n    function DivideNode(graph, t1, t2) {\n        var _this = _super.call(this, graph, 'Divide', { t1: t1, t2: t2 }, new Tensor(util.sizeFromShape(t1.shape) === 1 ? t2.shape : t1.shape)) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        return _this;\n    }\n    DivideNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.t1.shape) === 1 ||\n            util.sizeFromShape(this.t2.shape) === 1 ||\n            util.arraysEqual(this.t1.shape, this.t2.shape), 'Error adding divide op: one of inputs must be scalar or the ' +\n            (\"shapes \" + this.t1.shape + \" and \" + this.t2.shape + \" must match.\"));\n    };\n    DivideNode.T1 = 't1';\n    DivideNode.T2 = 't2';\n    return DivideNode;\n}(Node));\nexports.DivideNode = DivideNode;\nvar ReduceSumNode = (function (_super) {\n    __extends(ReduceSumNode, _super);\n    function ReduceSumNode(graph, x) {\n        return _super.call(this, graph, 'ReduceSum', { x: x }, new Tensor([])) || this;\n    }\n    ReduceSumNode.prototype.validate = function () { };\n    ReduceSumNode.X = 'x';\n    return ReduceSumNode;\n}(Node));\nexports.ReduceSumNode = ReduceSumNode;\nvar Concat3DNode = (function (_super) {\n    __extends(Concat3DNode, _super);\n    function Concat3DNode(graph, x1, x2, axis) {\n        var _this = _super.call(this, graph, 'Concat3D', { x1: x1, x2: x2 }, new Tensor(concat_util.computeOutShape(x1.shape, x2.shape, axis))) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        _this.axis = axis;\n        return _this;\n    }\n    Concat3DNode.prototype.validate = function () {\n        concat_util.assertParams(this.x1.shape, this.x2.shape, this.axis);\n    };\n    Concat3DNode.X1 = 'x1';\n    Concat3DNode.X2 = 'x2';\n    Concat3DNode.AXIS = 'axis';\n    return Concat3DNode;\n}(Node));\nexports.Concat3DNode = Concat3DNode;\nfunction getMatMulOutputShape(x1Shape, x2Shape) {\n    if (x1Shape.length === 1 && x2Shape.length === 1) {\n        return [1];\n    }\n    else if (x1Shape.length === 1 && x2Shape.length === 2) {\n        return [x2Shape[1]];\n    }\n    else if (x1Shape.length === 2 && x2Shape.length === 1) {\n        return [x1Shape[0]];\n    }\n    return [x1Shape[0], x2Shape[1]];\n}\nvar MatMulNode = (function (_super) {\n    __extends(MatMulNode, _super);\n    function MatMulNode(graph, x1, x2) {\n        var _this = _super.call(this, graph, 'MatMul', { x1: x1, x2: x2 }, new Tensor(getMatMulOutputShape(x1.shape, x2.shape))) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        return _this;\n    }\n    MatMulNode.prototype.validate = function () {\n        if (this.x1.shape.length === 2 && this.x2.shape.length === 2) {\n            util.assert(this.x1.shape[1] === this.x2.shape[0], 'Error adding matmul op: inner shapes of matrices with shapes ' +\n                (this.x1.shape + \" and \" + this.x2.shape + \" must match.\"));\n        }\n        else if (this.x1.shape.length === 2 && this.x2.shape.length === 1) {\n            util.assert(this.x1.shape[1] === this.x2.shape[0], 'Error adding matmul op: second dimension of matrix with shape ' +\n                this.x1.shape.toString() +\n                (\" must match size of vector with shape \" + this.x2.shape + \".\"));\n        }\n        else if (this.x1.shape.length === 1 && this.x2.shape.length === 2) {\n            util.assert(this.x1.shape[0] === this.x2.shape[0], \"Error adding matmul op: size of vector with shape \" + this.x1.shape +\n                \" must match first dimension of matrix with \" +\n                (\"shape \" + this.x2.shape + \".\"));\n        }\n        else {\n            throw new Error('Error adding matmul op: inputs must be vectors or matrices.');\n        }\n    };\n    MatMulNode.X1 = 'x1';\n    MatMulNode.X2 = 'x2';\n    return MatMulNode;\n}(Node));\nexports.MatMulNode = MatMulNode;\nvar Convolution2DNode = (function (_super) {\n    __extends(Convolution2DNode, _super);\n    function Convolution2DNode(graph, x, w, b, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this, graph, 'Convolution 2D', { x: x, w: w, b: b }, new Tensor(conv_util.computeOutputShape3D(x.shape, fieldSize, outputDepth, stride, zeroPad))) || this;\n        _this.x = x;\n        _this.w = w;\n        _this.b = b;\n        _this.fieldSize = fieldSize;\n        _this.outputDepth = outputDepth;\n        _this.stride = stride;\n        _this.zeroPad = zeroPad;\n        return _this;\n    }\n    Convolution2DNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 3, 'Error adding conv2d op: input must be of rank 3, but got shape: ' +\n            (this.x.shape + \".\"));\n        util.assert(this.w.shape.length === 4, 'Error adding conv2d op: weights must be of rank 4, but got shape: ' +\n            (this.w.shape + \".\"));\n        util.assert(this.b.shape.length === 1, 'Error adding conv2d op: biases must be of rank 1, but got shape: ' +\n            (this.b.shape + \".\"));\n        util.assert(this.x.shape[2] === this.w.shape[2], \"Error adding conv2d op: depth of input (\" + this.x.shape[2] + \") \" +\n            (\"must match input depth for weights (\" + this.w.shape[2] + \").\"));\n    };\n    Convolution2DNode.X = 'x';\n    Convolution2DNode.W = 'w';\n    Convolution2DNode.B = 'b';\n    return Convolution2DNode;\n}(Node));\nexports.Convolution2DNode = Convolution2DNode;\nvar MaxPoolNode = (function (_super) {\n    __extends(MaxPoolNode, _super);\n    function MaxPoolNode(graph, x, fieldSize, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this, graph, 'Max pool', { x: x }, new Tensor(conv_util.computeOutputShape3D(x.shape, fieldSize, x.shape[2], stride, zeroPad))) || this;\n        _this.x = x;\n        _this.fieldSize = fieldSize;\n        _this.stride = stride;\n        _this.zeroPad = zeroPad;\n        return _this;\n    }\n    MaxPoolNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 3, 'Error adding maxPool op: input must be of rank 3, but got shape: ' +\n            (this.x.shape + \".\"));\n    };\n    MaxPoolNode.X = 'x';\n    return MaxPoolNode;\n}(Node));\nexports.MaxPoolNode = MaxPoolNode;\nvar ReLUNode = (function (_super) {\n    __extends(ReLUNode, _super);\n    function ReLUNode(graph, x) {\n        return _super.call(this, graph, 'ReLU', { x: x }, new Tensor(x.shape)) || this;\n    }\n    ReLUNode.prototype.validate = function () { };\n    ReLUNode.X = 'x';\n    return ReLUNode;\n}(Node));\nexports.ReLUNode = ReLUNode;\nvar LeakyReLUNode = (function (_super) {\n    __extends(LeakyReLUNode, _super);\n    function LeakyReLUNode(graph, x, alpha) {\n        var _this = _super.call(this, graph, 'LeakyReLU', { x: x }, new Tensor(x.shape)) || this;\n        _this.alpha = alpha;\n        return _this;\n    }\n    LeakyReLUNode.prototype.validate = function () { };\n    LeakyReLUNode.X = 'x';\n    return LeakyReLUNode;\n}(Node));\nexports.LeakyReLUNode = LeakyReLUNode;\nvar EluNode = (function (_super) {\n    __extends(EluNode, _super);\n    function EluNode(graph, x) {\n        return _super.call(this, graph, 'Elu', { x: x }, new Tensor(x.shape)) || this;\n    }\n    EluNode.prototype.validate = function () { };\n    EluNode.X = 'x';\n    return EluNode;\n}(Node));\nexports.EluNode = EluNode;\nvar ExpNode = (function (_super) {\n    __extends(ExpNode, _super);\n    function ExpNode(graph, x) {\n        return _super.call(this, graph, 'Exp', { x: x }, new Tensor(x.shape)) || this;\n    }\n    ExpNode.prototype.validate = function () { };\n    ExpNode.X = 'x';\n    return ExpNode;\n}(Node));\nexports.ExpNode = ExpNode;\nvar LogNode = (function (_super) {\n    __extends(LogNode, _super);\n    function LogNode(graph, x) {\n        return _super.call(this, graph, 'Log', { x: x }, new Tensor(x.shape)) || this;\n    }\n    LogNode.prototype.validate = function () { };\n    LogNode.X = 'x';\n    return LogNode;\n}(Node));\nexports.LogNode = LogNode;\nvar TanHNode = (function (_super) {\n    __extends(TanHNode, _super);\n    function TanHNode(graph, x) {\n        return _super.call(this, graph, 'TanH', { x: x }, new Tensor(x.shape)) || this;\n    }\n    TanHNode.prototype.validate = function () { };\n    TanHNode.X = 'x';\n    return TanHNode;\n}(Node));\nexports.TanHNode = TanHNode;\nvar SigmoidNode = (function (_super) {\n    __extends(SigmoidNode, _super);\n    function SigmoidNode(graph, x) {\n        return _super.call(this, graph, 'Sigmoid', { x: x }, new Tensor(x.shape)) || this;\n    }\n    SigmoidNode.prototype.validate = function () { };\n    SigmoidNode.X = 'x';\n    return SigmoidNode;\n}(Node));\nexports.SigmoidNode = SigmoidNode;\nvar SquareNode = (function (_super) {\n    __extends(SquareNode, _super);\n    function SquareNode(graph, x) {\n        return _super.call(this, graph, 'Square', { x: x }, new Tensor(x.shape)) || this;\n    }\n    SquareNode.prototype.validate = function () { };\n    SquareNode.X = 'x';\n    return SquareNode;\n}(Node));\nexports.SquareNode = SquareNode;\nvar SoftmaxCrossEntropyCostNode = (function (_super) {\n    __extends(SoftmaxCrossEntropyCostNode, _super);\n    function SoftmaxCrossEntropyCostNode(graph, x, target) {\n        var _this = _super.call(this, graph, 'SoftmaxCrossEntropyCost', { x: x, target: target }, new Tensor([])) || this;\n        _this.x = x;\n        _this.target = target;\n        return _this;\n    }\n    SoftmaxCrossEntropyCostNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.x.shape, this.target.shape), \"Error adding softmaxCrossEntropyCost op: x shape (\" + this.x.shape + \") \" +\n            (\"must match target shape (\" + this.target.shape + \").\"));\n    };\n    SoftmaxCrossEntropyCostNode.X = 'x';\n    SoftmaxCrossEntropyCostNode.TARGET = 'target';\n    return SoftmaxCrossEntropyCostNode;\n}(Node));\nexports.SoftmaxCrossEntropyCostNode = SoftmaxCrossEntropyCostNode;\nvar SoftmaxNode = (function (_super) {\n    __extends(SoftmaxNode, _super);\n    function SoftmaxNode(graph, x) {\n        var _this = _super.call(this, graph, 'Softmax', { x: x }, new Tensor(x.shape)) || this;\n        _this.x = x;\n        return _this;\n    }\n    SoftmaxNode.prototype.validate = function () {\n        util.assert(this.x.shape.length === 1, 'The input to a softmax must be a 1-D tensor');\n        util.assert(this.x.shape[0] >= 2, 'The input to a softmax must have at least 2 values');\n    };\n    SoftmaxNode.X = 'x';\n    return SoftmaxNode;\n}(Node));\nexports.SoftmaxNode = SoftmaxNode;\nvar MeanSquaredCostNode = (function (_super) {\n    __extends(MeanSquaredCostNode, _super);\n    function MeanSquaredCostNode(graph, label, prediction) {\n        var _this = _super.call(this, graph, 'Mean Squared Cost', { label: label, prediction: prediction }, new Tensor([])) || this;\n        _this.label = label;\n        _this.prediction = prediction;\n        return _this;\n    }\n    MeanSquaredCostNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.label.shape, this.prediction.shape), \"Error adding meanSquaredCost op: label shape (\" + this.label.shape + \") \" +\n            (\"must match prediction shape (\" + this.prediction.shape + \").\"));\n    };\n    MeanSquaredCostNode.LABEL = 'label';\n    MeanSquaredCostNode.PREDICTION = 'prediction';\n    return MeanSquaredCostNode;\n}(Node));\nexports.MeanSquaredCostNode = MeanSquaredCostNode;\nvar ArgMaxNode = (function (_super) {\n    __extends(ArgMaxNode, _super);\n    function ArgMaxNode(graph, x) {\n        var _this = _super.call(this, graph, 'ArgMax', { x: x }, new Tensor([1])) || this;\n        _this.x = x;\n        return _this;\n    }\n    ArgMaxNode.prototype.validate = function () {\n        util.assert(util.sizeFromShape(this.x.shape) > 0, 'Error adding argmax op: input tensor must have at least one entry.');\n    };\n    ArgMaxNode.X = 'x';\n    return ArgMaxNode;\n}(Node));\nexports.ArgMaxNode = ArgMaxNode;\nvar ArgMaxEqualsNode = (function (_super) {\n    __extends(ArgMaxEqualsNode, _super);\n    function ArgMaxEqualsNode(graph, x1, x2) {\n        var _this = _super.call(this, graph, 'ArgMaxEquals', { x1: x1, x2: x2 }, new Tensor([1])) || this;\n        _this.x1 = x1;\n        _this.x2 = x2;\n        return _this;\n    }\n    ArgMaxEqualsNode.prototype.validate = function () {\n        util.assert(util.arraysEqual(this.x1.shape, this.x2.shape), \"Error adding ArgMaxEquals op: x1 shape (\" + this.x1.shape + \") \" +\n            (\"must match x2 shape (\" + this.x2.shape + \").\"));\n    };\n    ArgMaxEqualsNode.X1 = 'x1';\n    ArgMaxEqualsNode.X2 = 'x2';\n    return ArgMaxEqualsNode;\n}(Node));\nexports.ArgMaxEqualsNode = ArgMaxEqualsNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/graph.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/graph_util.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/graph_util.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_1 = __webpack_require__(/*! ./graph */ \"./node_modules/deeplearn/dist/graph/graph.js\");\nvar priority_queue = __webpack_require__(/*! ./priority_queue */ \"./node_modules/deeplearn/dist/graph/priority_queue.js\");\nvar priority_queue_1 = __webpack_require__(/*! ./priority_queue */ \"./node_modules/deeplearn/dist/graph/priority_queue.js\");\nfunction getUnorderedEvaluationSet(nodes, terminatingNodes) {\n    var terminatingNodeMap = {};\n    var seen = {};\n    var set = [];\n    var visit = nodes.slice();\n    terminatingNodes.forEach(function (node) { return terminatingNodeMap[node.id] = node; });\n    var _loop_1 = function () {\n        var cur = visit.pop();\n        if (seen[cur.id] == null) {\n            if (terminatingNodeMap[cur.id] == null) {\n                Object.keys(cur.inputs)\n                    .map(function (inputName) { return cur.inputs[inputName]; })\n                    .forEach(function (input) { return visit.push(input.node); });\n            }\n            set.push(cur);\n            seen[cur.id] = cur;\n        }\n    };\n    while (visit.length !== 0) {\n        _loop_1();\n    }\n    return set;\n}\nexports.getUnorderedEvaluationSet = getUnorderedEvaluationSet;\nfunction getOrderedEvaluationSet(unorderedEvaluationSet) {\n    var set = [];\n    var nodeIndices = {};\n    var pendingDependencies = {};\n    var nodeQueue = new priority_queue_1.PriorityQueue(function (a, b) { return priority_queue.defaultCompare(pendingDependencies[a.id], pendingDependencies[b.id]); }, function (node, newIndex) { return nodeIndices[node.id] = newIndex; });\n    unorderedEvaluationSet.forEach(function (node) { return pendingDependencies[node.id] = 0; });\n    unorderedEvaluationSet.forEach(function (node) { return Object.keys(node.inputs)\n        .map(function (key) { return node.inputs[key]; })\n        .forEach(function (input) {\n        if (unorderedEvaluationSet.indexOf(input.node) !== -1) {\n            pendingDependencies[input.node.id]++;\n        }\n    }); });\n    unorderedEvaluationSet.forEach(function (node) { return nodeQueue.enqueue(node); });\n    while (!nodeQueue.empty()) {\n        set.unshift(nodeQueue.dequeue());\n        Object.keys(set[0].inputs).map(function (key) { return set[0].inputs[key]; }).forEach(function (input) {\n            if (unorderedEvaluationSet.indexOf(input.node) === -1) {\n                return;\n            }\n            pendingDependencies[input.node.id]--;\n            nodeQueue.update(input.node, nodeIndices[input.node.id]);\n        });\n    }\n    return set;\n}\nexports.getOrderedEvaluationSet = getOrderedEvaluationSet;\nfunction isInputNode(node) {\n    return Object.keys(node.inputs).length === 0;\n}\nexports.isInputNode = isInputNode;\nfunction shouldBackProp(t) {\n    return !(t.node instanceof graph_1.ConstantNode);\n}\nexports.shouldBackProp = shouldBackProp;\nfunction isPassthroughNode(node, map) {\n    var keys = Object.keys(node.inputs);\n    for (var i = 0; i < keys.length; i++) {\n        var input = node.inputs[keys[i]];\n        if (map.get(input, true) === map.get(node.output, true)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isPassthroughNode = isPassthroughNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvZ3JhcGhfdXRpbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9ncmFwaF91dGlsLmpzP2YzYzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhfMSA9IHJlcXVpcmUoXCIuL2dyYXBoXCIpO1xudmFyIHByaW9yaXR5X3F1ZXVlID0gcmVxdWlyZShcIi4vcHJpb3JpdHlfcXVldWVcIik7XG52YXIgcHJpb3JpdHlfcXVldWVfMSA9IHJlcXVpcmUoXCIuL3ByaW9yaXR5X3F1ZXVlXCIpO1xuZnVuY3Rpb24gZ2V0VW5vcmRlcmVkRXZhbHVhdGlvblNldChub2RlcywgdGVybWluYXRpbmdOb2Rlcykge1xuICAgIHZhciB0ZXJtaW5hdGluZ05vZGVNYXAgPSB7fTtcbiAgICB2YXIgc2VlbiA9IHt9O1xuICAgIHZhciBzZXQgPSBbXTtcbiAgICB2YXIgdmlzaXQgPSBub2Rlcy5zbGljZSgpO1xuICAgIHRlcm1pbmF0aW5nTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkgeyByZXR1cm4gdGVybWluYXRpbmdOb2RlTWFwW25vZGUuaWRdID0gbm9kZTsgfSk7XG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjdXIgPSB2aXNpdC5wb3AoKTtcbiAgICAgICAgaWYgKHNlZW5bY3VyLmlkXSA9PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodGVybWluYXRpbmdOb2RlTWFwW2N1ci5pZF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGN1ci5pbnB1dHMpXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGlucHV0TmFtZSkgeyByZXR1cm4gY3VyLmlucHV0c1tpbnB1dE5hbWVdOyB9KVxuICAgICAgICAgICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIHZpc2l0LnB1c2goaW5wdXQubm9kZSk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0LnB1c2goY3VyKTtcbiAgICAgICAgICAgIHNlZW5bY3VyLmlkXSA9IGN1cjtcbiAgICAgICAgfVxuICAgIH07XG4gICAgd2hpbGUgKHZpc2l0Lmxlbmd0aCAhPT0gMCkge1xuICAgICAgICBfbG9vcF8xKCk7XG4gICAgfVxuICAgIHJldHVybiBzZXQ7XG59XG5leHBvcnRzLmdldFVub3JkZXJlZEV2YWx1YXRpb25TZXQgPSBnZXRVbm9yZGVyZWRFdmFsdWF0aW9uU2V0O1xuZnVuY3Rpb24gZ2V0T3JkZXJlZEV2YWx1YXRpb25TZXQodW5vcmRlcmVkRXZhbHVhdGlvblNldCkge1xuICAgIHZhciBzZXQgPSBbXTtcbiAgICB2YXIgbm9kZUluZGljZXMgPSB7fTtcbiAgICB2YXIgcGVuZGluZ0RlcGVuZGVuY2llcyA9IHt9O1xuICAgIHZhciBub2RlUXVldWUgPSBuZXcgcHJpb3JpdHlfcXVldWVfMS5Qcmlvcml0eVF1ZXVlKGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBwcmlvcml0eV9xdWV1ZS5kZWZhdWx0Q29tcGFyZShwZW5kaW5nRGVwZW5kZW5jaWVzW2EuaWRdLCBwZW5kaW5nRGVwZW5kZW5jaWVzW2IuaWRdKTsgfSwgZnVuY3Rpb24gKG5vZGUsIG5ld0luZGV4KSB7IHJldHVybiBub2RlSW5kaWNlc1tub2RlLmlkXSA9IG5ld0luZGV4OyB9KTtcbiAgICB1bm9yZGVyZWRFdmFsdWF0aW9uU2V0LmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsgcmV0dXJuIHBlbmRpbmdEZXBlbmRlbmNpZXNbbm9kZS5pZF0gPSAwOyB9KTtcbiAgICB1bm9yZGVyZWRFdmFsdWF0aW9uU2V0LmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsgcmV0dXJuIE9iamVjdC5rZXlzKG5vZGUuaW5wdXRzKVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIG5vZGUuaW5wdXRzW2tleV07IH0pXG4gICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICBpZiAodW5vcmRlcmVkRXZhbHVhdGlvblNldC5pbmRleE9mKGlucHV0Lm5vZGUpICE9PSAtMSkge1xuICAgICAgICAgICAgcGVuZGluZ0RlcGVuZGVuY2llc1tpbnB1dC5ub2RlLmlkXSsrO1xuICAgICAgICB9XG4gICAgfSk7IH0pO1xuICAgIHVub3JkZXJlZEV2YWx1YXRpb25TZXQuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkgeyByZXR1cm4gbm9kZVF1ZXVlLmVucXVldWUobm9kZSk7IH0pO1xuICAgIHdoaWxlICghbm9kZVF1ZXVlLmVtcHR5KCkpIHtcbiAgICAgICAgc2V0LnVuc2hpZnQobm9kZVF1ZXVlLmRlcXVldWUoKSk7XG4gICAgICAgIE9iamVjdC5rZXlzKHNldFswXS5pbnB1dHMpLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBzZXRbMF0uaW5wdXRzW2tleV07IH0pLmZvckVhY2goZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgICAgICBpZiAodW5vcmRlcmVkRXZhbHVhdGlvblNldC5pbmRleE9mKGlucHV0Lm5vZGUpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBlbmRpbmdEZXBlbmRlbmNpZXNbaW5wdXQubm9kZS5pZF0tLTtcbiAgICAgICAgICAgIG5vZGVRdWV1ZS51cGRhdGUoaW5wdXQubm9kZSwgbm9kZUluZGljZXNbaW5wdXQubm9kZS5pZF0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHNldDtcbn1cbmV4cG9ydHMuZ2V0T3JkZXJlZEV2YWx1YXRpb25TZXQgPSBnZXRPcmRlcmVkRXZhbHVhdGlvblNldDtcbmZ1bmN0aW9uIGlzSW5wdXROb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMobm9kZS5pbnB1dHMpLmxlbmd0aCA9PT0gMDtcbn1cbmV4cG9ydHMuaXNJbnB1dE5vZGUgPSBpc0lucHV0Tm9kZTtcbmZ1bmN0aW9uIHNob3VsZEJhY2tQcm9wKHQpIHtcbiAgICByZXR1cm4gISh0Lm5vZGUgaW5zdGFuY2VvZiBncmFwaF8xLkNvbnN0YW50Tm9kZSk7XG59XG5leHBvcnRzLnNob3VsZEJhY2tQcm9wID0gc2hvdWxkQmFja1Byb3A7XG5mdW5jdGlvbiBpc1Bhc3N0aHJvdWdoTm9kZShub2RlLCBtYXApIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG5vZGUuaW5wdXRzKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGlucHV0ID0gbm9kZS5pbnB1dHNba2V5c1tpXV07XG4gICAgICAgIGlmIChtYXAuZ2V0KGlucHV0LCB0cnVlKSA9PT0gbWFwLmdldChub2RlLm91dHB1dCwgdHJ1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNQYXNzdGhyb3VnaE5vZGUgPSBpc1Bhc3N0aHJvdWdoTm9kZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/graph_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/operation_emitter.js":
/*!****************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/operation_emitter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_1 = __webpack_require__(/*! ./graph */ \"./node_modules/deeplearn/dist/graph/graph.js\");\nvar graph_util = __webpack_require__(/*! ./graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar add_1 = __webpack_require__(/*! ./ops/add */ \"./node_modules/deeplearn/dist/graph/ops/add.js\");\nvar argmax_1 = __webpack_require__(/*! ./ops/argmax */ \"./node_modules/deeplearn/dist/graph/ops/argmax.js\");\nvar argmaxequals_1 = __webpack_require__(/*! ./ops/argmaxequals */ \"./node_modules/deeplearn/dist/graph/ops/argmaxequals.js\");\nvar concat3d_1 = __webpack_require__(/*! ./ops/concat3d */ \"./node_modules/deeplearn/dist/graph/ops/concat3d.js\");\nvar convolution_1 = __webpack_require__(/*! ./ops/convolution */ \"./node_modules/deeplearn/dist/graph/ops/convolution.js\");\nvar divide_1 = __webpack_require__(/*! ./ops/divide */ \"./node_modules/deeplearn/dist/graph/ops/divide.js\");\nvar element_wise_activation_1 = __webpack_require__(/*! ./ops/element_wise_activation */ \"./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js\");\nvar element_wise_cost_1 = __webpack_require__(/*! ./ops/element_wise_cost */ \"./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js\");\nvar exp_1 = __webpack_require__(/*! ./ops/exp */ \"./node_modules/deeplearn/dist/graph/ops/exp.js\");\nvar linear_combination_1 = __webpack_require__(/*! ./ops/linear_combination */ \"./node_modules/deeplearn/dist/graph/ops/linear_combination.js\");\nvar log_1 = __webpack_require__(/*! ./ops/log */ \"./node_modules/deeplearn/dist/graph/ops/log.js\");\nvar matmul_1 = __webpack_require__(/*! ./ops/matmul */ \"./node_modules/deeplearn/dist/graph/ops/matmul.js\");\nvar max_pool_1 = __webpack_require__(/*! ./ops/max_pool */ \"./node_modules/deeplearn/dist/graph/ops/max_pool.js\");\nvar multiply_1 = __webpack_require__(/*! ./ops/multiply */ \"./node_modules/deeplearn/dist/graph/ops/multiply.js\");\nvar reduce_sum_1 = __webpack_require__(/*! ./ops/reduce_sum */ \"./node_modules/deeplearn/dist/graph/ops/reduce_sum.js\");\nvar reshape_1 = __webpack_require__(/*! ./ops/reshape */ \"./node_modules/deeplearn/dist/graph/ops/reshape.js\");\nvar softmax_1 = __webpack_require__(/*! ./ops/softmax */ \"./node_modules/deeplearn/dist/graph/ops/softmax.js\");\nvar subtract_1 = __webpack_require__(/*! ./ops/subtract */ \"./node_modules/deeplearn/dist/graph/ops/subtract.js\");\nfunction emitFromGraphNodes(nodes) {\n    var ops = [];\n    nodes.forEach(function (node) { return Array.prototype.push.apply(ops, emitOpFromNode(node)); });\n    return ops;\n}\nexports.emitFromGraphNodes = emitFromGraphNodes;\nfunction emitOpFromNode(node) {\n    if (node instanceof graph_1.ReshapeNode) {\n        return [new reshape_1.Reshape(node.inputs[graph_1.ReshapeNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.MatMulNode) {\n        var x1 = node.inputs[graph_1.MatMulNode.X1];\n        var x2 = node.inputs[graph_1.MatMulNode.X2];\n        return [new matmul_1.MatMul(x1, x2, node.output)];\n    }\n    else if (node instanceof graph_1.Convolution2DNode) {\n        var w = node.inputs[graph_1.Convolution2DNode.W];\n        var x = node.inputs[graph_1.Convolution2DNode.X];\n        var b = node.inputs[graph_1.Convolution2DNode.B];\n        return [new convolution_1.Convolution2D(w, x, b, node.output, node.fieldSize, node.outputDepth, node.stride, node.zeroPad)];\n    }\n    else if (node instanceof graph_1.MaxPoolNode) {\n        var x = node.inputs[graph_1.MaxPoolNode.X];\n        return [new max_pool_1.MaxPool(x, node.output, node.fieldSize, node.stride, node.zeroPad)];\n    }\n    else if (node instanceof graph_1.ExpNode) {\n        return [new exp_1.Exp(node.inputs[graph_1.ExpNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.LogNode) {\n        return [new log_1.Log(node.inputs[graph_1.LogNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.ReLUNode) {\n        return [new element_wise_activation_1.ReLU(node.inputs[graph_1.ReLUNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.LeakyReLUNode) {\n        return [new element_wise_activation_1.LeakyReLU(node.inputs[graph_1.LeakyReLUNode.X], node.output, node.alpha)];\n    }\n    else if (node instanceof graph_1.EluNode) {\n        return [new element_wise_activation_1.Elu(node.inputs[graph_1.EluNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.TanHNode) {\n        return [new element_wise_activation_1.TanH(node.inputs[graph_1.TanHNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.SigmoidNode) {\n        return [new element_wise_activation_1.Sigmoid(node.inputs[graph_1.SigmoidNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.SoftmaxCrossEntropyCostNode) {\n        var x = node.inputs[graph_1.SoftmaxCrossEntropyCostNode.X];\n        var target = node.inputs[graph_1.SoftmaxCrossEntropyCostNode.TARGET];\n        return [new softmax_1.SoftmaxCrossEntropyCost(x, target, node.output)];\n    }\n    else if (node instanceof graph_1.SoftmaxNode) {\n        return [new softmax_1.Softmax(node.inputs[graph_1.SoftmaxNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.MeanSquaredCostNode) {\n        var label = node.inputs[graph_1.MeanSquaredCostNode.LABEL];\n        var prediction = node.inputs[graph_1.MeanSquaredCostNode.PREDICTION];\n        return [new element_wise_cost_1.MeanSquaredCost(label, prediction, node.output)];\n    }\n    else if (node instanceof graph_1.ArgMaxEqualsNode) {\n        return [new argmaxequals_1.ArgMaxEquals(node.inputs[graph_1.ArgMaxEqualsNode.X1], node.inputs[graph_1.ArgMaxEqualsNode.X2], node.output)];\n    }\n    else if (node instanceof graph_1.ArgMaxNode) {\n        return [new argmax_1.ArgMax(node.x, node.output)];\n    }\n    else if (node instanceof graph_1.FusedLinearCombinationNode) {\n        return [new linear_combination_1.LinearCombination(node.inputs[graph_1.FusedLinearCombinationNode.T1], node.inputs[graph_1.FusedLinearCombinationNode.T2], node.inputs[graph_1.FusedLinearCombinationNode.C1], node.inputs[graph_1.FusedLinearCombinationNode.C2], node.output)];\n    }\n    else if (node instanceof graph_1.Concat3DNode) {\n        return [new concat3d_1.Concat3D(node.inputs[graph_1.Concat3DNode.X1], node.inputs[graph_1.Concat3DNode.X2], node.axis, node.output)];\n    }\n    else if (node instanceof graph_1.SquareNode) {\n        return [new element_wise_activation_1.Square(node.inputs[graph_1.SquareNode.X], node.output)];\n    }\n    else if (node instanceof graph_1.AddNode) {\n        return [new add_1.Add(node.inputs[graph_1.AddNode.T1], node.inputs[graph_1.AddNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.SubtractNode) {\n        return [new subtract_1.Subtract(node.inputs[graph_1.SubtractNode.T1], node.inputs[graph_1.SubtractNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.MultiplyNode) {\n        return [new multiply_1.Multiply(node.inputs[graph_1.MultiplyNode.T1], node.inputs[graph_1.MultiplyNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.DivideNode) {\n        return [new divide_1.Divide(node.inputs[graph_1.DivideNode.T1], node.inputs[graph_1.DivideNode.T2], node.output)];\n    }\n    else if (node instanceof graph_1.ReduceSumNode) {\n        return [new reduce_sum_1.ReduceSum(node.inputs[graph_1.ReduceSumNode.X], node.output)];\n    }\n    else if (graph_util.isInputNode(node)) {\n        return [];\n    }\n    else {\n        throw Error(\"Unsupported node type: \" + node.constructor.name);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/operation_emitter.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/add.js":
/*!******************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/add.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Add = (function (_super) {\n    __extends(Add, _super);\n    function Add(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape) ||\n            (x1Tensor.shape.length === 2 && x2Tensor.shape.length === 1 &&\n                x1Tensor.shape[1] === x2Tensor.shape[0]) ||\n            (x1Tensor.shape.length === 1 && x2Tensor.shape.length === 2 &&\n                x1Tensor.shape[0] === x2Tensor.shape[1]), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape, ' +\n            'or one of them can be broadcasted (2D and 1D).');\n        return _this;\n    }\n    Add.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(x1.shape)) {\n                result = math.scalarPlusArray(x1, x2);\n            }\n            else if (util.isScalarShape(x2.shape)) {\n                result = math.scalarPlusArray(x2, x1);\n            }\n            else {\n                result = math.add(x1, x2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Add.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (_this.x1Tensor.shape.length === 1 &&\n                    _this.x2Tensor.shape.length === 2 &&\n                    _this.x1Tensor.shape[0] === _this.x2Tensor.shape[1]) {\n                    var sum = math.sum(dy, 0);\n                    gradientArrays.add(_this.x1Tensor, sum);\n                }\n                else if (util.isScalarShape(_this.x1Tensor.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.x1Tensor, sum);\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.clone(dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                if (_this.x1Tensor.shape.length === 2 &&\n                    _this.x2Tensor.shape.length === 1 &&\n                    _this.x1Tensor.shape[1] === _this.x2Tensor.shape[0]) {\n                    var sum = math.sum(dy, 0);\n                    gradientArrays.add(_this.x2Tensor, sum);\n                }\n                else if (util.isScalarShape(_this.x2Tensor.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.x2Tensor, sum);\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, math.clone(dy));\n                }\n            }\n        });\n    };\n    Add.prototype.dispose = function () {\n        if (this.dySizeScalar != null) {\n            this.dySizeScalar.dispose();\n        }\n    };\n    return Add;\n}(op_1.Operation));\nexports.Add = Add;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2FkZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvYWRkLmpzPzU3N2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsID0gcmVxdWlyZShcIi4uLy4uL3V0aWxcIik7XG52YXIgZ3JhcGhfdXRpbCA9IHJlcXVpcmUoXCIuLi9ncmFwaF91dGlsXCIpO1xudmFyIG9wXzEgPSByZXF1aXJlKFwiLi9vcFwiKTtcbnZhciBBZGQgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBZGQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQWRkKHgxVGVuc29yLCB4MlRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy54MVRlbnNvciA9IHgxVGVuc29yO1xuICAgICAgICBfdGhpcy54MlRlbnNvciA9IHgyVGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgdXRpbC5hc3NlcnQodXRpbC5zaXplRnJvbVNoYXBlKHgxVGVuc29yLnNoYXBlKSA9PT0gMSB8fFxuICAgICAgICAgICAgdXRpbC5zaXplRnJvbVNoYXBlKHgyVGVuc29yLnNoYXBlKSA9PT0gMSB8fFxuICAgICAgICAgICAgdXRpbC5hcnJheXNFcXVhbCh4MVRlbnNvci5zaGFwZSwgeDJUZW5zb3Iuc2hhcGUpIHx8XG4gICAgICAgICAgICAoeDFUZW5zb3Iuc2hhcGUubGVuZ3RoID09PSAyICYmIHgyVGVuc29yLnNoYXBlLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgICAgIHgxVGVuc29yLnNoYXBlWzFdID09PSB4MlRlbnNvci5zaGFwZVswXSkgfHxcbiAgICAgICAgICAgICh4MVRlbnNvci5zaGFwZS5sZW5ndGggPT09IDEgJiYgeDJUZW5zb3Iuc2hhcGUubGVuZ3RoID09PSAyICYmXG4gICAgICAgICAgICAgICAgeDFUZW5zb3Iuc2hhcGVbMF0gPT09IHgyVGVuc29yLnNoYXBlWzFdKSwgJ09uZSBvZiB0MSBvciB0MiBtdXN0IGJlIGEgc2NhbGFyLCBvciB0MSBhbmQgdDIgbXVzdCBoYXZlICcgK1xuICAgICAgICAgICAgJ3RoZSBzYW1lIHNoYXBlLCAnICtcbiAgICAgICAgICAgICdvciBvbmUgb2YgdGhlbSBjYW4gYmUgYnJvYWRjYXN0ZWQgKDJEIGFuZCAxRCkuJyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQWRkLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHgxID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngxVGVuc29yKTtcbiAgICAgICAgdmFyIHgyID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngyVGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgICAgIGlmICh1dGlsLmlzU2NhbGFyU2hhcGUoeDEuc2hhcGUpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gbWF0aC5zY2FsYXJQbHVzQXJyYXkoeDEsIHgyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh4Mi5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLnNjYWxhclBsdXNBcnJheSh4MiwgeDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gbWF0aC5hZGQoeDEsIHgyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChyZXN1bHQpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBZGQucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGR5ID0gZ3JhZGllbnRBcnJheXMuZ2V0KHRoaXMueVRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueDFUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLngxVGVuc29yLnNoYXBlLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy54MlRlbnNvci5zaGFwZS5sZW5ndGggPT09IDIgJiZcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMueDFUZW5zb3Iuc2hhcGVbMF0gPT09IF90aGlzLngyVGVuc29yLnNoYXBlWzFdKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdW0gPSBtYXRoLnN1bShkeSwgMCk7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MVRlbnNvciwgc3VtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodXRpbC5pc1NjYWxhclNoYXBlKF90aGlzLngxVGVuc29yLnNoYXBlKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3VtID0gbWF0aC5zdW0oZHkpO1xuICAgICAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueDFUZW5zb3IsIHN1bSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueDFUZW5zb3IsIG1hdGguY2xvbmUoZHkpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZ3JhcGhfdXRpbC5zaG91bGRCYWNrUHJvcChfdGhpcy54MlRlbnNvcikpIHtcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMueDFUZW5zb3Iuc2hhcGUubGVuZ3RoID09PSAyICYmXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLngyVGVuc29yLnNoYXBlLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy54MVRlbnNvci5zaGFwZVsxXSA9PT0gX3RoaXMueDJUZW5zb3Iuc2hhcGVbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1bSA9IG1hdGguc3VtKGR5LCAwKTtcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngyVGVuc29yLCBzdW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh1dGlsLmlzU2NhbGFyU2hhcGUoX3RoaXMueDJUZW5zb3Iuc2hhcGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdW0gPSBtYXRoLnN1bShkeSk7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgc3VtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgbWF0aC5jbG9uZShkeSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBZGQucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmR5U2l6ZVNjYWxhciAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmR5U2l6ZVNjYWxhci5kaXNwb3NlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBBZGQ7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkFkZCA9IEFkZDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/add.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/argmax.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/argmax.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar ArgMax = (function (_super) {\n    __extends(ArgMax, _super);\n    function ArgMax(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    ArgMax.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.argMax(x)));\n        });\n    };\n    ArgMax.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('ArgMax backprop unimplemented');\n    };\n    return ArgMax;\n}(op_1.Operation));\nexports.ArgMax = ArgMax;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2FyZ21heC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvYXJnbWF4LmpzPzQxMjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgQXJnTWF4ID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQXJnTWF4LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEFyZ01heCh4VGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnhUZW5zb3IgPSB4VGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBBcmdNYXgucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54VGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGguYXJnTWF4KHgpKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXJnTWF4LnByb3RvdHlwZS5iYWNrUHJvcCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMsIGdyYWRpZW50QXJyYXlzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQXJnTWF4IGJhY2twcm9wIHVuaW1wbGVtZW50ZWQnKTtcbiAgICB9O1xuICAgIHJldHVybiBBcmdNYXg7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkFyZ01heCA9IEFyZ01heDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/argmax.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/argmaxequals.js":
/*!***************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/argmaxequals.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar ArgMaxEquals = (function (_super) {\n    __extends(ArgMaxEquals, _super);\n    function ArgMaxEquals(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    ArgMaxEquals.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.argMaxEquals(x1, x2)));\n        });\n    };\n    ArgMaxEquals.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('ArgMaxEquals backprop unimplemented');\n    };\n    return ArgMaxEquals;\n}(op_1.Operation));\nexports.ArgMaxEquals = ArgMaxEquals;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2FyZ21heGVxdWFscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvYXJnbWF4ZXF1YWxzLmpzPzA5YWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgQXJnTWF4RXF1YWxzID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQXJnTWF4RXF1YWxzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEFyZ01heEVxdWFscyh4MVRlbnNvciwgeDJUZW5zb3IsIHlUZW5zb3IpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueDFUZW5zb3IgPSB4MVRlbnNvcjtcbiAgICAgICAgX3RoaXMueDJUZW5zb3IgPSB4MlRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQXJnTWF4RXF1YWxzLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHgxID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngxVGVuc29yKTtcbiAgICAgICAgdmFyIHgyID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngyVGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGguYXJnTWF4RXF1YWxzKHgxLCB4MikpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBcmdNYXhFcXVhbHMucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBcmdNYXhFcXVhbHMgYmFja3Byb3AgdW5pbXBsZW1lbnRlZCcpO1xuICAgIH07XG4gICAgcmV0dXJuIEFyZ01heEVxdWFscztcbn0ob3BfMS5PcGVyYXRpb24pKTtcbmV4cG9ydHMuQXJnTWF4RXF1YWxzID0gQXJnTWF4RXF1YWxzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/argmaxequals.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/concat3d.js":
/*!***********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/concat3d.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = __webpack_require__(/*! ../../math/concat_util */ \"./node_modules/deeplearn/dist/math/concat_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Concat3D = (function (_super) {\n    __extends(Concat3D, _super);\n    function Concat3D(x1Tensor, x2Tensor, axis, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.axis = axis;\n        _this.yTensor = yTensor;\n        concat_util.assertParams(x1Tensor.shape, x2Tensor.shape, axis);\n        return _this;\n    }\n    Concat3D.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var concatResult = math.concat3D(x1, x2, _this.axis);\n            inferenceArrays.set(_this.yTensor, keep(concatResult));\n        });\n    };\n    Concat3D.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        throw new Error('Concat3D backprop not implemented.');\n    };\n    return Concat3D;\n}(op_1.Operation));\nexports.Concat3D = Concat3D;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2NvbmNhdDNkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9jb25jYXQzZC5qcz8wNzJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29uY2F0X3V0aWwgPSByZXF1aXJlKFwiLi4vLi4vbWF0aC9jb25jYXRfdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgQ29uY2F0M0QgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb25jYXQzRCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDb25jYXQzRCh4MVRlbnNvciwgeDJUZW5zb3IsIGF4aXMsIHlUZW5zb3IpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueDFUZW5zb3IgPSB4MVRlbnNvcjtcbiAgICAgICAgX3RoaXMueDJUZW5zb3IgPSB4MlRlbnNvcjtcbiAgICAgICAgX3RoaXMuYXhpcyA9IGF4aXM7XG4gICAgICAgIF90aGlzLnlUZW5zb3IgPSB5VGVuc29yO1xuICAgICAgICBjb25jYXRfdXRpbC5hc3NlcnRQYXJhbXMoeDFUZW5zb3Iuc2hhcGUsIHgyVGVuc29yLnNoYXBlLCBheGlzKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBDb25jYXQzRC5wcm90b3R5cGUuZmVlZEZvcndhcmQgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB4MSA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MVRlbnNvcik7XG4gICAgICAgIHZhciB4MiA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MlRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIHZhciBjb25jYXRSZXN1bHQgPSBtYXRoLmNvbmNhdDNEKHgxLCB4MiwgX3RoaXMuYXhpcyk7XG4gICAgICAgICAgICBpbmZlcmVuY2VBcnJheXMuc2V0KF90aGlzLnlUZW5zb3IsIGtlZXAoY29uY2F0UmVzdWx0KSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ29uY2F0M0QucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb25jYXQzRCBiYWNrcHJvcCBub3QgaW1wbGVtZW50ZWQuJyk7XG4gICAgfTtcbiAgICByZXR1cm4gQ29uY2F0M0Q7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkNvbmNhdDNEID0gQ29uY2F0M0Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/concat3d.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/convolution.js":
/*!**************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/convolution.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar conv_util = __webpack_require__(/*! ../../math/conv_util */ \"./node_modules/deeplearn/dist/math/conv_util.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Convolution2D = (function (_super) {\n    __extends(Convolution2D, _super);\n    function Convolution2D(wTensor, xTensor, bTensor, yTensor, fieldSize, outputDepth, stride, zeroPad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this) || this;\n        _this.wTensor = wTensor;\n        _this.xTensor = xTensor;\n        _this.bTensor = bTensor;\n        _this.yTensor = yTensor;\n        _this.fieldSize = fieldSize;\n        _this.outputDepth = outputDepth;\n        _this.stride = stride;\n        _this.assertWeightsShape(wTensor.shape);\n        _this.zeroPad = zeroPad != null ?\n            zeroPad :\n            conv_util.computeDefaultPad(_this.xTensor.shape, _this.fieldSize, _this.stride);\n        util.assert(util.isInt(_this.zeroPad), \"The zero padding (\" + _this.zeroPad + \") must be an integer. Change the \" +\n            \"stride and/or zero pad parameters\");\n        return _this;\n    }\n    Convolution2D.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var weights = inferenceArrays.get(this.wTensor);\n        var biases = inferenceArrays.get(this.bTensor);\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.conv2d(x, weights, biases, _this.stride, _this.zeroPad)));\n        });\n    };\n    Convolution2D.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var filter = inferenceArrays.get(this.wTensor);\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            var dw = math.conv2dDerFilter(x, dy, filter.shape, _this.stride, _this.zeroPad);\n            var db = math.conv2dDerBias(dy);\n            var dx = math.conv2dDerInput(x.shape, dy, filter, _this.stride, _this.zeroPad);\n            gradientArrays.add(_this.wTensor, dw);\n            gradientArrays.add(_this.bTensor, db);\n            gradientArrays.add(_this.xTensor, dx);\n        });\n    };\n    Convolution2D.prototype.assertWeightsShape = function (weightsShape) {\n        util.assert(weightsShape[0] === this.fieldSize &&\n            weightsShape[1] === this.fieldSize &&\n            weightsShape[2] === this.xTensor.shape[2] &&\n            weightsShape[3] === this.outputDepth, \"weights must be of shape [\" + this.fieldSize + \",\" + this.fieldSize + \",\" +\n            (this.xTensor.shape[2] + \",\" + this.outputDepth + \"] but they are of\") +\n            (\"shape [\" + weightsShape + \"]\"));\n    };\n    return Convolution2D;\n}(op_1.Operation));\nexports.Convolution2D = Convolution2D;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2NvbnZvbHV0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9jb252b2x1dGlvbi5qcz83NWIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29udl91dGlsID0gcmVxdWlyZShcIi4uLy4uL21hdGgvY29udl91dGlsXCIpO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgQ29udm9sdXRpb24yRCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbnZvbHV0aW9uMkQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ29udm9sdXRpb24yRCh3VGVuc29yLCB4VGVuc29yLCBiVGVuc29yLCB5VGVuc29yLCBmaWVsZFNpemUsIG91dHB1dERlcHRoLCBzdHJpZGUsIHplcm9QYWQpIHtcbiAgICAgICAgaWYgKHN0cmlkZSA9PT0gdm9pZCAwKSB7IHN0cmlkZSA9IDE7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMud1RlbnNvciA9IHdUZW5zb3I7XG4gICAgICAgIF90aGlzLnhUZW5zb3IgPSB4VGVuc29yO1xuICAgICAgICBfdGhpcy5iVGVuc29yID0gYlRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIF90aGlzLmZpZWxkU2l6ZSA9IGZpZWxkU2l6ZTtcbiAgICAgICAgX3RoaXMub3V0cHV0RGVwdGggPSBvdXRwdXREZXB0aDtcbiAgICAgICAgX3RoaXMuc3RyaWRlID0gc3RyaWRlO1xuICAgICAgICBfdGhpcy5hc3NlcnRXZWlnaHRzU2hhcGUod1RlbnNvci5zaGFwZSk7XG4gICAgICAgIF90aGlzLnplcm9QYWQgPSB6ZXJvUGFkICE9IG51bGwgP1xuICAgICAgICAgICAgemVyb1BhZCA6XG4gICAgICAgICAgICBjb252X3V0aWwuY29tcHV0ZURlZmF1bHRQYWQoX3RoaXMueFRlbnNvci5zaGFwZSwgX3RoaXMuZmllbGRTaXplLCBfdGhpcy5zdHJpZGUpO1xuICAgICAgICB1dGlsLmFzc2VydCh1dGlsLmlzSW50KF90aGlzLnplcm9QYWQpLCBcIlRoZSB6ZXJvIHBhZGRpbmcgKFwiICsgX3RoaXMuemVyb1BhZCArIFwiKSBtdXN0IGJlIGFuIGludGVnZXIuIENoYW5nZSB0aGUgXCIgK1xuICAgICAgICAgICAgXCJzdHJpZGUgYW5kL29yIHplcm8gcGFkIHBhcmFtZXRlcnNcIik7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQ29udm9sdXRpb24yRC5wcm90b3R5cGUuZmVlZEZvcndhcmQgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB3ZWlnaHRzID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLndUZW5zb3IpO1xuICAgICAgICB2YXIgYmlhc2VzID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLmJUZW5zb3IpO1xuICAgICAgICB2YXIgeCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54VGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGguY29udjJkKHgsIHdlaWdodHMsIGJpYXNlcywgX3RoaXMuc3RyaWRlLCBfdGhpcy56ZXJvUGFkKSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENvbnZvbHV0aW9uMkQucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGZpbHRlciA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy53VGVuc29yKTtcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueFRlbnNvcik7XG4gICAgICAgIHZhciBkeSA9IGdyYWRpZW50QXJyYXlzLmdldCh0aGlzLnlUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBkdyA9IG1hdGguY29udjJkRGVyRmlsdGVyKHgsIGR5LCBmaWx0ZXIuc2hhcGUsIF90aGlzLnN0cmlkZSwgX3RoaXMuemVyb1BhZCk7XG4gICAgICAgICAgICB2YXIgZGIgPSBtYXRoLmNvbnYyZERlckJpYXMoZHkpO1xuICAgICAgICAgICAgdmFyIGR4ID0gbWF0aC5jb252MmREZXJJbnB1dCh4LnNoYXBlLCBkeSwgZmlsdGVyLCBfdGhpcy5zdHJpZGUsIF90aGlzLnplcm9QYWQpO1xuICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLndUZW5zb3IsIGR3KTtcbiAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy5iVGVuc29yLCBkYik7XG4gICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueFRlbnNvciwgZHgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENvbnZvbHV0aW9uMkQucHJvdG90eXBlLmFzc2VydFdlaWdodHNTaGFwZSA9IGZ1bmN0aW9uICh3ZWlnaHRzU2hhcGUpIHtcbiAgICAgICAgdXRpbC5hc3NlcnQod2VpZ2h0c1NoYXBlWzBdID09PSB0aGlzLmZpZWxkU2l6ZSAmJlxuICAgICAgICAgICAgd2VpZ2h0c1NoYXBlWzFdID09PSB0aGlzLmZpZWxkU2l6ZSAmJlxuICAgICAgICAgICAgd2VpZ2h0c1NoYXBlWzJdID09PSB0aGlzLnhUZW5zb3Iuc2hhcGVbMl0gJiZcbiAgICAgICAgICAgIHdlaWdodHNTaGFwZVszXSA9PT0gdGhpcy5vdXRwdXREZXB0aCwgXCJ3ZWlnaHRzIG11c3QgYmUgb2Ygc2hhcGUgW1wiICsgdGhpcy5maWVsZFNpemUgKyBcIixcIiArIHRoaXMuZmllbGRTaXplICsgXCIsXCIgK1xuICAgICAgICAgICAgKHRoaXMueFRlbnNvci5zaGFwZVsyXSArIFwiLFwiICsgdGhpcy5vdXRwdXREZXB0aCArIFwiXSBidXQgdGhleSBhcmUgb2ZcIikgK1xuICAgICAgICAgICAgKFwic2hhcGUgW1wiICsgd2VpZ2h0c1NoYXBlICsgXCJdXCIpKTtcbiAgICB9O1xuICAgIHJldHVybiBDb252b2x1dGlvbjJEO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5Db252b2x1dGlvbjJEID0gQ29udm9sdXRpb24yRDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/convolution.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/divide.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/divide.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Divide = (function (_super) {\n    __extends(Divide, _super);\n    function Divide(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Divide.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.x1Tensor);\n        var t2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarDividedByArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.arrayDividedByScalar(t1, t2);\n            }\n            else {\n                result = math.divide(t1, t2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Divide.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        var x1IsScalar = util.isScalarShape(x1.shape);\n        var x2IsScalar = util.isScalarShape(x2.shape);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (x1IsScalar) {\n                    var div = math.divide(dy, x2);\n                    gradientArrays.add(_this.x1Tensor, math.sum(div));\n                    div.dispose();\n                }\n                else if (x2IsScalar) {\n                    gradientArrays.add(_this.x1Tensor, math.arrayDividedByScalar(dy, x2));\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.divide(dy, x2));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                var x2Squared = math.elementWiseMul(x2, x2);\n                var x1OverX2Squared = void 0;\n                if (x2IsScalar) {\n                    x1OverX2Squared = math.arrayDividedByScalar(x1, x2Squared);\n                }\n                else if (x1IsScalar) {\n                    x1OverX2Squared = math.scalarDividedByArray(x1, x2Squared);\n                }\n                else {\n                    x1OverX2Squared = math.divide(x1, x2Squared);\n                }\n                var dx2 = math.neg(x1OverX2Squared);\n                var dyTimesDerivative = math.elementWiseMul(dy, dx2);\n                if (x2IsScalar) {\n                    gradientArrays.add(_this.x2Tensor, math.sum(dyTimesDerivative));\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, dyTimesDerivative);\n                }\n            }\n        });\n    };\n    return Divide;\n}(op_1.Operation));\nexports.Divide = Divide;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2RpdmlkZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvZGl2aWRlLmpzP2JiYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsID0gcmVxdWlyZShcIi4uLy4uL3V0aWxcIik7XG52YXIgZ3JhcGhfdXRpbCA9IHJlcXVpcmUoXCIuLi9ncmFwaF91dGlsXCIpO1xudmFyIG9wXzEgPSByZXF1aXJlKFwiLi9vcFwiKTtcbnZhciBEaXZpZGUgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEaXZpZGUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRGl2aWRlKHgxVGVuc29yLCB4MlRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy54MVRlbnNvciA9IHgxVGVuc29yO1xuICAgICAgICBfdGhpcy54MlRlbnNvciA9IHgyVGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgdXRpbC5hc3NlcnQodXRpbC5zaXplRnJvbVNoYXBlKHgxVGVuc29yLnNoYXBlKSA9PT0gMSB8fFxuICAgICAgICAgICAgdXRpbC5zaXplRnJvbVNoYXBlKHgyVGVuc29yLnNoYXBlKSA9PT0gMSB8fFxuICAgICAgICAgICAgdXRpbC5hcnJheXNFcXVhbCh4MVRlbnNvci5zaGFwZSwgeDJUZW5zb3Iuc2hhcGUpLCAnT25lIG9mIHQxIG9yIHQyIG11c3QgYmUgYSBzY2FsYXIsIG9yIHQxIGFuZCB0MiBtdXN0IGhhdmUgJyArXG4gICAgICAgICAgICAndGhlIHNhbWUgc2hhcGUnKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBEaXZpZGUucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgdDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh0MS5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLnNjYWxhckRpdmlkZWRCeUFycmF5KHQxLCB0Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh1dGlsLmlzU2NhbGFyU2hhcGUodDIuc2hhcGUpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gbWF0aC5hcnJheURpdmlkZWRCeVNjYWxhcih0MSwgdDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gbWF0aC5kaXZpZGUodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChyZXN1bHQpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBEaXZpZGUucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHgxID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngxVGVuc29yKTtcbiAgICAgICAgdmFyIHgyID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLngyVGVuc29yKTtcbiAgICAgICAgdmFyIGR5ID0gZ3JhZGllbnRBcnJheXMuZ2V0KHRoaXMueVRlbnNvcik7XG4gICAgICAgIHZhciB4MUlzU2NhbGFyID0gdXRpbC5pc1NjYWxhclNoYXBlKHgxLnNoYXBlKTtcbiAgICAgICAgdmFyIHgySXNTY2FsYXIgPSB1dGlsLmlzU2NhbGFyU2hhcGUoeDIuc2hhcGUpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChncmFwaF91dGlsLnNob3VsZEJhY2tQcm9wKF90aGlzLngxVGVuc29yKSkge1xuICAgICAgICAgICAgICAgIGlmICh4MUlzU2NhbGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkaXYgPSBtYXRoLmRpdmlkZShkeSwgeDIpO1xuICAgICAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueDFUZW5zb3IsIG1hdGguc3VtKGRpdikpO1xuICAgICAgICAgICAgICAgICAgICBkaXYuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh4MklzU2NhbGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MVRlbnNvciwgbWF0aC5hcnJheURpdmlkZWRCeVNjYWxhcihkeSwgeDIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MVRlbnNvciwgbWF0aC5kaXZpZGUoZHksIHgyKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueDJUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHgyU3F1YXJlZCA9IG1hdGguZWxlbWVudFdpc2VNdWwoeDIsIHgyKTtcbiAgICAgICAgICAgICAgICB2YXIgeDFPdmVyWDJTcXVhcmVkID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIGlmICh4MklzU2NhbGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIHgxT3ZlclgyU3F1YXJlZCA9IG1hdGguYXJyYXlEaXZpZGVkQnlTY2FsYXIoeDEsIHgyU3F1YXJlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHgxSXNTY2FsYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgeDFPdmVyWDJTcXVhcmVkID0gbWF0aC5zY2FsYXJEaXZpZGVkQnlBcnJheSh4MSwgeDJTcXVhcmVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHgxT3ZlclgyU3F1YXJlZCA9IG1hdGguZGl2aWRlKHgxLCB4MlNxdWFyZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgZHgyID0gbWF0aC5uZWcoeDFPdmVyWDJTcXVhcmVkKTtcbiAgICAgICAgICAgICAgICB2YXIgZHlUaW1lc0Rlcml2YXRpdmUgPSBtYXRoLmVsZW1lbnRXaXNlTXVsKGR5LCBkeDIpO1xuICAgICAgICAgICAgICAgIGlmICh4MklzU2NhbGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgbWF0aC5zdW0oZHlUaW1lc0Rlcml2YXRpdmUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgZHlUaW1lc0Rlcml2YXRpdmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gRGl2aWRlO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5EaXZpZGUgPSBEaXZpZGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/divide.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar activation_functions_1 = __webpack_require__(/*! ../../math/activation_functions */ \"./node_modules/deeplearn/dist/math/activation_functions.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar ElementWiseActivation = (function (_super) {\n    __extends(ElementWiseActivation, _super);\n    function ElementWiseActivation(xTensor, yTensor, func) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        _this.func = func;\n        return _this;\n    }\n    ElementWiseActivation.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(_this.func.output(math, x)));\n        });\n    };\n    ElementWiseActivation.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var y = inferenceArrays.get(this.yTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            var dydx = _this.func.der(math, x, y);\n            gradientArrays.add(_this.xTensor, math.elementWiseMul(dy, dydx));\n            dydx.dispose();\n        });\n    };\n    ElementWiseActivation.prototype.dispose = function () {\n        this.func.dispose();\n    };\n    return ElementWiseActivation;\n}(op_1.Operation));\nexports.ElementWiseActivation = ElementWiseActivation;\nvar ReLU = (function (_super) {\n    __extends(ReLU, _super);\n    function ReLU(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.ReLUFunc()) || this;\n    }\n    return ReLU;\n}(ElementWiseActivation));\nexports.ReLU = ReLU;\nvar LeakyReLU = (function (_super) {\n    __extends(LeakyReLU, _super);\n    function LeakyReLU(xTensor, yTensor, alpha) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.LeakyReluFunc(alpha)) || this;\n    }\n    return LeakyReLU;\n}(ElementWiseActivation));\nexports.LeakyReLU = LeakyReLU;\nvar TanH = (function (_super) {\n    __extends(TanH, _super);\n    function TanH(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.TanHFunc()) || this;\n    }\n    return TanH;\n}(ElementWiseActivation));\nexports.TanH = TanH;\nvar Sigmoid = (function (_super) {\n    __extends(Sigmoid, _super);\n    function Sigmoid(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.SigmoidFunc()) || this;\n    }\n    return Sigmoid;\n}(ElementWiseActivation));\nexports.Sigmoid = Sigmoid;\nvar Square = (function (_super) {\n    __extends(Square, _super);\n    function Square(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.SquareFunc()) || this;\n    }\n    return Square;\n}(ElementWiseActivation));\nexports.Square = Square;\nvar Elu = (function (_super) {\n    __extends(Elu, _super);\n    function Elu(xTensor, yTensor) {\n        return _super.call(this, xTensor, yTensor, new activation_functions_1.EluFunc()) || this;\n    }\n    return Elu;\n}(ElementWiseActivation));\nexports.Elu = Elu;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2VsZW1lbnRfd2lzZV9hY3RpdmF0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9lbGVtZW50X3dpc2VfYWN0aXZhdGlvbi5qcz80NGZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYWN0aXZhdGlvbl9mdW5jdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL2FjdGl2YXRpb25fZnVuY3Rpb25zXCIpO1xudmFyIG9wXzEgPSByZXF1aXJlKFwiLi9vcFwiKTtcbnZhciBFbGVtZW50V2lzZUFjdGl2YXRpb24gPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFbGVtZW50V2lzZUFjdGl2YXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRWxlbWVudFdpc2VBY3RpdmF0aW9uKHhUZW5zb3IsIHlUZW5zb3IsIGZ1bmMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueFRlbnNvciA9IHhUZW5zb3I7XG4gICAgICAgIF90aGlzLnlUZW5zb3IgPSB5VGVuc29yO1xuICAgICAgICBfdGhpcy5mdW5jID0gZnVuYztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBFbGVtZW50V2lzZUFjdGl2YXRpb24ucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54VGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKF90aGlzLmZ1bmMub3V0cHV0KG1hdGgsIHgpKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgRWxlbWVudFdpc2VBY3RpdmF0aW9uLnByb3RvdHlwZS5iYWNrUHJvcCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMsIGdyYWRpZW50QXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB4ID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLnhUZW5zb3IpO1xuICAgICAgICB2YXIgeSA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy55VGVuc29yKTtcbiAgICAgICAgdmFyIGR5ID0gZ3JhZGllbnRBcnJheXMuZ2V0KHRoaXMueVRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGR5ZHggPSBfdGhpcy5mdW5jLmRlcihtYXRoLCB4LCB5KTtcbiAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54VGVuc29yLCBtYXRoLmVsZW1lbnRXaXNlTXVsKGR5LCBkeWR4KSk7XG4gICAgICAgICAgICBkeWR4LmRpc3Bvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBFbGVtZW50V2lzZUFjdGl2YXRpb24ucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZnVuYy5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gRWxlbWVudFdpc2VBY3RpdmF0aW9uO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5FbGVtZW50V2lzZUFjdGl2YXRpb24gPSBFbGVtZW50V2lzZUFjdGl2YXRpb247XG52YXIgUmVMVSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJlTFUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUmVMVSh4VGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCB4VGVuc29yLCB5VGVuc29yLCBuZXcgYWN0aXZhdGlvbl9mdW5jdGlvbnNfMS5SZUxVRnVuYygpKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gUmVMVTtcbn0oRWxlbWVudFdpc2VBY3RpdmF0aW9uKSk7XG5leHBvcnRzLlJlTFUgPSBSZUxVO1xudmFyIExlYWt5UmVMVSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKExlYWt5UmVMVSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMZWFreVJlTFUoeFRlbnNvciwgeVRlbnNvciwgYWxwaGEpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHhUZW5zb3IsIHlUZW5zb3IsIG5ldyBhY3RpdmF0aW9uX2Z1bmN0aW9uc18xLkxlYWt5UmVsdUZ1bmMoYWxwaGEpKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gTGVha3lSZUxVO1xufShFbGVtZW50V2lzZUFjdGl2YXRpb24pKTtcbmV4cG9ydHMuTGVha3lSZUxVID0gTGVha3lSZUxVO1xudmFyIFRhbkggPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhUYW5ILCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFRhbkgoeFRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgeFRlbnNvciwgeVRlbnNvciwgbmV3IGFjdGl2YXRpb25fZnVuY3Rpb25zXzEuVGFuSEZ1bmMoKSkgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFRhbkg7XG59KEVsZW1lbnRXaXNlQWN0aXZhdGlvbikpO1xuZXhwb3J0cy5UYW5IID0gVGFuSDtcbnZhciBTaWdtb2lkID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU2lnbW9pZCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTaWdtb2lkKHhUZW5zb3IsIHlUZW5zb3IpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHhUZW5zb3IsIHlUZW5zb3IsIG5ldyBhY3RpdmF0aW9uX2Z1bmN0aW9uc18xLlNpZ21vaWRGdW5jKCkpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBTaWdtb2lkO1xufShFbGVtZW50V2lzZUFjdGl2YXRpb24pKTtcbmV4cG9ydHMuU2lnbW9pZCA9IFNpZ21vaWQ7XG52YXIgU3F1YXJlID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU3F1YXJlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNxdWFyZSh4VGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCB4VGVuc29yLCB5VGVuc29yLCBuZXcgYWN0aXZhdGlvbl9mdW5jdGlvbnNfMS5TcXVhcmVGdW5jKCkpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBTcXVhcmU7XG59KEVsZW1lbnRXaXNlQWN0aXZhdGlvbikpO1xuZXhwb3J0cy5TcXVhcmUgPSBTcXVhcmU7XG52YXIgRWx1ID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRWx1LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVsdSh4VGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCB4VGVuc29yLCB5VGVuc29yLCBuZXcgYWN0aXZhdGlvbl9mdW5jdGlvbnNfMS5FbHVGdW5jKCkpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBFbHU7XG59KEVsZW1lbnRXaXNlQWN0aXZhdGlvbikpO1xuZXhwb3J0cy5FbHUgPSBFbHU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/element_wise_activation.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js":
/*!********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cost_functions_1 = __webpack_require__(/*! ../../math/cost_functions */ \"./node_modules/deeplearn/dist/math/cost_functions.js\");\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar ElementWiseCost = (function (_super) {\n    __extends(ElementWiseCost, _super);\n    function ElementWiseCost(x1Tensor, x2Tensor, yTensor, func) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        _this.func = func;\n        _this.oneOverNScalar = ndarray_1.Scalar.new(1 / util.sizeFromShape(x1Tensor.shape));\n        return _this;\n    }\n    ElementWiseCost.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var elementWiseCost = _this.func.cost(math, x1, x2);\n            var sum = math.sum(elementWiseCost);\n            var result = math.scalarTimesArray(_this.oneOverNScalar, sum);\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    ElementWiseCost.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                gradientArrays.add(_this.x1Tensor, _this.func.der(math, x1, x2));\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                gradientArrays.add(_this.x2Tensor, _this.func.der(math, x2, x1));\n            }\n        });\n    };\n    ElementWiseCost.prototype.dispose = function () {\n        this.func.dispose();\n        this.oneOverNScalar.dispose();\n    };\n    return ElementWiseCost;\n}(op_1.Operation));\nexports.ElementWiseCost = ElementWiseCost;\nvar MeanSquaredCost = (function (_super) {\n    __extends(MeanSquaredCost, _super);\n    function MeanSquaredCost(x1Tensor, x2Tensor, yTensor) {\n        return _super.call(this, x1Tensor, x2Tensor, yTensor, new cost_functions_1.SquareCostFunc()) || this;\n    }\n    return MeanSquaredCost;\n}(ElementWiseCost));\nexports.MeanSquaredCost = MeanSquaredCost;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2VsZW1lbnRfd2lzZV9jb3N0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9lbGVtZW50X3dpc2VfY29zdC5qcz84ZjhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29zdF9mdW5jdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL2Nvc3RfZnVuY3Rpb25zXCIpO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL25kYXJyYXlcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGdyYXBoX3V0aWwgPSByZXF1aXJlKFwiLi4vZ3JhcGhfdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgRWxlbWVudFdpc2VDb3N0ID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRWxlbWVudFdpc2VDb3N0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVsZW1lbnRXaXNlQ29zdCh4MVRlbnNvciwgeDJUZW5zb3IsIHlUZW5zb3IsIGZ1bmMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueDFUZW5zb3IgPSB4MVRlbnNvcjtcbiAgICAgICAgX3RoaXMueDJUZW5zb3IgPSB4MlRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIF90aGlzLmZ1bmMgPSBmdW5jO1xuICAgICAgICBfdGhpcy5vbmVPdmVyTlNjYWxhciA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KDEgLyB1dGlsLnNpemVGcm9tU2hhcGUoeDFUZW5zb3Iuc2hhcGUpKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBFbGVtZW50V2lzZUNvc3QucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgeDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICB2YXIgZWxlbWVudFdpc2VDb3N0ID0gX3RoaXMuZnVuYy5jb3N0KG1hdGgsIHgxLCB4Mik7XG4gICAgICAgICAgICB2YXIgc3VtID0gbWF0aC5zdW0oZWxlbWVudFdpc2VDb3N0KTtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBtYXRoLnNjYWxhclRpbWVzQXJyYXkoX3RoaXMub25lT3Zlck5TY2FsYXIsIHN1bSk7XG4gICAgICAgICAgICBpbmZlcmVuY2VBcnJheXMuc2V0KF90aGlzLnlUZW5zb3IsIGtlZXAocmVzdWx0KSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgRWxlbWVudFdpc2VDb3N0LnByb3RvdHlwZS5iYWNrUHJvcCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMsIGdyYWRpZW50QXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB4MSA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MVRlbnNvcik7XG4gICAgICAgIHZhciB4MiA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MlRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueDFUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngxVGVuc29yLCBfdGhpcy5mdW5jLmRlcihtYXRoLCB4MSwgeDIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChncmFwaF91dGlsLnNob3VsZEJhY2tQcm9wKF90aGlzLngyVGVuc29yKSkge1xuICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgX3RoaXMuZnVuYy5kZXIobWF0aCwgeDIsIHgxKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgRWxlbWVudFdpc2VDb3N0LnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmZ1bmMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLm9uZU92ZXJOU2NhbGFyLmRpc3Bvc2UoKTtcbiAgICB9O1xuICAgIHJldHVybiBFbGVtZW50V2lzZUNvc3Q7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkVsZW1lbnRXaXNlQ29zdCA9IEVsZW1lbnRXaXNlQ29zdDtcbnZhciBNZWFuU3F1YXJlZENvc3QgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNZWFuU3F1YXJlZENvc3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTWVhblNxdWFyZWRDb3N0KHgxVGVuc29yLCB4MlRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgeDFUZW5zb3IsIHgyVGVuc29yLCB5VGVuc29yLCBuZXcgY29zdF9mdW5jdGlvbnNfMS5TcXVhcmVDb3N0RnVuYygpKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gTWVhblNxdWFyZWRDb3N0O1xufShFbGVtZW50V2lzZUNvc3QpKTtcbmV4cG9ydHMuTWVhblNxdWFyZWRDb3N0ID0gTWVhblNxdWFyZWRDb3N0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/element_wise_cost.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/exp.js":
/*!******************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/exp.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Exp = (function (_super) {\n    __extends(Exp, _super);\n    function Exp(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    Exp.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.exp(x)));\n        });\n    };\n    Exp.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var y = inferenceArrays.get(this.yTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.xTensor)) {\n                gradientArrays.add(_this.xTensor, math.elementWiseMul(y, dy));\n            }\n        });\n    };\n    return Exp;\n}(op_1.Operation));\nexports.Exp = Exp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2V4cC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvZXhwLmpzPzBhMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaF91dGlsID0gcmVxdWlyZShcIi4uL2dyYXBoX3V0aWxcIik7XG52YXIgb3BfMSA9IHJlcXVpcmUoXCIuL29wXCIpO1xudmFyIEV4cCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEV4cCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBFeHAoeFRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy54VGVuc29yID0geFRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgRXhwLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueFRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChtYXRoLmV4cCh4KSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEV4cC5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeSA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy55VGVuc29yKTtcbiAgICAgICAgdmFyIGR5ID0gZ3JhZGllbnRBcnJheXMuZ2V0KHRoaXMueVRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueFRlbnNvcikpIHtcbiAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueFRlbnNvciwgbWF0aC5lbGVtZW50V2lzZU11bCh5LCBkeSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBFeHA7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkV4cCA9IEV4cDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/exp.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/linear_combination.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/linear_combination.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar LinearCombination = (function (_super) {\n    __extends(LinearCombination, _super);\n    function LinearCombination(x1Tensor, x2Tensor, c1Tensor, c2Tensor, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.c1Tensor = c1Tensor;\n        _this.c2Tensor = c2Tensor;\n        _this.outTensor = outTensor;\n        return _this;\n    }\n    LinearCombination.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var c1 = inferenceArrays.get(this.c1Tensor).asScalar();\n        var c2 = inferenceArrays.get(this.c2Tensor).asScalar();\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.outTensor, keep(math.scaledArrayAdd(c1, x1, c2, x2)));\n        });\n    };\n    LinearCombination.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var c1 = inferenceArrays.get(this.c1Tensor);\n        var c2 = inferenceArrays.get(this.c2Tensor);\n        var dy = gradientArrays.get(this.outTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                gradientArrays.add(_this.x1Tensor, math.scalarTimesArray(c1, dy));\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                gradientArrays.add(_this.x2Tensor, math.scalarTimesArray(c2, dy));\n            }\n            if (graph_util.shouldBackProp(_this.c1Tensor)) {\n                var dotProduct1 = math.elementWiseMul(x1, dy);\n                gradientArrays.add(_this.c1Tensor, math.sum(dotProduct1));\n            }\n            if (graph_util.shouldBackProp(_this.c2Tensor)) {\n                var dotProduct2 = math.elementWiseMul(x2, dy);\n                gradientArrays.add(_this.c2Tensor, math.sum(dotProduct2));\n            }\n        });\n    };\n    return LinearCombination;\n}(op_1.Operation));\nexports.LinearCombination = LinearCombination;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2xpbmVhcl9jb21iaW5hdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvbGluZWFyX2NvbWJpbmF0aW9uLmpzPzkyNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaF91dGlsID0gcmVxdWlyZShcIi4uL2dyYXBoX3V0aWxcIik7XG52YXIgb3BfMSA9IHJlcXVpcmUoXCIuL29wXCIpO1xudmFyIExpbmVhckNvbWJpbmF0aW9uID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTGluZWFyQ29tYmluYXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTGluZWFyQ29tYmluYXRpb24oeDFUZW5zb3IsIHgyVGVuc29yLCBjMVRlbnNvciwgYzJUZW5zb3IsIG91dFRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy54MVRlbnNvciA9IHgxVGVuc29yO1xuICAgICAgICBfdGhpcy54MlRlbnNvciA9IHgyVGVuc29yO1xuICAgICAgICBfdGhpcy5jMVRlbnNvciA9IGMxVGVuc29yO1xuICAgICAgICBfdGhpcy5jMlRlbnNvciA9IGMyVGVuc29yO1xuICAgICAgICBfdGhpcy5vdXRUZW5zb3IgPSBvdXRUZW5zb3I7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTGluZWFyQ29tYmluYXRpb24ucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgeDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICB2YXIgYzEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMuYzFUZW5zb3IpLmFzU2NhbGFyKCk7XG4gICAgICAgIHZhciBjMiA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy5jMlRlbnNvcikuYXNTY2FsYXIoKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy5vdXRUZW5zb3IsIGtlZXAobWF0aC5zY2FsZWRBcnJheUFkZChjMSwgeDEsIGMyLCB4MikpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBMaW5lYXJDb21iaW5hdGlvbi5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgeDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICB2YXIgYzEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMuYzFUZW5zb3IpO1xuICAgICAgICB2YXIgYzIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMuYzJUZW5zb3IpO1xuICAgICAgICB2YXIgZHkgPSBncmFkaWVudEFycmF5cy5nZXQodGhpcy5vdXRUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChncmFwaF91dGlsLnNob3VsZEJhY2tQcm9wKF90aGlzLngxVGVuc29yKSkge1xuICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MVRlbnNvciwgbWF0aC5zY2FsYXJUaW1lc0FycmF5KGMxLCBkeSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueDJUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngyVGVuc29yLCBtYXRoLnNjYWxhclRpbWVzQXJyYXkoYzIsIGR5KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZ3JhcGhfdXRpbC5zaG91bGRCYWNrUHJvcChfdGhpcy5jMVRlbnNvcikpIHtcbiAgICAgICAgICAgICAgICB2YXIgZG90UHJvZHVjdDEgPSBtYXRoLmVsZW1lbnRXaXNlTXVsKHgxLCBkeSk7XG4gICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLmMxVGVuc29yLCBtYXRoLnN1bShkb3RQcm9kdWN0MSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMuYzJUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvdFByb2R1Y3QyID0gbWF0aC5lbGVtZW50V2lzZU11bCh4MiwgZHkpO1xuICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy5jMlRlbnNvciwgbWF0aC5zdW0oZG90UHJvZHVjdDIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gTGluZWFyQ29tYmluYXRpb247XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLkxpbmVhckNvbWJpbmF0aW9uID0gTGluZWFyQ29tYmluYXRpb247XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/linear_combination.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/log.js":
/*!******************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/log.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Log = (function (_super) {\n    __extends(Log, _super);\n    function Log(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    Log.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.log(x)));\n        });\n    };\n    Log.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.xTensor)) {\n                gradientArrays.add(_this.xTensor, math.divide(dy, x));\n            }\n        });\n    };\n    return Log;\n}(op_1.Operation));\nexports.Log = Log;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL2xvZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvbG9nLmpzPzkxNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaF91dGlsID0gcmVxdWlyZShcIi4uL2dyYXBoX3V0aWxcIik7XG52YXIgb3BfMSA9IHJlcXVpcmUoXCIuL29wXCIpO1xudmFyIExvZyA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKExvZywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMb2coeFRlbnNvciwgeVRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy54VGVuc29yID0geFRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTG9nLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueFRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChtYXRoLmxvZyh4KSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIExvZy5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54VGVuc29yKTtcbiAgICAgICAgdmFyIGR5ID0gZ3JhZGllbnRBcnJheXMuZ2V0KHRoaXMueVRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueFRlbnNvcikpIHtcbiAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueFRlbnNvciwgbWF0aC5kaXZpZGUoZHksIHgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gTG9nO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5Mb2cgPSBMb2c7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/log.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/matmul.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/matmul.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matmul_1 = __webpack_require__(/*! ../../math/backends/types/matmul */ \"./node_modules/deeplearn/dist/math/backends/types/matmul.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar MatMul = (function (_super) {\n    __extends(MatMul, _super);\n    function MatMul(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        return _this;\n    }\n    MatMul.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            if (x1.shape.length === 2 && x2.shape.length === 2) {\n                inferenceArrays.set(_this.yTensor, keep(math.matMul(x1, x2)));\n            }\n            else if (x1.shape.length === 2 && x2.shape.length === 1) {\n                inferenceArrays.set(_this.yTensor, keep(math.matrixTimesVector(x1, x2)));\n            }\n            else if (x1.shape.length === 1 && x2.shape.length === 2) {\n                inferenceArrays.set(_this.yTensor, keep(math.vectorTimesMatrix(x1, x2)));\n            }\n        });\n    };\n    MatMul.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        if (x1.shape.length === 1) {\n            x1 = x1.reshape([1, x1.size]);\n            dy = dy.reshape([1, dy.size]);\n        }\n        if (x2.shape.length === 1) {\n            x2 = x2.reshape([x2.size, 1]);\n            dy = dy.reshape([dy.size, 1]);\n        }\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                var dx1 = math.matMul(dy, x2, matmul_1.MatrixOrientation.REGULAR, matmul_1.MatrixOrientation.TRANSPOSED);\n                gradientArrays.add(_this.x1Tensor, _this.x1Tensor.shape.length === 1 ? dx1.as1D() : dx1);\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                var dx2 = math.matMul(x1, dy, matmul_1.MatrixOrientation.TRANSPOSED, matmul_1.MatrixOrientation.REGULAR);\n                gradientArrays.add(_this.x2Tensor, _this.x2Tensor.shape.length === 1 ? dx2.as1D() : dx2);\n            }\n        });\n    };\n    return MatMul;\n}(op_1.Operation));\nexports.MatMul = MatMul;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL21hdG11bC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHMvbWF0bXVsLmpzPzZhYmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBtYXRtdWxfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL2JhY2tlbmRzL3R5cGVzL21hdG11bFwiKTtcbnZhciBncmFwaF91dGlsID0gcmVxdWlyZShcIi4uL2dyYXBoX3V0aWxcIik7XG52YXIgb3BfMSA9IHJlcXVpcmUoXCIuL29wXCIpO1xudmFyIE1hdE11bCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1hdE11bCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNYXRNdWwoeDFUZW5zb3IsIHgyVGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLngxVGVuc29yID0geDFUZW5zb3I7XG4gICAgICAgIF90aGlzLngyVGVuc29yID0geDJUZW5zb3I7XG4gICAgICAgIF90aGlzLnlUZW5zb3IgPSB5VGVuc29yO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE1hdE11bC5wcm90b3R5cGUuZmVlZEZvcndhcmQgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB4MSA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MVRlbnNvcik7XG4gICAgICAgIHZhciB4MiA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54MlRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGlmICh4MS5zaGFwZS5sZW5ndGggPT09IDIgJiYgeDIuc2hhcGUubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGgubWF0TXVsKHgxLCB4MikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHgxLnNoYXBlLmxlbmd0aCA9PT0gMiAmJiB4Mi5zaGFwZS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBpbmZlcmVuY2VBcnJheXMuc2V0KF90aGlzLnlUZW5zb3IsIGtlZXAobWF0aC5tYXRyaXhUaW1lc1ZlY3Rvcih4MSwgeDIpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh4MS5zaGFwZS5sZW5ndGggPT09IDEgJiYgeDIuc2hhcGUubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGgudmVjdG9yVGltZXNNYXRyaXgoeDEsIHgyKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIE1hdE11bC5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgeDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICB2YXIgZHkgPSBncmFkaWVudEFycmF5cy5nZXQodGhpcy55VGVuc29yKTtcbiAgICAgICAgaWYgKHgxLnNoYXBlLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgeDEgPSB4MS5yZXNoYXBlKFsxLCB4MS5zaXplXSk7XG4gICAgICAgICAgICBkeSA9IGR5LnJlc2hhcGUoWzEsIGR5LnNpemVdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeDIuc2hhcGUubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB4MiA9IHgyLnJlc2hhcGUoW3gyLnNpemUsIDFdKTtcbiAgICAgICAgICAgIGR5ID0gZHkucmVzaGFwZShbZHkuc2l6ZSwgMV0pO1xuICAgICAgICB9XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMueDFUZW5zb3IpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGR4MSA9IG1hdGgubWF0TXVsKGR5LCB4MiwgbWF0bXVsXzEuTWF0cml4T3JpZW50YXRpb24uUkVHVUxBUiwgbWF0bXVsXzEuTWF0cml4T3JpZW50YXRpb24uVFJBTlNQT1NFRCk7XG4gICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngxVGVuc29yLCBfdGhpcy54MVRlbnNvci5zaGFwZS5sZW5ndGggPT09IDEgPyBkeDEuYXMxRCgpIDogZHgxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChncmFwaF91dGlsLnNob3VsZEJhY2tQcm9wKF90aGlzLngyVGVuc29yKSkge1xuICAgICAgICAgICAgICAgIHZhciBkeDIgPSBtYXRoLm1hdE11bCh4MSwgZHksIG1hdG11bF8xLk1hdHJpeE9yaWVudGF0aW9uLlRSQU5TUE9TRUQsIG1hdG11bF8xLk1hdHJpeE9yaWVudGF0aW9uLlJFR1VMQVIpO1xuICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgX3RoaXMueDJUZW5zb3Iuc2hhcGUubGVuZ3RoID09PSAxID8gZHgyLmFzMUQoKSA6IGR4Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIE1hdE11bDtcbn0ob3BfMS5PcGVyYXRpb24pKTtcbmV4cG9ydHMuTWF0TXVsID0gTWF0TXVsO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/matmul.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/max_pool.js":
/*!***********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/max_pool.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar conv_util = __webpack_require__(/*! ../../math/conv_util */ \"./node_modules/deeplearn/dist/math/conv_util.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar MaxPool = (function (_super) {\n    __extends(MaxPool, _super);\n    function MaxPool(xTensor, yTensor, fieldSize, stride, pad) {\n        if (stride === void 0) { stride = 1; }\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        _this.fieldSize = fieldSize;\n        _this.stride = stride;\n        if (pad != null) {\n            _this.pad = pad;\n        }\n        else {\n            _this.pad = conv_util.computeDefaultPad(xTensor.shape, _this.fieldSize, _this.stride);\n        }\n        util.assert(util.isInt(_this.pad), \"The zero padding (\" + _this.pad + \") must be an integer. Change the \" +\n            \"stride and/or zero pad parameters\");\n        return _this;\n    }\n    MaxPool.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(math.maxPool(x, _this.fieldSize, _this.stride, _this.pad)));\n        });\n    };\n    MaxPool.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            gradientArrays.add(_this.xTensor, math.maxPoolBackprop(dy, x, _this.fieldSize, _this.stride, _this.pad));\n        });\n    };\n    return MaxPool;\n}(op_1.Operation));\nexports.MaxPool = MaxPool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL21heF9wb29sLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9tYXhfcG9vbC5qcz85YTliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29udl91dGlsID0gcmVxdWlyZShcIi4uLy4uL21hdGgvY29udl91dGlsXCIpO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgTWF4UG9vbCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1heFBvb2wsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTWF4UG9vbCh4VGVuc29yLCB5VGVuc29yLCBmaWVsZFNpemUsIHN0cmlkZSwgcGFkKSB7XG4gICAgICAgIGlmIChzdHJpZGUgPT09IHZvaWQgMCkgeyBzdHJpZGUgPSAxOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnhUZW5zb3IgPSB4VGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgX3RoaXMuZmllbGRTaXplID0gZmllbGRTaXplO1xuICAgICAgICBfdGhpcy5zdHJpZGUgPSBzdHJpZGU7XG4gICAgICAgIGlmIChwYWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgX3RoaXMucGFkID0gcGFkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3RoaXMucGFkID0gY29udl91dGlsLmNvbXB1dGVEZWZhdWx0UGFkKHhUZW5zb3Iuc2hhcGUsIF90aGlzLmZpZWxkU2l6ZSwgX3RoaXMuc3RyaWRlKTtcbiAgICAgICAgfVxuICAgICAgICB1dGlsLmFzc2VydCh1dGlsLmlzSW50KF90aGlzLnBhZCksIFwiVGhlIHplcm8gcGFkZGluZyAoXCIgKyBfdGhpcy5wYWQgKyBcIikgbXVzdCBiZSBhbiBpbnRlZ2VyLiBDaGFuZ2UgdGhlIFwiICtcbiAgICAgICAgICAgIFwic3RyaWRlIGFuZC9vciB6ZXJvIHBhZCBwYXJhbWV0ZXJzXCIpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE1heFBvb2wucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy54VGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKG1hdGgubWF4UG9vbCh4LCBfdGhpcy5maWVsZFNpemUsIF90aGlzLnN0cmlkZSwgX3RoaXMucGFkKSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIE1heFBvb2wucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueFRlbnNvcik7XG4gICAgICAgIHZhciBkeSA9IGdyYWRpZW50QXJyYXlzLmdldCh0aGlzLnlUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54VGVuc29yLCBtYXRoLm1heFBvb2xCYWNrcHJvcChkeSwgeCwgX3RoaXMuZmllbGRTaXplLCBfdGhpcy5zdHJpZGUsIF90aGlzLnBhZCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBNYXhQb29sO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5NYXhQb29sID0gTWF4UG9vbDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/max_pool.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/multiply.js":
/*!***********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/multiply.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Multiply = (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply(x1Tensor, x2Tensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.x1Tensor = x1Tensor;\n        _this.x2Tensor = x2Tensor;\n        _this.yTensor = yTensor;\n        util.assert(util.sizeFromShape(x1Tensor.shape) === 1 ||\n            util.sizeFromShape(x2Tensor.shape) === 1 ||\n            util.arraysEqual(x1Tensor.shape, x2Tensor.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Multiply.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.x1Tensor);\n        var t2 = inferenceArrays.get(this.x2Tensor);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarTimesArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.scalarTimesArray(t2, t1);\n            }\n            else {\n                result = math.elementWiseMul(t1, t2);\n            }\n            inferenceArrays.set(_this.yTensor, keep(result));\n        });\n    };\n    Multiply.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var x1 = inferenceArrays.get(this.x1Tensor);\n        var x2 = inferenceArrays.get(this.x2Tensor);\n        var dy = gradientArrays.get(this.yTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.x1Tensor)) {\n                if (util.isScalarShape(_this.x1Tensor.shape)) {\n                    var mul = math.elementWiseMul(dy, x2);\n                    gradientArrays.add(_this.x1Tensor, math.sum(mul));\n                }\n                else if (util.isScalarShape(x2.shape)) {\n                    gradientArrays.add(_this.x1Tensor, math.scalarTimesArray(x2, dy));\n                }\n                else {\n                    gradientArrays.add(_this.x1Tensor, math.elementWiseMul(x2, dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.x2Tensor)) {\n                if (util.isScalarShape(_this.x2Tensor.shape)) {\n                    var mul = math.elementWiseMul(dy, x1);\n                    gradientArrays.add(_this.x2Tensor, math.sum(mul));\n                }\n                else if (util.isScalarShape(x1.shape)) {\n                    gradientArrays.add(_this.x2Tensor, math.scalarTimesArray(x1, dy));\n                }\n                else {\n                    gradientArrays.add(_this.x2Tensor, math.elementWiseMul(x1, dy));\n                }\n            }\n        });\n    };\n    return Multiply;\n}(op_1.Operation));\nexports.Multiply = Multiply;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL211bHRpcGx5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9tdWx0aXBseS5qcz82ZDkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGdyYXBoX3V0aWwgPSByZXF1aXJlKFwiLi4vZ3JhcGhfdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgTXVsdGlwbHkgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNdWx0aXBseSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNdWx0aXBseSh4MVRlbnNvciwgeDJUZW5zb3IsIHlUZW5zb3IpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueDFUZW5zb3IgPSB4MVRlbnNvcjtcbiAgICAgICAgX3RoaXMueDJUZW5zb3IgPSB4MlRlbnNvcjtcbiAgICAgICAgX3RoaXMueVRlbnNvciA9IHlUZW5zb3I7XG4gICAgICAgIHV0aWwuYXNzZXJ0KHV0aWwuc2l6ZUZyb21TaGFwZSh4MVRlbnNvci5zaGFwZSkgPT09IDEgfHxcbiAgICAgICAgICAgIHV0aWwuc2l6ZUZyb21TaGFwZSh4MlRlbnNvci5zaGFwZSkgPT09IDEgfHxcbiAgICAgICAgICAgIHV0aWwuYXJyYXlzRXF1YWwoeDFUZW5zb3Iuc2hhcGUsIHgyVGVuc29yLnNoYXBlKSwgJ09uZSBvZiB0MSBvciB0MiBtdXN0IGJlIGEgc2NhbGFyLCBvciB0MSBhbmQgdDIgbXVzdCBoYXZlICcgK1xuICAgICAgICAgICAgJ3RoZSBzYW1lIHNoYXBlJyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTXVsdGlwbHkucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgdDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh0MS5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLnNjYWxhclRpbWVzQXJyYXkodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh0Mi5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLnNjYWxhclRpbWVzQXJyYXkodDIsIHQxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG1hdGguZWxlbWVudFdpc2VNdWwodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChyZXN1bHQpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBNdWx0aXBseS5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDFUZW5zb3IpO1xuICAgICAgICB2YXIgeDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueDJUZW5zb3IpO1xuICAgICAgICB2YXIgZHkgPSBncmFkaWVudEFycmF5cy5nZXQodGhpcy55VGVuc29yKTtcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoZ3JhcGhfdXRpbC5zaG91bGRCYWNrUHJvcChfdGhpcy54MVRlbnNvcikpIHtcbiAgICAgICAgICAgICAgICBpZiAodXRpbC5pc1NjYWxhclNoYXBlKF90aGlzLngxVGVuc29yLnNoYXBlKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbXVsID0gbWF0aC5lbGVtZW50V2lzZU11bChkeSwgeDIpO1xuICAgICAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueDFUZW5zb3IsIG1hdGguc3VtKG11bCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh1dGlsLmlzU2NhbGFyU2hhcGUoeDIuc2hhcGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MVRlbnNvciwgbWF0aC5zY2FsYXJUaW1lc0FycmF5KHgyLCBkeSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngxVGVuc29yLCBtYXRoLmVsZW1lbnRXaXNlTXVsKHgyLCBkeSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChncmFwaF91dGlsLnNob3VsZEJhY2tQcm9wKF90aGlzLngyVGVuc29yKSkge1xuICAgICAgICAgICAgICAgIGlmICh1dGlsLmlzU2NhbGFyU2hhcGUoX3RoaXMueDJUZW5zb3Iuc2hhcGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtdWwgPSBtYXRoLmVsZW1lbnRXaXNlTXVsKGR5LCB4MSk7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54MlRlbnNvciwgbWF0aC5zdW0obXVsKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh4MS5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLngyVGVuc29yLCBtYXRoLnNjYWxhclRpbWVzQXJyYXkoeDEsIGR5KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBncmFkaWVudEFycmF5cy5hZGQoX3RoaXMueDJUZW5zb3IsIG1hdGguZWxlbWVudFdpc2VNdWwoeDEsIGR5KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBNdWx0aXBseTtcbn0ob3BfMS5PcGVyYXRpb24pKTtcbmV4cG9ydHMuTXVsdGlwbHkgPSBNdWx0aXBseTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/multiply.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/op.js":
/*!*****************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/op.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation = (function () {\n    function Operation() {\n    }\n    Operation.prototype.disposeTransientArrays = function (inferenceArrays, gradientArrays) { };\n    Operation.prototype.dispose = function () { };\n    return Operation;\n}());\nexports.Operation = Operation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL29wLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9vcC5qcz84Y2U4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE9wZXJhdGlvbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gT3BlcmF0aW9uKCkge1xuICAgIH1cbiAgICBPcGVyYXRpb24ucHJvdG90eXBlLmRpc3Bvc2VUcmFuc2llbnRBcnJheXMgPSBmdW5jdGlvbiAoaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykgeyB9O1xuICAgIE9wZXJhdGlvbi5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHsgfTtcbiAgICByZXR1cm4gT3BlcmF0aW9uO1xufSgpKTtcbmV4cG9ydHMuT3BlcmF0aW9uID0gT3BlcmF0aW9uO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/op.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/reduce_sum.js":
/*!*************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/reduce_sum.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar ReduceSum = (function (_super) {\n    __extends(ReduceSum, _super);\n    function ReduceSum(x, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.x = x;\n        _this.outTensor = outTensor;\n        util.assertShapesMatch(outTensor.shape, []);\n        _this.ones = ndarray_1.NDArray.ones(x.shape);\n        return _this;\n    }\n    ReduceSum.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.x);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.outTensor, keep(math.sum(x)));\n        });\n    };\n    ReduceSum.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        if (!graph_util.shouldBackProp(this.x)) {\n            return;\n        }\n        math.scope(function () {\n            var dy = gradientArrays.get(_this.outTensor);\n            gradientArrays.add(_this.x, math.scalarTimesArray(dy, _this.ones));\n        });\n    };\n    return ReduceSum;\n}(op_1.Operation));\nexports.ReduceSum = ReduceSum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3JlZHVjZV9zdW0uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3JlZHVjZV9zdW0uanM/ODhhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL25kYXJyYXlcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGdyYXBoX3V0aWwgPSByZXF1aXJlKFwiLi4vZ3JhcGhfdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgUmVkdWNlU3VtID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUmVkdWNlU3VtLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFJlZHVjZVN1bSh4LCBvdXRUZW5zb3IpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMueCA9IHg7XG4gICAgICAgIF90aGlzLm91dFRlbnNvciA9IG91dFRlbnNvcjtcbiAgICAgICAgdXRpbC5hc3NlcnRTaGFwZXNNYXRjaChvdXRUZW5zb3Iuc2hhcGUsIFtdKTtcbiAgICAgICAgX3RoaXMub25lcyA9IG5kYXJyYXlfMS5OREFycmF5Lm9uZXMoeC5zaGFwZSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgUmVkdWNlU3VtLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueCk7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMub3V0VGVuc29yLCBrZWVwKG1hdGguc3VtKHgpKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgUmVkdWNlU3VtLnByb3RvdHlwZS5iYWNrUHJvcCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMsIGdyYWRpZW50QXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICghZ3JhcGhfdXRpbC5zaG91bGRCYWNrUHJvcCh0aGlzLngpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZHkgPSBncmFkaWVudEFycmF5cy5nZXQoX3RoaXMub3V0VGVuc29yKTtcbiAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy54LCBtYXRoLnNjYWxhclRpbWVzQXJyYXkoZHksIF90aGlzLm9uZXMpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVkdWNlU3VtO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5SZWR1Y2VTdW0gPSBSZWR1Y2VTdW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/reduce_sum.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/reshape.js":
/*!**********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/reshape.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Reshape = (function (_super) {\n    __extends(Reshape, _super);\n    function Reshape(xTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.xTensor = xTensor;\n        _this.yTensor = yTensor;\n        var xSize = util.sizeFromShape(xTensor.shape);\n        var ySize = util.sizeFromShape(yTensor.shape);\n        util.assert(xSize === ySize, \"The input size (\" + xSize + \") and output size (\" + ySize + \") must match\");\n        return _this;\n    }\n    Reshape.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var x = inferenceArrays.get(this.xTensor);\n        var clone = math.clone(x);\n        math.scope(function (keep) {\n            inferenceArrays.set(_this.yTensor, keep(clone.reshape(_this.yTensor.shape)));\n        });\n    };\n    Reshape.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.yTensor);\n        var clone = math.clone(dy);\n        math.scope(function () {\n            gradientArrays.add(_this.xTensor, clone.reshape(_this.xTensor.shape));\n        });\n    };\n    return Reshape;\n}(op_1.Operation));\nexports.Reshape = Reshape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3Jlc2hhcGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3Jlc2hhcGUuanM/YTg0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgUmVzaGFwZSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJlc2hhcGUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUmVzaGFwZSh4VGVuc29yLCB5VGVuc29yKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnhUZW5zb3IgPSB4VGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgdmFyIHhTaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKHhUZW5zb3Iuc2hhcGUpO1xuICAgICAgICB2YXIgeVNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoeVRlbnNvci5zaGFwZSk7XG4gICAgICAgIHV0aWwuYXNzZXJ0KHhTaXplID09PSB5U2l6ZSwgXCJUaGUgaW5wdXQgc2l6ZSAoXCIgKyB4U2l6ZSArIFwiKSBhbmQgb3V0cHV0IHNpemUgKFwiICsgeVNpemUgKyBcIikgbXVzdCBtYXRjaFwiKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBSZXNoYXBlLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMueFRlbnNvcik7XG4gICAgICAgIHZhciBjbG9uZSA9IG1hdGguY2xvbmUoeCk7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMueVRlbnNvciwga2VlcChjbG9uZS5yZXNoYXBlKF90aGlzLnlUZW5zb3Iuc2hhcGUpKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgUmVzaGFwZS5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzLCBncmFkaWVudEFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgZHkgPSBncmFkaWVudEFycmF5cy5nZXQodGhpcy55VGVuc29yKTtcbiAgICAgICAgdmFyIGNsb25lID0gbWF0aC5jbG9uZShkeSk7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLnhUZW5zb3IsIGNsb25lLnJlc2hhcGUoX3RoaXMueFRlbnNvci5zaGFwZSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBSZXNoYXBlO1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5SZXNoYXBlID0gUmVzaGFwZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/reshape.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/softmax.js":
/*!**********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/softmax.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_1 = __webpack_require__(/*! ../graph */ \"./node_modules/deeplearn/dist/graph/graph.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Softmax = (function (_super) {\n    __extends(Softmax, _super);\n    function Softmax(logitsTensor, output) {\n        var _this = _super.call(this) || this;\n        _this.logitsTensor = logitsTensor;\n        _this.output = output;\n        return _this;\n    }\n    Softmax.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var logits = inferenceArrays.get(this.logitsTensor);\n        return math.scope(function (keep) {\n            inferenceArrays.set(_this.output, keep(math.softmax(logits)));\n        });\n    };\n    Softmax.prototype.backProp = function () {\n        throw Error('Softmax backprop is not yet implemented');\n    };\n    return Softmax;\n}(op_1.Operation));\nexports.Softmax = Softmax;\nvar SoftmaxCrossEntropyCost = (function (_super) {\n    __extends(SoftmaxCrossEntropyCost, _super);\n    function SoftmaxCrossEntropyCost(logitsTensor, labelTensor, yTensor) {\n        var _this = _super.call(this) || this;\n        _this.logitsTensor = logitsTensor;\n        _this.labelTensor = labelTensor;\n        _this.yTensor = yTensor;\n        _this.epsilon = ndarray_1.Scalar.new(1e-5);\n        _this.softmaxTensor = new graph_1.Tensor(logitsTensor.shape);\n        return _this;\n    }\n    SoftmaxCrossEntropyCost.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var logits = inferenceArrays.get(this.logitsTensor);\n        var label = inferenceArrays.get(this.labelTensor);\n        math.scope(function (keep) {\n            var softmaxResult = math.softmax(logits);\n            inferenceArrays.set(_this.softmaxTensor, keep(softmaxResult));\n            inferenceArrays.set(_this.yTensor, keep(crossEntropyCost(math, softmaxResult, label, _this.epsilon)));\n        });\n    };\n    SoftmaxCrossEntropyCost.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var softmax = inferenceArrays.get(this.softmaxTensor);\n        var label = inferenceArrays.get(this.labelTensor);\n        math.scope(function () {\n            gradientArrays.add(_this.logitsTensor, math.subtract(softmax, label));\n        });\n    };\n    SoftmaxCrossEntropyCost.prototype.disposeTransientArrays = function (inferenceArrays, gradientArrays) {\n        inferenceArrays.disposeArray(this.softmaxTensor);\n    };\n    SoftmaxCrossEntropyCost.prototype.dispose = function () {\n        this.epsilon.dispose();\n    };\n    return SoftmaxCrossEntropyCost;\n}(op_1.Operation));\nexports.SoftmaxCrossEntropyCost = SoftmaxCrossEntropyCost;\nfunction crossEntropyCost(math, y, target, epsilon) {\n    util.assert(y.size === target.size, 'The output and target must be the same size');\n    return math.scope(function () {\n        var yPlusEps = math.scalarPlusArray(epsilon, y);\n        var logOutput = math.log(yPlusEps);\n        var tarLogOutput = math.elementWiseMul(target, logOutput);\n        var costVector = math.neg(tarLogOutput);\n        return math.sum(costVector);\n    });\n}\nexports.crossEntropyCost = crossEntropyCost;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3NvZnRtYXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3NvZnRtYXguanM/YzU2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL25kYXJyYXlcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGdyYXBoXzEgPSByZXF1aXJlKFwiLi4vZ3JhcGhcIik7XG52YXIgb3BfMSA9IHJlcXVpcmUoXCIuL29wXCIpO1xudmFyIFNvZnRtYXggPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTb2Z0bWF4LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNvZnRtYXgobG9naXRzVGVuc29yLCBvdXRwdXQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubG9naXRzVGVuc29yID0gbG9naXRzVGVuc29yO1xuICAgICAgICBfdGhpcy5vdXRwdXQgPSBvdXRwdXQ7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU29mdG1heC5wcm90b3R5cGUuZmVlZEZvcndhcmQgPSBmdW5jdGlvbiAobWF0aCwgaW5mZXJlbmNlQXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBsb2dpdHMgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMubG9naXRzVGVuc29yKTtcbiAgICAgICAgcmV0dXJuIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMub3V0cHV0LCBrZWVwKG1hdGguc29mdG1heChsb2dpdHMpKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU29mdG1heC5wcm90b3R5cGUuYmFja1Byb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdTb2Z0bWF4IGJhY2twcm9wIGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQnKTtcbiAgICB9O1xuICAgIHJldHVybiBTb2Z0bWF4O1xufShvcF8xLk9wZXJhdGlvbikpO1xuZXhwb3J0cy5Tb2Z0bWF4ID0gU29mdG1heDtcbnZhciBTb2Z0bWF4Q3Jvc3NFbnRyb3B5Q29zdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNvZnRtYXhDcm9zc0VudHJvcHlDb3N0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNvZnRtYXhDcm9zc0VudHJvcHlDb3N0KGxvZ2l0c1RlbnNvciwgbGFiZWxUZW5zb3IsIHlUZW5zb3IpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubG9naXRzVGVuc29yID0gbG9naXRzVGVuc29yO1xuICAgICAgICBfdGhpcy5sYWJlbFRlbnNvciA9IGxhYmVsVGVuc29yO1xuICAgICAgICBfdGhpcy55VGVuc29yID0geVRlbnNvcjtcbiAgICAgICAgX3RoaXMuZXBzaWxvbiA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KDFlLTUpO1xuICAgICAgICBfdGhpcy5zb2Z0bWF4VGVuc29yID0gbmV3IGdyYXBoXzEuVGVuc29yKGxvZ2l0c1RlbnNvci5zaGFwZSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU29mdG1heENyb3NzRW50cm9weUNvc3QucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgbG9naXRzID0gaW5mZXJlbmNlQXJyYXlzLmdldCh0aGlzLmxvZ2l0c1RlbnNvcik7XG4gICAgICAgIHZhciBsYWJlbCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy5sYWJlbFRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIHZhciBzb2Z0bWF4UmVzdWx0ID0gbWF0aC5zb2Z0bWF4KGxvZ2l0cyk7XG4gICAgICAgICAgICBpbmZlcmVuY2VBcnJheXMuc2V0KF90aGlzLnNvZnRtYXhUZW5zb3IsIGtlZXAoc29mdG1heFJlc3VsdCkpO1xuICAgICAgICAgICAgaW5mZXJlbmNlQXJyYXlzLnNldChfdGhpcy55VGVuc29yLCBrZWVwKGNyb3NzRW50cm9weUNvc3QobWF0aCwgc29mdG1heFJlc3VsdCwgbGFiZWwsIF90aGlzLmVwc2lsb24pKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU29mdG1heENyb3NzRW50cm9weUNvc3QucHJvdG90eXBlLmJhY2tQcm9wID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHNvZnRtYXggPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMuc29mdG1heFRlbnNvcik7XG4gICAgICAgIHZhciBsYWJlbCA9IGluZmVyZW5jZUFycmF5cy5nZXQodGhpcy5sYWJlbFRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLmxvZ2l0c1RlbnNvciwgbWF0aC5zdWJ0cmFjdChzb2Z0bWF4LCBsYWJlbCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFNvZnRtYXhDcm9zc0VudHJvcHlDb3N0LnByb3RvdHlwZS5kaXNwb3NlVHJhbnNpZW50QXJyYXlzID0gZnVuY3Rpb24gKGluZmVyZW5jZUFycmF5cywgZ3JhZGllbnRBcnJheXMpIHtcbiAgICAgICAgaW5mZXJlbmNlQXJyYXlzLmRpc3Bvc2VBcnJheSh0aGlzLnNvZnRtYXhUZW5zb3IpO1xuICAgIH07XG4gICAgU29mdG1heENyb3NzRW50cm9weUNvc3QucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZXBzaWxvbi5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gU29mdG1heENyb3NzRW50cm9weUNvc3Q7XG59KG9wXzEuT3BlcmF0aW9uKSk7XG5leHBvcnRzLlNvZnRtYXhDcm9zc0VudHJvcHlDb3N0ID0gU29mdG1heENyb3NzRW50cm9weUNvc3Q7XG5mdW5jdGlvbiBjcm9zc0VudHJvcHlDb3N0KG1hdGgsIHksIHRhcmdldCwgZXBzaWxvbikge1xuICAgIHV0aWwuYXNzZXJ0KHkuc2l6ZSA9PT0gdGFyZ2V0LnNpemUsICdUaGUgb3V0cHV0IGFuZCB0YXJnZXQgbXVzdCBiZSB0aGUgc2FtZSBzaXplJyk7XG4gICAgcmV0dXJuIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgeVBsdXNFcHMgPSBtYXRoLnNjYWxhclBsdXNBcnJheShlcHNpbG9uLCB5KTtcbiAgICAgICAgdmFyIGxvZ091dHB1dCA9IG1hdGgubG9nKHlQbHVzRXBzKTtcbiAgICAgICAgdmFyIHRhckxvZ091dHB1dCA9IG1hdGguZWxlbWVudFdpc2VNdWwodGFyZ2V0LCBsb2dPdXRwdXQpO1xuICAgICAgICB2YXIgY29zdFZlY3RvciA9IG1hdGgubmVnKHRhckxvZ091dHB1dCk7XG4gICAgICAgIHJldHVybiBtYXRoLnN1bShjb3N0VmVjdG9yKTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuY3Jvc3NFbnRyb3B5Q29zdCA9IGNyb3NzRW50cm9weUNvc3Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/softmax.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/ops/subtract.js":
/*!***********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/ops/subtract.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_util = __webpack_require__(/*! ../graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nvar op_1 = __webpack_require__(/*! ./op */ \"./node_modules/deeplearn/dist/graph/ops/op.js\");\nvar Subtract = (function (_super) {\n    __extends(Subtract, _super);\n    function Subtract(t1, t2, outTensor) {\n        var _this = _super.call(this) || this;\n        _this.t1 = t1;\n        _this.t2 = t2;\n        _this.outTensor = outTensor;\n        util.assert(util.sizeFromShape(t1.shape) === 1 ||\n            util.sizeFromShape(t2.shape) === 1 ||\n            util.arraysEqual(t1.shape, t2.shape), 'One of t1 or t2 must be a scalar, or t1 and t2 must have ' +\n            'the same shape');\n        return _this;\n    }\n    Subtract.prototype.feedForward = function (math, inferenceArrays) {\n        var _this = this;\n        var t1 = inferenceArrays.get(this.t1);\n        var t2 = inferenceArrays.get(this.t2);\n        math.scope(function (keep) {\n            var result;\n            if (util.isScalarShape(t1.shape)) {\n                result = math.scalarMinusArray(t1, t2);\n            }\n            else if (util.isScalarShape(t2.shape)) {\n                result = math.arrayMinusScalar(t1, t2);\n            }\n            else {\n                result = math.subtract(t1, t2);\n            }\n            inferenceArrays.set(_this.outTensor, keep(result));\n        });\n    };\n    Subtract.prototype.backProp = function (math, inferenceArrays, gradientArrays) {\n        var _this = this;\n        var dy = gradientArrays.get(this.outTensor);\n        math.scope(function () {\n            if (graph_util.shouldBackProp(_this.t1)) {\n                if (util.isScalarShape(_this.t1.shape)) {\n                    var sum = math.sum(dy);\n                    gradientArrays.add(_this.t1, sum);\n                }\n                else {\n                    gradientArrays.add(_this.t1, math.clone(dy));\n                }\n            }\n            if (graph_util.shouldBackProp(_this.t2)) {\n                if (util.isScalarShape(_this.t2.shape)) {\n                    var sum = math.sum(dy);\n                    var negSum = math.neg(sum);\n                    gradientArrays.add(_this.t2, negSum);\n                }\n                else {\n                    gradientArrays.add(_this.t2, math.neg(dy));\n                }\n            }\n        });\n    };\n    Subtract.prototype.dispose = function () {\n        if (this.dySizeScalar != null) {\n            this.dySizeScalar.dispose();\n        }\n    };\n    return Subtract;\n}(op_1.Operation));\nexports.Subtract = Subtract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3BzL3N1YnRyYWN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wcy9zdWJ0cmFjdC5qcz8yZTFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGdyYXBoX3V0aWwgPSByZXF1aXJlKFwiLi4vZ3JhcGhfdXRpbFwiKTtcbnZhciBvcF8xID0gcmVxdWlyZShcIi4vb3BcIik7XG52YXIgU3VidHJhY3QgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTdWJ0cmFjdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdWJ0cmFjdCh0MSwgdDIsIG91dFRlbnNvcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50MSA9IHQxO1xuICAgICAgICBfdGhpcy50MiA9IHQyO1xuICAgICAgICBfdGhpcy5vdXRUZW5zb3IgPSBvdXRUZW5zb3I7XG4gICAgICAgIHV0aWwuYXNzZXJ0KHV0aWwuc2l6ZUZyb21TaGFwZSh0MS5zaGFwZSkgPT09IDEgfHxcbiAgICAgICAgICAgIHV0aWwuc2l6ZUZyb21TaGFwZSh0Mi5zaGFwZSkgPT09IDEgfHxcbiAgICAgICAgICAgIHV0aWwuYXJyYXlzRXF1YWwodDEuc2hhcGUsIHQyLnNoYXBlKSwgJ09uZSBvZiB0MSBvciB0MiBtdXN0IGJlIGEgc2NhbGFyLCBvciB0MSBhbmQgdDIgbXVzdCBoYXZlICcgK1xuICAgICAgICAgICAgJ3RoZSBzYW1lIHNoYXBlJyk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU3VidHJhY3QucHJvdG90eXBlLmZlZWRGb3J3YXJkID0gZnVuY3Rpb24gKG1hdGgsIGluZmVyZW5jZUFycmF5cykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdDEgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMudDEpO1xuICAgICAgICB2YXIgdDIgPSBpbmZlcmVuY2VBcnJheXMuZ2V0KHRoaXMudDIpO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh0MS5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLnNjYWxhck1pbnVzQXJyYXkodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZSh0Mi5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBtYXRoLmFycmF5TWludXNTY2FsYXIodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG1hdGguc3VidHJhY3QodDEsIHQyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZmVyZW5jZUFycmF5cy5zZXQoX3RoaXMub3V0VGVuc29yLCBrZWVwKHJlc3VsdCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFN1YnRyYWN0LnByb3RvdHlwZS5iYWNrUHJvcCA9IGZ1bmN0aW9uIChtYXRoLCBpbmZlcmVuY2VBcnJheXMsIGdyYWRpZW50QXJyYXlzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkeSA9IGdyYWRpZW50QXJyYXlzLmdldCh0aGlzLm91dFRlbnNvcik7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMudDEpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZShfdGhpcy50MS5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1bSA9IG1hdGguc3VtKGR5KTtcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLnQxLCBzdW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRBcnJheXMuYWRkKF90aGlzLnQxLCBtYXRoLmNsb25lKGR5KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyYXBoX3V0aWwuc2hvdWxkQmFja1Byb3AoX3RoaXMudDIpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHV0aWwuaXNTY2FsYXJTaGFwZShfdGhpcy50Mi5zaGFwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1bSA9IG1hdGguc3VtKGR5KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5lZ1N1bSA9IG1hdGgubmVnKHN1bSk7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy50MiwgbmVnU3VtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGdyYWRpZW50QXJyYXlzLmFkZChfdGhpcy50MiwgbWF0aC5uZWcoZHkpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU3VidHJhY3QucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmR5U2l6ZVNjYWxhciAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmR5U2l6ZVNjYWxhci5kaXNwb3NlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBTdWJ0cmFjdDtcbn0ob3BfMS5PcGVyYXRpb24pKTtcbmV4cG9ydHMuU3VidHJhY3QgPSBTdWJ0cmFjdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/ops/subtract.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar AdadeltaOptimizer = (function (_super) {\n    __extends(AdadeltaOptimizer, _super);\n    function AdadeltaOptimizer(learningRate, gamma, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.gamma = gamma;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.accumulatedUpdates = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        _this.g = ndarray_1.Scalar.new(_this.gamma);\n        return _this;\n    }\n    AdadeltaOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n                _this.accumulatedUpdates.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdadeltaOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var oldUpdates = _this.accumulatedUpdates.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.scaledArrayAdd(_this.g, oldCache, math.subtract(_this.one, _this.g), gradientSquare);\n                var updates = math.multiply(math.divide(math.sqrt(math.add(oldUpdates, _this.eps)), math.sqrt(math.add(oldCache, _this.eps))), gradient);\n                var variable = math.scaledArrayAdd(_this.c, updates, _this.one, oldVariable);\n                var updateSquare = math.multiply(updates, updates);\n                var newUpdates = math.scaledArrayAdd(_this.g, oldUpdates, math.subtract(_this.one, _this.g), updateSquare);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                _this.accumulatedUpdates.set(node.output, keep(newUpdates));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n                oldUpdates.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdadeltaOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.g.dispose();\n        this.accumulatedSquaredGradients.dispose();\n        this.accumulatedUpdates.dispose();\n    };\n    return AdadeltaOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdadeltaOptimizer = AdadeltaOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9hZGFkZWx0YV9vcHRpbWl6ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9hZGFkZWx0YV9vcHRpbWl6ZXIuanM/YWYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL25kYXJyYXlcIik7XG52YXIgdGVuc29yX2FycmF5X21hcF8xID0gcmVxdWlyZShcIi4uL3RlbnNvcl9hcnJheV9tYXBcIik7XG52YXIgb3B0aW1pemVyXzEgPSByZXF1aXJlKFwiLi9vcHRpbWl6ZXJcIik7XG52YXIgQWRhZGVsdGFPcHRpbWl6ZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBZGFkZWx0YU9wdGltaXplciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBBZGFkZWx0YU9wdGltaXplcihsZWFybmluZ1JhdGUsIGdhbW1hLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbGVhcm5pbmdSYXRlLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmxlYXJuaW5nUmF0ZSA9IGxlYXJuaW5nUmF0ZTtcbiAgICAgICAgX3RoaXMuZ2FtbWEgPSBnYW1tYTtcbiAgICAgICAgX3RoaXMuYWNjdW11bGF0ZWRTcXVhcmVkR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgICAgICBfdGhpcy5hY2N1bXVsYXRlZFVwZGF0ZXMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgICAgIF90aGlzLmVwcyA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KDFlLTYpO1xuICAgICAgICBfdGhpcy5nID0gbmRhcnJheV8xLlNjYWxhci5uZXcoX3RoaXMuZ2FtbWEpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIEFkYWRlbHRhT3B0aW1pemVyLnByb3RvdHlwZS5iZWZvcmVCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmJlZm9yZUJhdGNoLmNhbGwodGhpcywgbWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApO1xuICAgICAgICBpZiAodGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuc2l6ZSgpID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnZhcmlhYmxlTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5zZXQobm9kZS5vdXRwdXQsIG5kYXJyYXlfMS5OREFycmF5Lnplcm9zKG5vZGUub3V0cHV0LnNoYXBlKSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuYWNjdW11bGF0ZWRVcGRhdGVzLnNldChub2RlLm91dHB1dCwgbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mobm9kZS5vdXRwdXQuc2hhcGUpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBBZGFkZWx0YU9wdGltaXplci5wcm90b3R5cGUuYWZ0ZXJCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICBfdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkVmFyaWFibGUgPSBhY3RpdmF0aW9uQXJyYXlNYXAuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnQgPSBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBvbGRDYWNoZSA9IF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBvbGRVcGRhdGVzID0gX3RoaXMuYWNjdW11bGF0ZWRVcGRhdGVzLmdldChub2RlLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgdmFyIGdyYWRpZW50U3F1YXJlID0gbWF0aC5tdWx0aXBseShncmFkaWVudCwgZ3JhZGllbnQpO1xuICAgICAgICAgICAgICAgIHZhciBjYWNoZSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuZywgb2xkQ2FjaGUsIG1hdGguc3VidHJhY3QoX3RoaXMub25lLCBfdGhpcy5nKSwgZ3JhZGllbnRTcXVhcmUpO1xuICAgICAgICAgICAgICAgIHZhciB1cGRhdGVzID0gbWF0aC5tdWx0aXBseShtYXRoLmRpdmlkZShtYXRoLnNxcnQobWF0aC5hZGQob2xkVXBkYXRlcywgX3RoaXMuZXBzKSksIG1hdGguc3FydChtYXRoLmFkZChvbGRDYWNoZSwgX3RoaXMuZXBzKSkpLCBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIHZhcmlhYmxlID0gbWF0aC5zY2FsZWRBcnJheUFkZChfdGhpcy5jLCB1cGRhdGVzLCBfdGhpcy5vbmUsIG9sZFZhcmlhYmxlKTtcbiAgICAgICAgICAgICAgICB2YXIgdXBkYXRlU3F1YXJlID0gbWF0aC5tdWx0aXBseSh1cGRhdGVzLCB1cGRhdGVzKTtcbiAgICAgICAgICAgICAgICB2YXIgbmV3VXBkYXRlcyA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuZywgb2xkVXBkYXRlcywgbWF0aC5zdWJ0cmFjdChfdGhpcy5vbmUsIF90aGlzLmcpLCB1cGRhdGVTcXVhcmUpO1xuICAgICAgICAgICAgICAgIF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5zZXQobm9kZS5vdXRwdXQsIGtlZXAoY2FjaGUpKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5hY2N1bXVsYXRlZFVwZGF0ZXMuc2V0KG5vZGUub3V0cHV0LCBrZWVwKG5ld1VwZGF0ZXMpKTtcbiAgICAgICAgICAgICAgICBhY3RpdmF0aW9uQXJyYXlNYXAuc2V0KG5vZGUub3V0cHV0LCBrZWVwKHZhcmlhYmxlKSk7XG4gICAgICAgICAgICAgICAgbm9kZS5kYXRhID0gdmFyaWFibGU7XG4gICAgICAgICAgICAgICAgb2xkVmFyaWFibGUuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIG9sZENhY2hlLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICBvbGRVcGRhdGVzLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52YXJpYWJsZUdyYWRpZW50cy5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgfTtcbiAgICBBZGFkZWx0YU9wdGltaXplci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuZXBzLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5nLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmFjY3VtdWxhdGVkVXBkYXRlcy5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gQWRhZGVsdGFPcHRpbWl6ZXI7XG59KG9wdGltaXplcl8xLk9wdGltaXplcikpO1xuZXhwb3J0cy5BZGFkZWx0YU9wdGltaXplciA9IEFkYWRlbHRhT3B0aW1pemVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar AdagradOptimizer = (function (_super) {\n    __extends(AdagradOptimizer, _super);\n    function AdagradOptimizer(learningRate, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        return _this;\n    }\n    AdagradOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdagradOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.add(oldCache, gradientSquare);\n                var variable = math.scaledArrayAdd(_this.c, math.divide(gradient, math.add(math.sqrt(cache), _this.eps)), _this.one, oldVariable);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdagradOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.accumulatedSquaredGradients.dispose();\n    };\n    return AdagradOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdagradOptimizer = AdagradOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9hZGFncmFkX29wdGltaXplci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHRpbWl6ZXJzL2FkYWdyYWRfb3B0aW1pemVyLmpzPzUxYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi4vLi4vbWF0aC9uZGFycmF5XCIpO1xudmFyIHRlbnNvcl9hcnJheV9tYXBfMSA9IHJlcXVpcmUoXCIuLi90ZW5zb3JfYXJyYXlfbWFwXCIpO1xudmFyIG9wdGltaXplcl8xID0gcmVxdWlyZShcIi4vb3B0aW1pemVyXCIpO1xudmFyIEFkYWdyYWRPcHRpbWl6ZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBZGFncmFkT3B0aW1pemVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEFkYWdyYWRPcHRpbWl6ZXIobGVhcm5pbmdSYXRlLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbGVhcm5pbmdSYXRlLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmxlYXJuaW5nUmF0ZSA9IGxlYXJuaW5nUmF0ZTtcbiAgICAgICAgX3RoaXMuYWNjdW11bGF0ZWRTcXVhcmVkR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgICAgICBfdGhpcy5lcHMgPSBuZGFycmF5XzEuU2NhbGFyLm5ldygxZS02KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBBZGFncmFkT3B0aW1pemVyLnByb3RvdHlwZS5iZWZvcmVCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmJlZm9yZUJhdGNoLmNhbGwodGhpcywgbWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApO1xuICAgICAgICBpZiAodGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuc2l6ZSgpID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnZhcmlhYmxlTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5zZXQobm9kZS5vdXRwdXQsIG5kYXJyYXlfMS5OREFycmF5Lnplcm9zKG5vZGUub3V0cHV0LnNoYXBlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQWRhZ3JhZE9wdGltaXplci5wcm90b3R5cGUuYWZ0ZXJCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICBfdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkVmFyaWFibGUgPSBhY3RpdmF0aW9uQXJyYXlNYXAuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnQgPSBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBvbGRDYWNoZSA9IF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBncmFkaWVudFNxdWFyZSA9IG1hdGgubXVsdGlwbHkoZ3JhZGllbnQsIGdyYWRpZW50KTtcbiAgICAgICAgICAgICAgICB2YXIgY2FjaGUgPSBtYXRoLmFkZChvbGRDYWNoZSwgZ3JhZGllbnRTcXVhcmUpO1xuICAgICAgICAgICAgICAgIHZhciB2YXJpYWJsZSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYywgbWF0aC5kaXZpZGUoZ3JhZGllbnQsIG1hdGguYWRkKG1hdGguc3FydChjYWNoZSksIF90aGlzLmVwcykpLCBfdGhpcy5vbmUsIG9sZFZhcmlhYmxlKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuc2V0KG5vZGUub3V0cHV0LCBrZWVwKGNhY2hlKSk7XG4gICAgICAgICAgICAgICAgYWN0aXZhdGlvbkFycmF5TWFwLnNldChub2RlLm91dHB1dCwga2VlcCh2YXJpYWJsZSkpO1xuICAgICAgICAgICAgICAgIG5vZGUuZGF0YSA9IHZhcmlhYmxlO1xuICAgICAgICAgICAgICAgIG9sZFZhcmlhYmxlLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICBvbGRDYWNoZS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnZhcmlhYmxlR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgIH07XG4gICAgQWRhZ3JhZE9wdGltaXplci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuZXBzLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgIH07XG4gICAgcmV0dXJuIEFkYWdyYWRPcHRpbWl6ZXI7XG59KG9wdGltaXplcl8xLk9wdGltaXplcikpO1xuZXhwb3J0cy5BZGFncmFkT3B0aW1pemVyID0gQWRhZ3JhZE9wdGltaXplcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js":
/*!************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar AdamOptimizer = (function (_super) {\n    __extends(AdamOptimizer, _super);\n    function AdamOptimizer(learningRate, beta1, beta2, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.firstMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.secondMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-8);\n        _this.b1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.b2 = ndarray_1.Scalar.new(_this.beta2);\n        _this.accB1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.accB2 = ndarray_1.Scalar.new(_this.beta2);\n        return _this;\n    }\n    AdamOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.firstMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.firstMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n        if (this.secondMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.secondMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdamOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldFirstMoment = _this.firstMoment.get(node.output);\n                var oldSecondMoment = _this.secondMoment.get(node.output);\n                var newFirstMoment = math.scaledArrayAdd(_this.b1, oldFirstMoment, math.subtract(_this.one, _this.b1), gradient);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var newSecondMoment = math.scaledArrayAdd(_this.b2, oldSecondMoment, math.subtract(_this.one, _this.b2), gradientSquare);\n                var biasCorrectedFirstMoment = math.divide(newFirstMoment, math.subtract(_this.one, _this.accB1));\n                var biasCorrectedSecondMoment = math.divide(newSecondMoment, math.subtract(_this.one, _this.accB2));\n                var variable = math.scaledArrayAdd(_this.c, math.divide(biasCorrectedFirstMoment, math.add(math.sqrt(biasCorrectedSecondMoment), _this.eps)), _this.one, oldVariable);\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                _this.firstMoment.set(node.output, keep(newFirstMoment));\n                _this.secondMoment.set(node.output, keep(newSecondMoment));\n                oldVariable.dispose();\n                gradient.dispose();\n                oldFirstMoment.dispose();\n                oldSecondMoment.dispose();\n            });\n            var oldAccB1 = _this.accB1;\n            var oldAccB2 = _this.accB2;\n            _this.accB1 = keep(math.multiply(_this.accB1, _this.b1));\n            _this.accB2 = keep(math.multiply(_this.accB2, _this.b2));\n            oldAccB1.dispose();\n            oldAccB2.dispose();\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdamOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.firstMoment.dispose();\n        this.secondMoment.dispose();\n        this.eps.dispose();\n        this.b1.dispose();\n        this.b2.dispose();\n        this.accB1.dispose();\n        this.accB2.dispose();\n    };\n    return AdamOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamOptimizer = AdamOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9hZGFtX29wdGltaXplci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHRpbWl6ZXJzL2FkYW1fb3B0aW1pemVyLmpzPzU0NmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi4vLi4vbWF0aC9uZGFycmF5XCIpO1xudmFyIHRlbnNvcl9hcnJheV9tYXBfMSA9IHJlcXVpcmUoXCIuLi90ZW5zb3JfYXJyYXlfbWFwXCIpO1xudmFyIG9wdGltaXplcl8xID0gcmVxdWlyZShcIi4vb3B0aW1pemVyXCIpO1xudmFyIEFkYW1PcHRpbWl6ZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBZGFtT3B0aW1pemVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEFkYW1PcHRpbWl6ZXIobGVhcm5pbmdSYXRlLCBiZXRhMSwgYmV0YTIsIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBsZWFybmluZ1JhdGUsIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubGVhcm5pbmdSYXRlID0gbGVhcm5pbmdSYXRlO1xuICAgICAgICBfdGhpcy5iZXRhMSA9IGJldGExO1xuICAgICAgICBfdGhpcy5iZXRhMiA9IGJldGEyO1xuICAgICAgICBfdGhpcy5maXJzdE1vbWVudCA9IG5ldyB0ZW5zb3JfYXJyYXlfbWFwXzEuVGVuc29yQXJyYXlNYXAoKTtcbiAgICAgICAgX3RoaXMuc2Vjb25kTW9tZW50ID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgICAgICBfdGhpcy5lcHMgPSBuZGFycmF5XzEuU2NhbGFyLm5ldygxZS04KTtcbiAgICAgICAgX3RoaXMuYjEgPSBuZGFycmF5XzEuU2NhbGFyLm5ldyhfdGhpcy5iZXRhMSk7XG4gICAgICAgIF90aGlzLmIyID0gbmRhcnJheV8xLlNjYWxhci5uZXcoX3RoaXMuYmV0YTIpO1xuICAgICAgICBfdGhpcy5hY2NCMSA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KF90aGlzLmJldGExKTtcbiAgICAgICAgX3RoaXMuYWNjQjIgPSBuZGFycmF5XzEuU2NhbGFyLm5ldyhfdGhpcy5iZXRhMik7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQWRhbU9wdGltaXplci5wcm90b3R5cGUuYmVmb3JlQmF0Y2ggPSBmdW5jdGlvbiAobWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5iZWZvcmVCYXRjaC5jYWxsKHRoaXMsIG1hdGgsIGJhdGNoU2l6ZSwgcnVudGltZSwgYWN0aXZhdGlvbkFycmF5TWFwLCBncmFkaWVudEFycmF5TWFwKTtcbiAgICAgICAgaWYgKHRoaXMuZmlyc3RNb21lbnQuc2l6ZSgpID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnZhcmlhYmxlTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLmZpcnN0TW9tZW50LnNldChub2RlLm91dHB1dCwgbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mobm9kZS5vdXRwdXQuc2hhcGUpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNlY29uZE1vbWVudC5zaXplKCkgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGVOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2Vjb25kTW9tZW50LnNldChub2RlLm91dHB1dCwgbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mobm9kZS5vdXRwdXQuc2hhcGUpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBBZGFtT3B0aW1pemVyLnByb3RvdHlwZS5hZnRlckJhdGNoID0gZnVuY3Rpb24gKG1hdGgsIGJhdGNoU2l6ZSwgcnVudGltZSwgYWN0aXZhdGlvbkFycmF5TWFwLCBncmFkaWVudEFycmF5TWFwKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIG1hdGguc2NvcGUoZnVuY3Rpb24gKGtlZXApIHtcbiAgICAgICAgICAgIF90aGlzLnZhcmlhYmxlTm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBvbGRWYXJpYWJsZSA9IGFjdGl2YXRpb25BcnJheU1hcC5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBncmFkaWVudCA9IF90aGlzLnZhcmlhYmxlR3JhZGllbnRzLmdldChub2RlLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgdmFyIG9sZEZpcnN0TW9tZW50ID0gX3RoaXMuZmlyc3RNb21lbnQuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgb2xkU2Vjb25kTW9tZW50ID0gX3RoaXMuc2Vjb25kTW9tZW50LmdldChub2RlLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgdmFyIG5ld0ZpcnN0TW9tZW50ID0gbWF0aC5zY2FsZWRBcnJheUFkZChfdGhpcy5iMSwgb2xkRmlyc3RNb21lbnQsIG1hdGguc3VidHJhY3QoX3RoaXMub25lLCBfdGhpcy5iMSksIGdyYWRpZW50KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnRTcXVhcmUgPSBtYXRoLm11bHRpcGx5KGdyYWRpZW50LCBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIG5ld1NlY29uZE1vbWVudCA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYjIsIG9sZFNlY29uZE1vbWVudCwgbWF0aC5zdWJ0cmFjdChfdGhpcy5vbmUsIF90aGlzLmIyKSwgZ3JhZGllbnRTcXVhcmUpO1xuICAgICAgICAgICAgICAgIHZhciBiaWFzQ29ycmVjdGVkRmlyc3RNb21lbnQgPSBtYXRoLmRpdmlkZShuZXdGaXJzdE1vbWVudCwgbWF0aC5zdWJ0cmFjdChfdGhpcy5vbmUsIF90aGlzLmFjY0IxKSk7XG4gICAgICAgICAgICAgICAgdmFyIGJpYXNDb3JyZWN0ZWRTZWNvbmRNb21lbnQgPSBtYXRoLmRpdmlkZShuZXdTZWNvbmRNb21lbnQsIG1hdGguc3VidHJhY3QoX3RoaXMub25lLCBfdGhpcy5hY2NCMikpO1xuICAgICAgICAgICAgICAgIHZhciB2YXJpYWJsZSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYywgbWF0aC5kaXZpZGUoYmlhc0NvcnJlY3RlZEZpcnN0TW9tZW50LCBtYXRoLmFkZChtYXRoLnNxcnQoYmlhc0NvcnJlY3RlZFNlY29uZE1vbWVudCksIF90aGlzLmVwcykpLCBfdGhpcy5vbmUsIG9sZFZhcmlhYmxlKTtcbiAgICAgICAgICAgICAgICBhY3RpdmF0aW9uQXJyYXlNYXAuc2V0KG5vZGUub3V0cHV0LCBrZWVwKHZhcmlhYmxlKSk7XG4gICAgICAgICAgICAgICAgbm9kZS5kYXRhID0gdmFyaWFibGU7XG4gICAgICAgICAgICAgICAgX3RoaXMuZmlyc3RNb21lbnQuc2V0KG5vZGUub3V0cHV0LCBrZWVwKG5ld0ZpcnN0TW9tZW50KSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2Vjb25kTW9tZW50LnNldChub2RlLm91dHB1dCwga2VlcChuZXdTZWNvbmRNb21lbnQpKTtcbiAgICAgICAgICAgICAgICBvbGRWYXJpYWJsZS5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgZ3JhZGllbnQuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIG9sZEZpcnN0TW9tZW50LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICBvbGRTZWNvbmRNb21lbnQuZGlzcG9zZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgb2xkQWNjQjEgPSBfdGhpcy5hY2NCMTtcbiAgICAgICAgICAgIHZhciBvbGRBY2NCMiA9IF90aGlzLmFjY0IyO1xuICAgICAgICAgICAgX3RoaXMuYWNjQjEgPSBrZWVwKG1hdGgubXVsdGlwbHkoX3RoaXMuYWNjQjEsIF90aGlzLmIxKSk7XG4gICAgICAgICAgICBfdGhpcy5hY2NCMiA9IGtlZXAobWF0aC5tdWx0aXBseShfdGhpcy5hY2NCMiwgX3RoaXMuYjIpKTtcbiAgICAgICAgICAgIG9sZEFjY0IxLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIG9sZEFjY0IyLmRpc3Bvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnZhcmlhYmxlR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgIH07XG4gICAgQWRhbU9wdGltaXplci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuZmlyc3RNb21lbnQuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnNlY29uZE1vbWVudC5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMuZXBzLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5iMS5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMuYjIuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmFjY0IxLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5hY2NCMi5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gQWRhbU9wdGltaXplcjtcbn0ob3B0aW1pemVyXzEuT3B0aW1pemVyKSk7XG5leHBvcnRzLkFkYW1PcHRpbWl6ZXIgPSBBZGFtT3B0aW1pemVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar AdamaxOptimizer = (function (_super) {\n    __extends(AdamaxOptimizer, _super);\n    function AdamaxOptimizer(learningRate, beta1, beta2, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.firstMoment = new tensor_array_map_1.TensorArrayMap();\n        _this.weightedInfNorm = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-8);\n        _this.b1 = ndarray_1.Scalar.new(_this.beta1);\n        _this.b2 = ndarray_1.Scalar.new(_this.beta2);\n        _this.accB1 = ndarray_1.Scalar.new(_this.beta1);\n        return _this;\n    }\n    AdamaxOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.firstMoment.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.firstMoment.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n        if (this.weightedInfNorm.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.weightedInfNorm.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    AdamaxOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldFirstMoment = _this.firstMoment.get(node.output);\n                var oldWeightedInfNorm = _this.weightedInfNorm.get(node.output);\n                var newFirstMoment = math.scaledArrayAdd(_this.b1, oldFirstMoment, math.subtract(_this.one, _this.b1), gradient);\n                var ut0 = math.multiply(_this.b2, oldWeightedInfNorm);\n                var ut1 = math.abs(gradient);\n                var newWeightedInfNorm = math.add(math.relu(math.subtract(ut0, ut1)), ut1);\n                var variable = math.scaledArrayAdd(_this.one, oldVariable, math.divide(_this.c, math.subtract(_this.one, _this.accB1)), math.divide(newFirstMoment, math.add(_this.eps, newWeightedInfNorm)));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                _this.firstMoment.set(node.output, keep(newFirstMoment));\n                _this.weightedInfNorm.set(node.output, keep(newWeightedInfNorm));\n                oldVariable.dispose();\n                gradient.dispose();\n                oldFirstMoment.dispose();\n                oldWeightedInfNorm.dispose();\n            });\n            var oldAccB1 = _this.accB1;\n            _this.accB1 = keep(math.multiply(_this.accB1, _this.b1));\n            oldAccB1.dispose();\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    AdamaxOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.firstMoment.dispose();\n        this.weightedInfNorm.dispose();\n        this.eps.dispose();\n        this.accB1.dispose();\n        this.b1.dispose();\n        this.b2.dispose();\n    };\n    return AdamaxOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamaxOptimizer = AdamaxOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9hZGFtYXhfb3B0aW1pemVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wdGltaXplcnMvYWRhbWF4X29wdGltaXplci5qcz82OTU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbmRhcnJheV8xID0gcmVxdWlyZShcIi4uLy4uL21hdGgvbmRhcnJheVwiKTtcbnZhciB0ZW5zb3JfYXJyYXlfbWFwXzEgPSByZXF1aXJlKFwiLi4vdGVuc29yX2FycmF5X21hcFwiKTtcbnZhciBvcHRpbWl6ZXJfMSA9IHJlcXVpcmUoXCIuL29wdGltaXplclwiKTtcbnZhciBBZGFtYXhPcHRpbWl6ZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBZGFtYXhPcHRpbWl6ZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQWRhbWF4T3B0aW1pemVyKGxlYXJuaW5nUmF0ZSwgYmV0YTEsIGJldGEyLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbGVhcm5pbmdSYXRlLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmxlYXJuaW5nUmF0ZSA9IGxlYXJuaW5nUmF0ZTtcbiAgICAgICAgX3RoaXMuYmV0YTEgPSBiZXRhMTtcbiAgICAgICAgX3RoaXMuYmV0YTIgPSBiZXRhMjtcbiAgICAgICAgX3RoaXMuZmlyc3RNb21lbnQgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgICAgIF90aGlzLndlaWdodGVkSW5mTm9ybSA9IG5ldyB0ZW5zb3JfYXJyYXlfbWFwXzEuVGVuc29yQXJyYXlNYXAoKTtcbiAgICAgICAgX3RoaXMuZXBzID0gbmRhcnJheV8xLlNjYWxhci5uZXcoMWUtOCk7XG4gICAgICAgIF90aGlzLmIxID0gbmRhcnJheV8xLlNjYWxhci5uZXcoX3RoaXMuYmV0YTEpO1xuICAgICAgICBfdGhpcy5iMiA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KF90aGlzLmJldGEyKTtcbiAgICAgICAgX3RoaXMuYWNjQjEgPSBuZGFycmF5XzEuU2NhbGFyLm5ldyhfdGhpcy5iZXRhMSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQWRhbWF4T3B0aW1pemVyLnByb3RvdHlwZS5iZWZvcmVCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmJlZm9yZUJhdGNoLmNhbGwodGhpcywgbWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApO1xuICAgICAgICBpZiAodGhpcy5maXJzdE1vbWVudC5zaXplKCkgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGVOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuZmlyc3RNb21lbnQuc2V0KG5vZGUub3V0cHV0LCBuZGFycmF5XzEuTkRBcnJheS56ZXJvcyhub2RlLm91dHB1dC5zaGFwZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMud2VpZ2h0ZWRJbmZOb3JtLnNpemUoKSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy53ZWlnaHRlZEluZk5vcm0uc2V0KG5vZGUub3V0cHV0LCBuZGFycmF5XzEuTkRBcnJheS56ZXJvcyhub2RlLm91dHB1dC5zaGFwZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEFkYW1heE9wdGltaXplci5wcm90b3R5cGUuYWZ0ZXJCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICBfdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkVmFyaWFibGUgPSBhY3RpdmF0aW9uQXJyYXlNYXAuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnQgPSBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBvbGRGaXJzdE1vbWVudCA9IF90aGlzLmZpcnN0TW9tZW50LmdldChub2RlLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgdmFyIG9sZFdlaWdodGVkSW5mTm9ybSA9IF90aGlzLndlaWdodGVkSW5mTm9ybS5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBuZXdGaXJzdE1vbWVudCA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYjEsIG9sZEZpcnN0TW9tZW50LCBtYXRoLnN1YnRyYWN0KF90aGlzLm9uZSwgX3RoaXMuYjEpLCBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIHV0MCA9IG1hdGgubXVsdGlwbHkoX3RoaXMuYjIsIG9sZFdlaWdodGVkSW5mTm9ybSk7XG4gICAgICAgICAgICAgICAgdmFyIHV0MSA9IG1hdGguYWJzKGdyYWRpZW50KTtcbiAgICAgICAgICAgICAgICB2YXIgbmV3V2VpZ2h0ZWRJbmZOb3JtID0gbWF0aC5hZGQobWF0aC5yZWx1KG1hdGguc3VidHJhY3QodXQwLCB1dDEpKSwgdXQxKTtcbiAgICAgICAgICAgICAgICB2YXIgdmFyaWFibGUgPSBtYXRoLnNjYWxlZEFycmF5QWRkKF90aGlzLm9uZSwgb2xkVmFyaWFibGUsIG1hdGguZGl2aWRlKF90aGlzLmMsIG1hdGguc3VidHJhY3QoX3RoaXMub25lLCBfdGhpcy5hY2NCMSkpLCBtYXRoLmRpdmlkZShuZXdGaXJzdE1vbWVudCwgbWF0aC5hZGQoX3RoaXMuZXBzLCBuZXdXZWlnaHRlZEluZk5vcm0pKSk7XG4gICAgICAgICAgICAgICAgYWN0aXZhdGlvbkFycmF5TWFwLnNldChub2RlLm91dHB1dCwga2VlcCh2YXJpYWJsZSkpO1xuICAgICAgICAgICAgICAgIG5vZGUuZGF0YSA9IHZhcmlhYmxlO1xuICAgICAgICAgICAgICAgIF90aGlzLmZpcnN0TW9tZW50LnNldChub2RlLm91dHB1dCwga2VlcChuZXdGaXJzdE1vbWVudCkpO1xuICAgICAgICAgICAgICAgIF90aGlzLndlaWdodGVkSW5mTm9ybS5zZXQobm9kZS5vdXRwdXQsIGtlZXAobmV3V2VpZ2h0ZWRJbmZOb3JtKSk7XG4gICAgICAgICAgICAgICAgb2xkVmFyaWFibGUuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIGdyYWRpZW50LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICBvbGRGaXJzdE1vbWVudC5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgb2xkV2VpZ2h0ZWRJbmZOb3JtLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIG9sZEFjY0IxID0gX3RoaXMuYWNjQjE7XG4gICAgICAgICAgICBfdGhpcy5hY2NCMSA9IGtlZXAobWF0aC5tdWx0aXBseShfdGhpcy5hY2NCMSwgX3RoaXMuYjEpKTtcbiAgICAgICAgICAgIG9sZEFjY0IxLmRpc3Bvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnZhcmlhYmxlR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgIH07XG4gICAgQWRhbWF4T3B0aW1pemVyLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5maXJzdE1vbWVudC5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMud2VpZ2h0ZWRJbmZOb3JtLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5lcHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmFjY0IxLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5iMS5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMuYjIuZGlzcG9zZSgpO1xuICAgIH07XG4gICAgcmV0dXJuIEFkYW1heE9wdGltaXplcjtcbn0ob3B0aW1pemVyXzEuT3B0aW1pemVyKSk7XG5leHBvcnRzLkFkYW1heE9wdGltaXplciA9IEFkYW1heE9wdGltaXplcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar sgd_optimizer_1 = __webpack_require__(/*! ./sgd_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js\");\nvar MomentumOptimizer = (function (_super) {\n    __extends(MomentumOptimizer, _super);\n    function MomentumOptimizer(learningRate, momentum, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.momentum = momentum;\n        _this.variableVelocities = new tensor_array_map_1.TensorArrayMap();\n        _this.m = ndarray_1.Scalar.new(_this.momentum);\n        return _this;\n    }\n    MomentumOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.variableVelocities.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.variableVelocities.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    MomentumOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldVelocity = _this.variableVelocities.get(node.output);\n                var velocity = math.scaledArrayAdd(_this.m, oldVelocity, _this.one, gradient);\n                var variable = math.scaledArrayAdd(_this.c, velocity, _this.one, oldVariable);\n                _this.variableVelocities.set(node.output, keep(velocity));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldVelocity.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    MomentumOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.m.dispose();\n        this.variableVelocities.dispose();\n    };\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\n        this.momentum = momentum;\n    };\n    return MomentumOptimizer;\n}(sgd_optimizer_1.SGDOptimizer));\nexports.MomentumOptimizer = MomentumOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9tb21lbnR1bV9vcHRpbWl6ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9tb21lbnR1bV9vcHRpbWl6ZXIuanM/NTZjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi8uLi9tYXRoL25kYXJyYXlcIik7XG52YXIgdGVuc29yX2FycmF5X21hcF8xID0gcmVxdWlyZShcIi4uL3RlbnNvcl9hcnJheV9tYXBcIik7XG52YXIgc2dkX29wdGltaXplcl8xID0gcmVxdWlyZShcIi4vc2dkX29wdGltaXplclwiKTtcbnZhciBNb21lbnR1bU9wdGltaXplciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1vbWVudHVtT3B0aW1pemVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE1vbWVudHVtT3B0aW1pemVyKGxlYXJuaW5nUmF0ZSwgbW9tZW50dW0sIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBsZWFybmluZ1JhdGUsIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubGVhcm5pbmdSYXRlID0gbGVhcm5pbmdSYXRlO1xuICAgICAgICBfdGhpcy5tb21lbnR1bSA9IG1vbWVudHVtO1xuICAgICAgICBfdGhpcy52YXJpYWJsZVZlbG9jaXRpZXMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgICAgIF90aGlzLm0gPSBuZGFycmF5XzEuU2NhbGFyLm5ldyhfdGhpcy5tb21lbnR1bSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTW9tZW50dW1PcHRpbWl6ZXIucHJvdG90eXBlLmJlZm9yZUJhdGNoID0gZnVuY3Rpb24gKG1hdGgsIGJhdGNoU2l6ZSwgcnVudGltZSwgYWN0aXZhdGlvbkFycmF5TWFwLCBncmFkaWVudEFycmF5TWFwKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuYmVmb3JlQmF0Y2guY2FsbCh0aGlzLCBtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCk7XG4gICAgICAgIGlmICh0aGlzLnZhcmlhYmxlVmVsb2NpdGllcy5zaXplKCkgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGVOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMudmFyaWFibGVWZWxvY2l0aWVzLnNldChub2RlLm91dHB1dCwgbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mobm9kZS5vdXRwdXQuc2hhcGUpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb21lbnR1bU9wdGltaXplci5wcm90b3R5cGUuYWZ0ZXJCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICBfdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkVmFyaWFibGUgPSBhY3RpdmF0aW9uQXJyYXlNYXAuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnQgPSBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBvbGRWZWxvY2l0eSA9IF90aGlzLnZhcmlhYmxlVmVsb2NpdGllcy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciB2ZWxvY2l0eSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMubSwgb2xkVmVsb2NpdHksIF90aGlzLm9uZSwgZ3JhZGllbnQpO1xuICAgICAgICAgICAgICAgIHZhciB2YXJpYWJsZSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYywgdmVsb2NpdHksIF90aGlzLm9uZSwgb2xkVmFyaWFibGUpO1xuICAgICAgICAgICAgICAgIF90aGlzLnZhcmlhYmxlVmVsb2NpdGllcy5zZXQobm9kZS5vdXRwdXQsIGtlZXAodmVsb2NpdHkpKTtcbiAgICAgICAgICAgICAgICBhY3RpdmF0aW9uQXJyYXlNYXAuc2V0KG5vZGUub3V0cHV0LCBrZWVwKHZhcmlhYmxlKSk7XG4gICAgICAgICAgICAgICAgbm9kZS5kYXRhID0gdmFyaWFibGU7XG4gICAgICAgICAgICAgICAgb2xkVmFyaWFibGUuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIG9sZFZlbG9jaXR5LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52YXJpYWJsZUdyYWRpZW50cy5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgfTtcbiAgICBNb21lbnR1bU9wdGltaXplci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMubS5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMudmFyaWFibGVWZWxvY2l0aWVzLmRpc3Bvc2UoKTtcbiAgICB9O1xuICAgIE1vbWVudHVtT3B0aW1pemVyLnByb3RvdHlwZS5zZXRNb21lbnR1bSA9IGZ1bmN0aW9uIChtb21lbnR1bSkge1xuICAgICAgICB0aGlzLm1vbWVudHVtID0gbW9tZW50dW07XG4gICAgfTtcbiAgICByZXR1cm4gTW9tZW50dW1PcHRpbWl6ZXI7XG59KHNnZF9vcHRpbWl6ZXJfMS5TR0RPcHRpbWl6ZXIpKTtcbmV4cG9ydHMuTW9tZW50dW1PcHRpbWl6ZXIgPSBNb21lbnR1bU9wdGltaXplcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/optimizer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/optimizer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar session_util = __webpack_require__(/*! ../session_util */ \"./node_modules/deeplearn/dist/graph/session_util.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar Optimizer = (function () {\n    function Optimizer(learningRate, specifiedVariableList) {\n        this.learningRate = learningRate;\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n        this.one = ndarray_1.Scalar.new(1);\n        if (specifiedVariableList != null) {\n            this.specifiedVariableNodes = specifiedVariableList;\n        }\n    }\n    Optimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        this.variableNodes = this.specifiedVariableNodes == null ?\n            session_util.getVariableNodesFromEvaluationSet(runtime.nodes) :\n            this.specifiedVariableNodes;\n        if (batchSize !== this.prevBatchSize) {\n            if (this.c != null) {\n                this.c.dispose();\n            }\n            this.prevBatchSize = batchSize;\n            this.c = ndarray_1.Scalar.new(-this.learningRate / batchSize);\n        }\n        this.variableNodes.forEach(function (node) { return _this.variableGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape)); });\n    };\n    Optimizer.prototype.afterExample = function (math, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var gradient = gradientArrayMap.get(node.output);\n                var accumulatedGradient = _this.variableGradients.get(node.output);\n                _this.variableGradients.set(node.output, keep(math.add(gradient, accumulatedGradient)));\n                accumulatedGradient.dispose();\n            });\n        });\n    };\n    Optimizer.prototype.dispose = function () {\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.one.dispose();\n    };\n    return Optimizer;\n}());\nexports.Optimizer = Optimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9vcHRpbWl6ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9vcHRpbWl6ZXIuanM/NDQ3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi4vLi4vbWF0aC9uZGFycmF5XCIpO1xudmFyIHNlc3Npb25fdXRpbCA9IHJlcXVpcmUoXCIuLi9zZXNzaW9uX3V0aWxcIik7XG52YXIgdGVuc29yX2FycmF5X21hcF8xID0gcmVxdWlyZShcIi4uL3RlbnNvcl9hcnJheV9tYXBcIik7XG52YXIgT3B0aW1pemVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBPcHRpbWl6ZXIobGVhcm5pbmdSYXRlLCBzcGVjaWZpZWRWYXJpYWJsZUxpc3QpIHtcbiAgICAgICAgdGhpcy5sZWFybmluZ1JhdGUgPSBsZWFybmluZ1JhdGU7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgICAgIHRoaXMub25lID0gbmRhcnJheV8xLlNjYWxhci5uZXcoMSk7XG4gICAgICAgIGlmIChzcGVjaWZpZWRWYXJpYWJsZUxpc3QgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5zcGVjaWZpZWRWYXJpYWJsZU5vZGVzID0gc3BlY2lmaWVkVmFyaWFibGVMaXN0O1xuICAgICAgICB9XG4gICAgfVxuICAgIE9wdGltaXplci5wcm90b3R5cGUuYmVmb3JlQmF0Y2ggPSBmdW5jdGlvbiAobWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy52YXJpYWJsZU5vZGVzID0gdGhpcy5zcGVjaWZpZWRWYXJpYWJsZU5vZGVzID09IG51bGwgP1xuICAgICAgICAgICAgc2Vzc2lvbl91dGlsLmdldFZhcmlhYmxlTm9kZXNGcm9tRXZhbHVhdGlvblNldChydW50aW1lLm5vZGVzKSA6XG4gICAgICAgICAgICB0aGlzLnNwZWNpZmllZFZhcmlhYmxlTm9kZXM7XG4gICAgICAgIGlmIChiYXRjaFNpemUgIT09IHRoaXMucHJldkJhdGNoU2l6ZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucHJldkJhdGNoU2l6ZSA9IGJhdGNoU2l6ZTtcbiAgICAgICAgICAgIHRoaXMuYyA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KC10aGlzLmxlYXJuaW5nUmF0ZSAvIGJhdGNoU2l6ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsgcmV0dXJuIF90aGlzLnZhcmlhYmxlR3JhZGllbnRzLnNldChub2RlLm91dHB1dCwgbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mobm9kZS5vdXRwdXQuc2hhcGUpKTsgfSk7XG4gICAgfTtcbiAgICBPcHRpbWl6ZXIucHJvdG90eXBlLmFmdGVyRXhhbXBsZSA9IGZ1bmN0aW9uIChtYXRoLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgX3RoaXMudmFyaWFibGVOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGdyYWRpZW50ID0gZ3JhZGllbnRBcnJheU1hcC5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciBhY2N1bXVsYXRlZEdyYWRpZW50ID0gX3RoaXMudmFyaWFibGVHcmFkaWVudHMuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5zZXQobm9kZS5vdXRwdXQsIGtlZXAobWF0aC5hZGQoZ3JhZGllbnQsIGFjY3VtdWxhdGVkR3JhZGllbnQpKSk7XG4gICAgICAgICAgICAgICAgYWNjdW11bGF0ZWRHcmFkaWVudC5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBPcHRpbWl6ZXIucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmMgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5jLmRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uZS5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gT3B0aW1pemVyO1xufSgpKTtcbmV4cG9ydHMuT3B0aW1pemVyID0gT3B0aW1pemVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, gamma, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        _this.gamma = gamma;\n        _this.accumulatedSquaredGradients = new tensor_array_map_1.TensorArrayMap();\n        _this.eps = ndarray_1.Scalar.new(1e-6);\n        _this.g = ndarray_1.Scalar.new(_this.gamma);\n        return _this;\n    }\n    RMSPropOptimizer.prototype.beforeBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        _super.prototype.beforeBatch.call(this, math, batchSize, runtime, activationArrayMap, gradientArrayMap);\n        if (this.accumulatedSquaredGradients.size() === 0) {\n            this.variableNodes.forEach(function (node) {\n                _this.accumulatedSquaredGradients.set(node.output, ndarray_1.NDArray.zeros(node.output.shape));\n            });\n        }\n    };\n    RMSPropOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var oldCache = _this.accumulatedSquaredGradients.get(node.output);\n                var gradientSquare = math.multiply(gradient, gradient);\n                var cache = math.scaledArrayAdd(_this.g, oldCache, math.subtract(_this.one, _this.g), gradientSquare);\n                var variable = math.scaledArrayAdd(_this.c, math.divide(gradient, math.add(math.sqrt(cache), _this.eps)), _this.one, oldVariable);\n                _this.accumulatedSquaredGradients.set(node.output, keep(cache));\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n                oldCache.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.eps.dispose();\n        this.g.dispose();\n        this.accumulatedSquaredGradients.dispose();\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9ybXNwcm9wX29wdGltaXplci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC9vcHRpbWl6ZXJzL3Jtc3Byb3Bfb3B0aW1pemVyLmpzPzVhMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi4vLi4vbWF0aC9uZGFycmF5XCIpO1xudmFyIHRlbnNvcl9hcnJheV9tYXBfMSA9IHJlcXVpcmUoXCIuLi90ZW5zb3JfYXJyYXlfbWFwXCIpO1xudmFyIG9wdGltaXplcl8xID0gcmVxdWlyZShcIi4vb3B0aW1pemVyXCIpO1xudmFyIFJNU1Byb3BPcHRpbWl6ZXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhSTVNQcm9wT3B0aW1pemVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFJNU1Byb3BPcHRpbWl6ZXIobGVhcm5pbmdSYXRlLCBnYW1tYSwgc3BlY2lmaWVkVmFyaWFibGVMaXN0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGxlYXJuaW5nUmF0ZSwgc3BlY2lmaWVkVmFyaWFibGVMaXN0KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5sZWFybmluZ1JhdGUgPSBsZWFybmluZ1JhdGU7XG4gICAgICAgIF90aGlzLmdhbW1hID0gZ2FtbWE7XG4gICAgICAgIF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cyA9IG5ldyB0ZW5zb3JfYXJyYXlfbWFwXzEuVGVuc29yQXJyYXlNYXAoKTtcbiAgICAgICAgX3RoaXMuZXBzID0gbmRhcnJheV8xLlNjYWxhci5uZXcoMWUtNik7XG4gICAgICAgIF90aGlzLmcgPSBuZGFycmF5XzEuU2NhbGFyLm5ldyhfdGhpcy5nYW1tYSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgUk1TUHJvcE9wdGltaXplci5wcm90b3R5cGUuYmVmb3JlQmF0Y2ggPSBmdW5jdGlvbiAobWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5iZWZvcmVCYXRjaC5jYWxsKHRoaXMsIG1hdGgsIGJhdGNoU2l6ZSwgcnVudGltZSwgYWN0aXZhdGlvbkFycmF5TWFwLCBncmFkaWVudEFycmF5TWFwKTtcbiAgICAgICAgaWYgKHRoaXMuYWNjdW11bGF0ZWRTcXVhcmVkR3JhZGllbnRzLnNpemUoKSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuc2V0KG5vZGUub3V0cHV0LCBuZGFycmF5XzEuTkRBcnJheS56ZXJvcyhub2RlLm91dHB1dC5zaGFwZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJNU1Byb3BPcHRpbWl6ZXIucHJvdG90eXBlLmFmdGVyQmF0Y2ggPSBmdW5jdGlvbiAobWF0aCwgYmF0Y2hTaXplLCBydW50aW1lLCBhY3RpdmF0aW9uQXJyYXlNYXAsIGdyYWRpZW50QXJyYXlNYXApIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgbWF0aC5zY29wZShmdW5jdGlvbiAoa2VlcCkge1xuICAgICAgICAgICAgX3RoaXMudmFyaWFibGVOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgdmFyIG9sZFZhcmlhYmxlID0gYWN0aXZhdGlvbkFycmF5TWFwLmdldChub2RlLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgdmFyIGdyYWRpZW50ID0gX3RoaXMudmFyaWFibGVHcmFkaWVudHMuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgb2xkQ2FjaGUgPSBfdGhpcy5hY2N1bXVsYXRlZFNxdWFyZWRHcmFkaWVudHMuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnRTcXVhcmUgPSBtYXRoLm11bHRpcGx5KGdyYWRpZW50LCBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIGNhY2hlID0gbWF0aC5zY2FsZWRBcnJheUFkZChfdGhpcy5nLCBvbGRDYWNoZSwgbWF0aC5zdWJ0cmFjdChfdGhpcy5vbmUsIF90aGlzLmcpLCBncmFkaWVudFNxdWFyZSk7XG4gICAgICAgICAgICAgICAgdmFyIHZhcmlhYmxlID0gbWF0aC5zY2FsZWRBcnJheUFkZChfdGhpcy5jLCBtYXRoLmRpdmlkZShncmFkaWVudCwgbWF0aC5hZGQobWF0aC5zcXJ0KGNhY2hlKSwgX3RoaXMuZXBzKSksIF90aGlzLm9uZSwgb2xkVmFyaWFibGUpO1xuICAgICAgICAgICAgICAgIF90aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5zZXQobm9kZS5vdXRwdXQsIGtlZXAoY2FjaGUpKTtcbiAgICAgICAgICAgICAgICBhY3RpdmF0aW9uQXJyYXlNYXAuc2V0KG5vZGUub3V0cHV0LCBrZWVwKHZhcmlhYmxlKSk7XG4gICAgICAgICAgICAgICAgbm9kZS5kYXRhID0gdmFyaWFibGU7XG4gICAgICAgICAgICAgICAgb2xkVmFyaWFibGUuZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIG9sZENhY2hlLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52YXJpYWJsZUdyYWRpZW50cy5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMgPSBuZXcgdGVuc29yX2FycmF5X21hcF8xLlRlbnNvckFycmF5TWFwKCk7XG4gICAgfTtcbiAgICBSTVNQcm9wT3B0aW1pemVyLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5lcHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmcuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmFjY3VtdWxhdGVkU3F1YXJlZEdyYWRpZW50cy5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gUk1TUHJvcE9wdGltaXplcjtcbn0ob3B0aW1pemVyXzEuT3B0aW1pemVyKSk7XG5leHBvcnRzLlJNU1Byb3BPcHRpbWl6ZXIgPSBSTVNQcm9wT3B0aW1pemVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_array_map_1 = __webpack_require__(/*! ../tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar optimizer_1 = __webpack_require__(/*! ./optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nvar SGDOptimizer = (function (_super) {\n    __extends(SGDOptimizer, _super);\n    function SGDOptimizer(learningRate, specifiedVariableList) {\n        var _this = _super.call(this, learningRate, specifiedVariableList) || this;\n        _this.learningRate = learningRate;\n        return _this;\n    }\n    SGDOptimizer.prototype.afterBatch = function (math, batchSize, runtime, activationArrayMap, gradientArrayMap) {\n        var _this = this;\n        math.scope(function (keep) {\n            _this.variableNodes.forEach(function (node) {\n                var oldVariable = activationArrayMap.get(node.output);\n                var gradient = _this.variableGradients.get(node.output);\n                var variable = math.scaledArrayAdd(_this.c, gradient, _this.one, oldVariable);\n                activationArrayMap.set(node.output, keep(variable));\n                node.data = variable;\n                oldVariable.dispose();\n            });\n        });\n        this.variableGradients.dispose();\n        this.variableGradients = new tensor_array_map_1.TensorArrayMap();\n    };\n    SGDOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    SGDOptimizer.prototype.setLearningRate = function (learningRate) {\n        this.learningRate = learningRate;\n    };\n    return SGDOptimizer;\n}(optimizer_1.Optimizer));\nexports.SGDOptimizer = SGDOptimizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvb3B0aW1pemVycy9zZ2Rfb3B0aW1pemVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2dyYXBoL29wdGltaXplcnMvc2dkX29wdGltaXplci5qcz8yYTViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdGVuc29yX2FycmF5X21hcF8xID0gcmVxdWlyZShcIi4uL3RlbnNvcl9hcnJheV9tYXBcIik7XG52YXIgb3B0aW1pemVyXzEgPSByZXF1aXJlKFwiLi9vcHRpbWl6ZXJcIik7XG52YXIgU0dET3B0aW1pemVyID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU0dET3B0aW1pemVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNHRE9wdGltaXplcihsZWFybmluZ1JhdGUsIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBsZWFybmluZ1JhdGUsIHNwZWNpZmllZFZhcmlhYmxlTGlzdCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubGVhcm5pbmdSYXRlID0gbGVhcm5pbmdSYXRlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFNHRE9wdGltaXplci5wcm90b3R5cGUuYWZ0ZXJCYXRjaCA9IGZ1bmN0aW9uIChtYXRoLCBiYXRjaFNpemUsIHJ1bnRpbWUsIGFjdGl2YXRpb25BcnJheU1hcCwgZ3JhZGllbnRBcnJheU1hcCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBtYXRoLnNjb3BlKGZ1bmN0aW9uIChrZWVwKSB7XG4gICAgICAgICAgICBfdGhpcy52YXJpYWJsZU5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2xkVmFyaWFibGUgPSBhY3RpdmF0aW9uQXJyYXlNYXAuZ2V0KG5vZGUub3V0cHV0KTtcbiAgICAgICAgICAgICAgICB2YXIgZ3JhZGllbnQgPSBfdGhpcy52YXJpYWJsZUdyYWRpZW50cy5nZXQobm9kZS5vdXRwdXQpO1xuICAgICAgICAgICAgICAgIHZhciB2YXJpYWJsZSA9IG1hdGguc2NhbGVkQXJyYXlBZGQoX3RoaXMuYywgZ3JhZGllbnQsIF90aGlzLm9uZSwgb2xkVmFyaWFibGUpO1xuICAgICAgICAgICAgICAgIGFjdGl2YXRpb25BcnJheU1hcC5zZXQobm9kZS5vdXRwdXQsIGtlZXAodmFyaWFibGUpKTtcbiAgICAgICAgICAgICAgICBub2RlLmRhdGEgPSB2YXJpYWJsZTtcbiAgICAgICAgICAgICAgICBvbGRWYXJpYWJsZS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmFyaWFibGVHcmFkaWVudHMuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnZhcmlhYmxlR3JhZGllbnRzID0gbmV3IHRlbnNvcl9hcnJheV9tYXBfMS5UZW5zb3JBcnJheU1hcCgpO1xuICAgIH07XG4gICAgU0dET3B0aW1pemVyLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKTtcbiAgICB9O1xuICAgIFNHRE9wdGltaXplci5wcm90b3R5cGUuc2V0TGVhcm5pbmdSYXRlID0gZnVuY3Rpb24gKGxlYXJuaW5nUmF0ZSkge1xuICAgICAgICB0aGlzLmxlYXJuaW5nUmF0ZSA9IGxlYXJuaW5nUmF0ZTtcbiAgICB9O1xuICAgIHJldHVybiBTR0RPcHRpbWl6ZXI7XG59KG9wdGltaXplcl8xLk9wdGltaXplcikpO1xuZXhwb3J0cy5TR0RPcHRpbWl6ZXIgPSBTR0RPcHRpbWl6ZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/priority_queue.js":
/*!*************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/priority_queue.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction defaultCompare(a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\nvar PriorityQueue = (function () {\n    function PriorityQueue(comparator, indexObserver) {\n        this.comparator = comparator;\n        this.indexObserver = indexObserver;\n        this.heap = [];\n    }\n    PriorityQueue.prototype.enqueue = function (t) {\n        this.heap.push(t);\n        this.onIndexChanged(t, this.heap.length - 1);\n        this.siftUp(this.heap.length - 1);\n    };\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.empty()) {\n            throw new Error('dequeue called on empty priority queue.');\n        }\n        var t = this.heap[0];\n        this.swap(0, this.heap.length - 1);\n        this.heap.pop();\n        this.siftDown(0);\n        return t;\n    };\n    PriorityQueue.prototype.update = function (newT, index) {\n        var last = (index === this.heap.length - 1);\n        if (!last) {\n            this.swap(index, this.heap.length - 1);\n        }\n        this.heap.pop();\n        if (!last) {\n            if (this.siftUpIndex(index) !== -1) {\n                this.siftUp(index);\n            }\n            else if (this.siftDownIndex(index) !== -1) {\n                this.siftDown(index);\n            }\n        }\n        this.enqueue(newT);\n    };\n    PriorityQueue.prototype.empty = function () {\n        return this.heap.length === 0;\n    };\n    PriorityQueue.prototype.onIndexChanged = function (t, newIndex) {\n        if (this.indexObserver) {\n            this.indexObserver(t, newIndex);\n        }\n    };\n    PriorityQueue.prototype.getParentIndex = function (index) {\n        if (index === 0) {\n            return -1;\n        }\n        return Math.floor((index - 1) / 2);\n    };\n    PriorityQueue.prototype.getLeftChildIndex = function (index) {\n        var candidate = index * 2 + 1;\n        return candidate < this.heap.length ? candidate : -1;\n    };\n    PriorityQueue.prototype.getRightChildIndex = function (index) {\n        var candidate = index * 2 + 2;\n        return candidate < this.heap.length ? candidate : -1;\n    };\n    PriorityQueue.prototype.siftUpIndex = function (index) {\n        var parentIndex = this.getParentIndex(index);\n        if (parentIndex === -1) {\n            return -1;\n        }\n        if (this.compare(parentIndex, index) > 0) {\n            return parentIndex;\n        }\n        return -1;\n    };\n    PriorityQueue.prototype.siftUp = function (index) {\n        var siftIndex = this.siftUpIndex(index);\n        while (siftIndex !== -1) {\n            this.swap(index, siftIndex);\n            index = siftIndex;\n            siftIndex = this.siftUpIndex(index);\n        }\n    };\n    PriorityQueue.prototype.siftDownIndex = function (index) {\n        if (index >= this.heap.length) {\n            return -1;\n        }\n        var largestChildIndex = index;\n        var leftChildIndex = this.getLeftChildIndex(index);\n        if ((leftChildIndex !== -1) &&\n            (this.compare(leftChildIndex, largestChildIndex) < 0)) {\n            largestChildIndex = leftChildIndex;\n        }\n        var rightChildIndex = this.getRightChildIndex(index);\n        if ((rightChildIndex !== -1) &&\n            (this.compare(rightChildIndex, largestChildIndex) < 0)) {\n            largestChildIndex = rightChildIndex;\n        }\n        return (largestChildIndex === index) ? -1 : largestChildIndex;\n    };\n    PriorityQueue.prototype.siftDown = function (index) {\n        var siftIndex = this.siftDownIndex(index);\n        while (siftIndex !== -1) {\n            this.swap(index, siftIndex);\n            index = siftIndex;\n            siftIndex = this.siftDownIndex(index);\n        }\n    };\n    PriorityQueue.prototype.compare = function (aIndex, bIndex) {\n        return this.comparator(this.heap[aIndex], this.heap[bIndex]);\n    };\n    PriorityQueue.prototype.swap = function (a, b) {\n        var temp = this.heap[a];\n        this.heap[a] = this.heap[b];\n        this.heap[b] = temp;\n        this.onIndexChanged(this.heap[a], a);\n        this.onIndexChanged(this.heap[b], b);\n    };\n    return PriorityQueue;\n}());\nexports.PriorityQueue = PriorityQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvcHJpb3JpdHlfcXVldWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvcHJpb3JpdHlfcXVldWUuanM/Mjg5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGRlZmF1bHRDb21wYXJlKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgZWxzZSBpZiAoYSA8IGIpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0Q29tcGFyZSA9IGRlZmF1bHRDb21wYXJlO1xudmFyIFByaW9yaXR5UXVldWUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFByaW9yaXR5UXVldWUoY29tcGFyYXRvciwgaW5kZXhPYnNlcnZlcikge1xuICAgICAgICB0aGlzLmNvbXBhcmF0b3IgPSBjb21wYXJhdG9yO1xuICAgICAgICB0aGlzLmluZGV4T2JzZXJ2ZXIgPSBpbmRleE9ic2VydmVyO1xuICAgICAgICB0aGlzLmhlYXAgPSBbXTtcbiAgICB9XG4gICAgUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZW5xdWV1ZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHRoaXMuaGVhcC5wdXNoKHQpO1xuICAgICAgICB0aGlzLm9uSW5kZXhDaGFuZ2VkKHQsIHRoaXMuaGVhcC5sZW5ndGggLSAxKTtcbiAgICAgICAgdGhpcy5zaWZ0VXAodGhpcy5oZWFwLmxlbmd0aCAtIDEpO1xuICAgIH07XG4gICAgUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZGVxdWV1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuZW1wdHkoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdkZXF1ZXVlIGNhbGxlZCBvbiBlbXB0eSBwcmlvcml0eSBxdWV1ZS4nKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdCA9IHRoaXMuaGVhcFswXTtcbiAgICAgICAgdGhpcy5zd2FwKDAsIHRoaXMuaGVhcC5sZW5ndGggLSAxKTtcbiAgICAgICAgdGhpcy5oZWFwLnBvcCgpO1xuICAgICAgICB0aGlzLnNpZnREb3duKDApO1xuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIFByaW9yaXR5UXVldWUucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdULCBpbmRleCkge1xuICAgICAgICB2YXIgbGFzdCA9IChpbmRleCA9PT0gdGhpcy5oZWFwLmxlbmd0aCAtIDEpO1xuICAgICAgICBpZiAoIWxhc3QpIHtcbiAgICAgICAgICAgIHRoaXMuc3dhcChpbmRleCwgdGhpcy5oZWFwLmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaGVhcC5wb3AoKTtcbiAgICAgICAgaWYgKCFsYXN0KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zaWZ0VXBJbmRleChpbmRleCkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaWZ0VXAoaW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5zaWZ0RG93bkluZGV4KGluZGV4KSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNpZnREb3duKGluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVucXVldWUobmV3VCk7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5lbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVhcC5sZW5ndGggPT09IDA7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5vbkluZGV4Q2hhbmdlZCA9IGZ1bmN0aW9uICh0LCBuZXdJbmRleCkge1xuICAgICAgICBpZiAodGhpcy5pbmRleE9ic2VydmVyKSB7XG4gICAgICAgICAgICB0aGlzLmluZGV4T2JzZXJ2ZXIodCwgbmV3SW5kZXgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5nZXRQYXJlbnRJbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcigoaW5kZXggLSAxKSAvIDIpO1xuICAgIH07XG4gICAgUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuZ2V0TGVmdENoaWxkSW5kZXggPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IGluZGV4ICogMiArIDE7XG4gICAgICAgIHJldHVybiBjYW5kaWRhdGUgPCB0aGlzLmhlYXAubGVuZ3RoID8gY2FuZGlkYXRlIDogLTE7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5nZXRSaWdodENoaWxkSW5kZXggPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IGluZGV4ICogMiArIDI7XG4gICAgICAgIHJldHVybiBjYW5kaWRhdGUgPCB0aGlzLmhlYXAubGVuZ3RoID8gY2FuZGlkYXRlIDogLTE7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5zaWZ0VXBJbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICB2YXIgcGFyZW50SW5kZXggPSB0aGlzLmdldFBhcmVudEluZGV4KGluZGV4KTtcbiAgICAgICAgaWYgKHBhcmVudEluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNvbXBhcmUocGFyZW50SW5kZXgsIGluZGV4KSA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5zaWZ0VXAgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgdmFyIHNpZnRJbmRleCA9IHRoaXMuc2lmdFVwSW5kZXgoaW5kZXgpO1xuICAgICAgICB3aGlsZSAoc2lmdEluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5zd2FwKGluZGV4LCBzaWZ0SW5kZXgpO1xuICAgICAgICAgICAgaW5kZXggPSBzaWZ0SW5kZXg7XG4gICAgICAgICAgICBzaWZ0SW5kZXggPSB0aGlzLnNpZnRVcEluZGV4KGluZGV4KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuc2lmdERvd25JbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPj0gdGhpcy5oZWFwLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsYXJnZXN0Q2hpbGRJbmRleCA9IGluZGV4O1xuICAgICAgICB2YXIgbGVmdENoaWxkSW5kZXggPSB0aGlzLmdldExlZnRDaGlsZEluZGV4KGluZGV4KTtcbiAgICAgICAgaWYgKChsZWZ0Q2hpbGRJbmRleCAhPT0gLTEpICYmXG4gICAgICAgICAgICAodGhpcy5jb21wYXJlKGxlZnRDaGlsZEluZGV4LCBsYXJnZXN0Q2hpbGRJbmRleCkgPCAwKSkge1xuICAgICAgICAgICAgbGFyZ2VzdENoaWxkSW5kZXggPSBsZWZ0Q2hpbGRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmlnaHRDaGlsZEluZGV4ID0gdGhpcy5nZXRSaWdodENoaWxkSW5kZXgoaW5kZXgpO1xuICAgICAgICBpZiAoKHJpZ2h0Q2hpbGRJbmRleCAhPT0gLTEpICYmXG4gICAgICAgICAgICAodGhpcy5jb21wYXJlKHJpZ2h0Q2hpbGRJbmRleCwgbGFyZ2VzdENoaWxkSW5kZXgpIDwgMCkpIHtcbiAgICAgICAgICAgIGxhcmdlc3RDaGlsZEluZGV4ID0gcmlnaHRDaGlsZEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAobGFyZ2VzdENoaWxkSW5kZXggPT09IGluZGV4KSA/IC0xIDogbGFyZ2VzdENoaWxkSW5kZXg7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5zaWZ0RG93biA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICB2YXIgc2lmdEluZGV4ID0gdGhpcy5zaWZ0RG93bkluZGV4KGluZGV4KTtcbiAgICAgICAgd2hpbGUgKHNpZnRJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMuc3dhcChpbmRleCwgc2lmdEluZGV4KTtcbiAgICAgICAgICAgIGluZGV4ID0gc2lmdEluZGV4O1xuICAgICAgICAgICAgc2lmdEluZGV4ID0gdGhpcy5zaWZ0RG93bkluZGV4KGluZGV4KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUHJpb3JpdHlRdWV1ZS5wcm90b3R5cGUuY29tcGFyZSA9IGZ1bmN0aW9uIChhSW5kZXgsIGJJbmRleCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJhdG9yKHRoaXMuaGVhcFthSW5kZXhdLCB0aGlzLmhlYXBbYkluZGV4XSk7XG4gICAgfTtcbiAgICBQcmlvcml0eVF1ZXVlLnByb3RvdHlwZS5zd2FwID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgdmFyIHRlbXAgPSB0aGlzLmhlYXBbYV07XG4gICAgICAgIHRoaXMuaGVhcFthXSA9IHRoaXMuaGVhcFtiXTtcbiAgICAgICAgdGhpcy5oZWFwW2JdID0gdGVtcDtcbiAgICAgICAgdGhpcy5vbkluZGV4Q2hhbmdlZCh0aGlzLmhlYXBbYV0sIGEpO1xuICAgICAgICB0aGlzLm9uSW5kZXhDaGFuZ2VkKHRoaXMuaGVhcFtiXSwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gUHJpb3JpdHlRdWV1ZTtcbn0oKSk7XG5leHBvcnRzLlByaW9yaXR5UXVldWUgPSBQcmlvcml0eVF1ZXVlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/priority_queue.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/session.js":
/*!******************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/session.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar operation_emitter = __webpack_require__(/*! ./operation_emitter */ \"./node_modules/deeplearn/dist/graph/operation_emitter.js\");\nvar session_util = __webpack_require__(/*! ./session_util */ \"./node_modules/deeplearn/dist/graph/session_util.js\");\nvar tensor_array_map_1 = __webpack_require__(/*! ./tensor_array_map */ \"./node_modules/deeplearn/dist/graph/tensor_array_map.js\");\nvar FeedDictionary = (function () {\n    function FeedDictionary(feedEntries) {\n        var _this = this;\n        this.dict = {};\n        if (feedEntries) {\n            feedEntries.forEach(function (entry) { return _this.dict[entry.tensor.id] = entry; });\n        }\n    }\n    return FeedDictionary;\n}());\nexports.FeedDictionary = FeedDictionary;\nvar CostReduction;\n(function (CostReduction) {\n    CostReduction[CostReduction[\"NONE\"] = 0] = \"NONE\";\n    CostReduction[CostReduction[\"SUM\"] = 1] = \"SUM\";\n    CostReduction[CostReduction[\"MEAN\"] = 2] = \"MEAN\";\n})(CostReduction = exports.CostReduction || (exports.CostReduction = {}));\nvar Session = (function () {\n    function Session(graph, math) {\n        this.math = math;\n        this.activationArrayMap = new tensor_array_map_1.TensorArrayMap();\n        this.runtimeCache = {};\n        this.oneScalar = ndarray_1.Scalar.new(1);\n        this.gradientArrayMap = new tensor_array_map_1.SummedTensorArrayMap(this.math);\n    }\n    Session.prototype.dispose = function () {\n        var _this = this;\n        this.activationArrayMap.dispose();\n        Object.keys(this.runtimeCache).forEach(function (key) {\n            var runtime = _this.runtimeCache[key];\n            if (runtime.operations) {\n                runtime.operations.forEach(function (op) { return op.dispose(); });\n            }\n        });\n        this.runtimeCache = {};\n        if (this.batchSizeScalar != null) {\n            this.batchSizeScalar.dispose();\n        }\n        this.oneScalar.dispose();\n    };\n    Session.prototype.evalAll = function (tensors, feedEntries) {\n        var _this = this;\n        return this.math.scope(function () {\n            var feed = new FeedDictionary(feedEntries);\n            var runtime = _this.getOrCreateRuntime(tensors, feed);\n            var activations = _this.activationArrayMap;\n            session_util.disposeAndInitializeOperationOutputs(runtime.nodes, activations);\n            session_util.disposeTransientOperationArrays(runtime.operations, _this.activationArrayMap, _this.gradientArrayMap);\n            session_util.addPersistentArraysToTensorArrayMap(runtime.nodes, activations);\n            session_util.loadInputsFromFeedDictionaryToTensorArrayMap(feed, activations, _this.math);\n            runtime.operations.forEach(function (op) { return op.feedForward(_this.math, activations); });\n            var results = tensors.map(function (x) { return activations.get(x); });\n            tensors.forEach(function (x) { return activations.delete(x); });\n            session_util.releaseFeedDictionaryInputsFromTensorArrayMap(feed, activations, _this.math);\n            return results;\n        });\n    };\n    Session.prototype.eval = function (tensor, feedEntries) {\n        return this.evalAll([tensor], feedEntries)[0];\n    };\n    Session.prototype.train = function (costTensor, feedEntries, batchSize, optimizer, costReduction) {\n        var _this = this;\n        if (costReduction === void 0) { costReduction = CostReduction.NONE; }\n        util.assert(util.isScalarShape(costTensor.shape), 'Cost tensor for training must be a scalar value.');\n        if (this.prevBatchSize !== batchSize) {\n            this.prevBatchSize = batchSize;\n            this.batchSizeScalar = ndarray_1.Scalar.new(batchSize);\n        }\n        var feed = new FeedDictionary(feedEntries);\n        session_util.throwIfFeedDictionaryContainsNDArrays(feed);\n        var runtime = this.getOrCreateRuntime([costTensor], feed);\n        var inferenceOperations = runtime.operations;\n        var backPropOperations = runtime.operations.slice().reverse();\n        var activations = this.activationArrayMap;\n        var gradients = this.gradientArrayMap;\n        gradients.nullify(costTensor);\n        gradients.add(costTensor, this.oneScalar);\n        session_util.addPersistentArraysToTensorArrayMap(runtime.nodes, activations);\n        optimizer.beforeBatch(this.math, batchSize, runtime, activations, gradients);\n        return this.math.scope(function (keep, track) {\n            var cost = track(ndarray_1.Scalar.new(0));\n            for (var i = 0; i < batchSize; ++i) {\n                session_util.disposeAndInitializeOperationOutputs(runtime.nodes, activations);\n                session_util.disposeAndInitializeOperationInputGradients(runtime.nodes, gradients);\n                session_util.disposeTransientOperationArrays(runtime.operations, activations, gradients);\n                session_util.loadInputsFromFeedDictionaryToTensorArrayMap(feed, activations, _this.math);\n                inferenceOperations.forEach(function (op) { return op.feedForward(_this.math, activations); });\n                backPropOperations.forEach(function (op) { return op.backProp(_this.math, activations, gradients); });\n                optimizer.afterExample(_this.math, runtime, activations, gradients);\n                session_util.releaseFeedDictionaryInputsFromTensorArrayMap(feed, activations, _this.math);\n                cost = _this.updateCostForExample(cost, activations.get(costTensor), costReduction);\n            }\n            optimizer.afterBatch(_this.math, batchSize, runtime, activations, gradients);\n            return _this.updateCostForBatch(cost, costReduction);\n        });\n    };\n    Session.prototype.updateCostForExample = function (totalCost, currCost, costReduction) {\n        if (costReduction === CostReduction.MEAN ||\n            costReduction === CostReduction.SUM) {\n            return this.math.add(totalCost, currCost);\n        }\n        return totalCost;\n    };\n    Session.prototype.updateCostForBatch = function (totalCost, costReduction) {\n        if (costReduction === CostReduction.MEAN) {\n            return this.math.divide(totalCost, this.batchSizeScalar);\n        }\n        return totalCost;\n    };\n    Session.prototype.getOrCreateRuntime = function (tensors, feed) {\n        var key = this.makeRuntimeCacheKey(tensors, feed);\n        var runtime = this.runtimeCache[key];\n        if (runtime === undefined) {\n            var nodes = session_util.getOrderedEvaluationSetFromEvalTensor(tensors, feed);\n            session_util.removeFeedDictionaryNodesFromEvaluationSet(feed, nodes);\n            session_util.throwErrorIfEvaluationSetContainsPlaceholderNodes(nodes);\n            var operations = operation_emitter.emitFromGraphNodes(nodes);\n            runtime = { nodes: nodes, operations: operations };\n            this.runtimeCache[key] = runtime;\n        }\n        return runtime;\n    };\n    Session.prototype.makeRuntimeCacheKey = function (tensors, feed) {\n        return tensors.map(function (x) { return x.id; }).sort().join('_') + '__' +\n            Object.keys(feed.dict).sort().join('_');\n    };\n    return Session;\n}());\nexports.Session = Session;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/session.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/session_util.js":
/*!***********************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/session_util.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ../math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar graph_1 = __webpack_require__(/*! ./graph */ \"./node_modules/deeplearn/dist/graph/graph.js\");\nvar graph_util = __webpack_require__(/*! ./graph_util */ \"./node_modules/deeplearn/dist/graph/graph_util.js\");\nfunction getTerminatingNodesFromFeedDictionary(feedDictionary) {\n    return Object.keys(feedDictionary.dict)\n        .map(function (tensorID) { return feedDictionary.dict[+tensorID].tensor.node; });\n}\nexports.getTerminatingNodesFromFeedDictionary = getTerminatingNodesFromFeedDictionary;\nfunction getOrderedEvaluationSetFromEvalTensor(evalTensors, feedDictionary) {\n    var terminatingNodes = getTerminatingNodesFromFeedDictionary(feedDictionary);\n    var evalNodes = evalTensors.map(function (x) { return x.node; });\n    var unorderedEvaluationSet = graph_util.getUnorderedEvaluationSet(evalNodes, terminatingNodes);\n    var orderedEvaluationSet = graph_util.getOrderedEvaluationSet(unorderedEvaluationSet);\n    return orderedEvaluationSet;\n}\nexports.getOrderedEvaluationSetFromEvalTensor = getOrderedEvaluationSetFromEvalTensor;\nfunction addPersistentArraysToTensorArrayMap(evaluationSet, tensorArrayMap) {\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.VariableNode || node instanceof graph_1.ConstantNode) {\n            tensorArrayMap.set(node.output, node.data);\n        }\n    });\n}\nexports.addPersistentArraysToTensorArrayMap = addPersistentArraysToTensorArrayMap;\nfunction getVariableNodesFromEvaluationSet(evaluationSet) {\n    var nodes = [];\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.VariableNode) {\n            nodes.push(node);\n        }\n    });\n    return nodes;\n}\nexports.getVariableNodesFromEvaluationSet = getVariableNodesFromEvaluationSet;\nfunction throwIfFeedDictionaryContainsNDArrays(feedDictionary) {\n    Object.keys(feedDictionary.dict).forEach(function (tensorID) {\n        if (feedDictionary.dict[+tensorID].data instanceof ndarray_1.NDArray) {\n            throw new Error('training requires FeedDictionary entries to be InputProviders' +\n                'and not NDArrays.');\n        }\n    });\n}\nexports.throwIfFeedDictionaryContainsNDArrays = throwIfFeedDictionaryContainsNDArrays;\nfunction loadInputsFromFeedDictionaryToTensorArrayMap(batchFeed, activations, math) {\n    Object.keys(batchFeed.dict).forEach(function (tensorID) {\n        var feedEntry = batchFeed.dict[+tensorID];\n        var data;\n        if (feedEntry.data instanceof ndarray_1.NDArray) {\n            data = feedEntry.data;\n        }\n        else {\n            var provider = feedEntry.data;\n            data = provider.getNextCopy(math);\n        }\n        util.assert(util.arraysEqual(feedEntry.tensor.shape, data.shape), \"Error loading FeedEntry: feeding NDArray of shape \" + data.shape + \" \" +\n            (\"does not match Tensor (id: \" + feedEntry.tensor.id + \") shape: \") +\n            (feedEntry.tensor.shape + \".\"));\n        activations.set(feedEntry.tensor, data);\n    });\n}\nexports.loadInputsFromFeedDictionaryToTensorArrayMap = loadInputsFromFeedDictionaryToTensorArrayMap;\nfunction releaseFeedDictionaryInputsFromTensorArrayMap(batchFeed, activations, math) {\n    Object.keys(batchFeed.dict).forEach(function (tensorID) {\n        var feedEntry = batchFeed.dict[+tensorID];\n        if (!(feedEntry.data instanceof ndarray_1.NDArray)) {\n            var provider = feedEntry.data;\n            var feedEntryArray = activations.get(feedEntry.tensor);\n            provider.disposeCopy(math, feedEntryArray);\n        }\n        activations.delete(feedEntry.tensor);\n    });\n}\nexports.releaseFeedDictionaryInputsFromTensorArrayMap = releaseFeedDictionaryInputsFromTensorArrayMap;\nfunction removeFeedDictionaryNodesFromEvaluationSet(feedDictionary, evaluationSet) {\n    var i = 0;\n    while (i < evaluationSet.length) {\n        var node = evaluationSet[i];\n        if (feedDictionary.dict[node.output.id] != null) {\n            evaluationSet.splice(i, 1);\n        }\n        else {\n            ++i;\n        }\n    }\n}\nexports.removeFeedDictionaryNodesFromEvaluationSet = removeFeedDictionaryNodesFromEvaluationSet;\nfunction disposeAndInitializeOperationOutputs(evaluationSet, tensorArrayMap) {\n    evaluationSet.forEach(function (node) {\n        if (!graph_util.isInputNode(node)) {\n            if (!graph_util.isPassthroughNode(node, tensorArrayMap)) {\n                tensorArrayMap.disposeArray(node.output);\n            }\n            tensorArrayMap.set(node.output, null);\n        }\n    });\n}\nexports.disposeAndInitializeOperationOutputs = disposeAndInitializeOperationOutputs;\nfunction disposeAndInitializeOperationInputGradients(evaluationSet, gradients) {\n    evaluationSet.forEach(function (node) {\n        Object.keys(node.inputs).forEach(function (inputName) {\n            var input = node.inputs[inputName];\n            if (gradients.get(input, true) !== gradients.get(node.output, true)) {\n                gradients.disposeArray(input);\n            }\n            gradients.nullify(input);\n        });\n    });\n}\nexports.disposeAndInitializeOperationInputGradients = disposeAndInitializeOperationInputGradients;\nfunction disposeTransientOperationArrays(operations, activations, gradients) {\n    operations.forEach(function (op) { return op.disposeTransientArrays(activations, gradients); });\n}\nexports.disposeTransientOperationArrays = disposeTransientOperationArrays;\nfunction throwErrorIfEvaluationSetContainsPlaceholderNodes(evaluationSet) {\n    evaluationSet.forEach(function (node) {\n        if (node instanceof graph_1.PlaceholderNode) {\n            var shape = '[' + node.output.shape.join(', ') + ']';\n            throw new Error('Placeholder node \"' + node.name + '\" ' + shape +\n                ' not present in feed dictionary.');\n        }\n    });\n}\nexports.throwErrorIfEvaluationSetContainsPlaceholderNodes = throwErrorIfEvaluationSetContainsPlaceholderNodes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/session_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph/tensor_array_map.js":
/*!***************************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph/tensor_array_map.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TensorArrayMapBase = (function () {\n    function TensorArrayMapBase() {\n        this.dict = {};\n    }\n    TensorArrayMapBase.prototype.get = function (tensor, skipChecks) {\n        if (skipChecks === void 0) { skipChecks = false; }\n        if (!skipChecks && this.dict[tensor.id] === undefined) {\n            throw new Error(\"tensor \" + tensor.id + \" not in array map.\");\n        }\n        var nda = this.dict[tensor.id];\n        if (!skipChecks && nda === null) {\n            throw new Error(\"tensor \" + tensor.id + \" has null array.\");\n        }\n        return nda;\n    };\n    TensorArrayMapBase.prototype.delete = function (tensor) {\n        delete this.dict[tensor.id];\n    };\n    TensorArrayMapBase.prototype.nullify = function (tensor) {\n        this.dict[tensor.id] = null;\n    };\n    TensorArrayMapBase.prototype.disposeArray = function (tensor) {\n        if (this.dict[tensor.id] === undefined) {\n            return;\n        }\n        var nda = this.dict[tensor.id];\n        if (nda === null) {\n            return;\n        }\n        nda.dispose();\n        this.dict[tensor.id] = null;\n    };\n    TensorArrayMapBase.prototype.size = function () {\n        return Object.keys(this.dict).length;\n    };\n    TensorArrayMapBase.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this.dict).forEach(function (tensorID) {\n            var nda = _this.dict[+tensorID];\n            if (nda) {\n                nda.dispose();\n            }\n        });\n        this.dict = {};\n    };\n    TensorArrayMapBase.prototype.hasNullArray = function (tensor) {\n        if (this.dict[tensor.id] === undefined) {\n            throw new Error(\"tensor \" + tensor.id + \" not in array map.\");\n        }\n        return this.dict[tensor.id] === null;\n    };\n    return TensorArrayMapBase;\n}());\nexports.TensorArrayMapBase = TensorArrayMapBase;\nvar TensorArrayMap = (function (_super) {\n    __extends(TensorArrayMap, _super);\n    function TensorArrayMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TensorArrayMap.prototype.set = function (tensor, array) {\n        this.dict[tensor.id] = array;\n    };\n    return TensorArrayMap;\n}(TensorArrayMapBase));\nexports.TensorArrayMap = TensorArrayMap;\nvar SummedTensorArrayMap = (function (_super) {\n    __extends(SummedTensorArrayMap, _super);\n    function SummedTensorArrayMap(math) {\n        var _this = _super.call(this) || this;\n        _this.math = math;\n        return _this;\n    }\n    SummedTensorArrayMap.prototype.add = function (tensor, array) {\n        if (this.dict[tensor.id] == null) {\n            this.dict[tensor.id] = this.math.keep(array);\n        }\n        else {\n            var oldValue = this.get(tensor);\n            var newValue = this.math.keep(this.math.addStrict(oldValue, array));\n            this.dict[tensor.id] = newValue;\n            oldValue.dispose();\n        }\n    };\n    return SummedTensorArrayMap;\n}(TensorArrayMapBase));\nexports.SummedTensorArrayMap = SummedTensorArrayMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvZ3JhcGgvdGVuc29yX2FycmF5X21hcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9ncmFwaC90ZW5zb3JfYXJyYXlfbWFwLmpzP2NhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBUZW5zb3JBcnJheU1hcEJhc2UgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRlbnNvckFycmF5TWFwQmFzZSgpIHtcbiAgICAgICAgdGhpcy5kaWN0ID0ge307XG4gICAgfVxuICAgIFRlbnNvckFycmF5TWFwQmFzZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKHRlbnNvciwgc2tpcENoZWNrcykge1xuICAgICAgICBpZiAoc2tpcENoZWNrcyA9PT0gdm9pZCAwKSB7IHNraXBDaGVja3MgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoIXNraXBDaGVja3MgJiYgdGhpcy5kaWN0W3RlbnNvci5pZF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGVuc29yIFwiICsgdGVuc29yLmlkICsgXCIgbm90IGluIGFycmF5IG1hcC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5kYSA9IHRoaXMuZGljdFt0ZW5zb3IuaWRdO1xuICAgICAgICBpZiAoIXNraXBDaGVja3MgJiYgbmRhID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3IgXCIgKyB0ZW5zb3IuaWQgKyBcIiBoYXMgbnVsbCBhcnJheS5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5kYTtcbiAgICB9O1xuICAgIFRlbnNvckFycmF5TWFwQmFzZS5wcm90b3R5cGUuZGVsZXRlID0gZnVuY3Rpb24gKHRlbnNvcikge1xuICAgICAgICBkZWxldGUgdGhpcy5kaWN0W3RlbnNvci5pZF07XG4gICAgfTtcbiAgICBUZW5zb3JBcnJheU1hcEJhc2UucHJvdG90eXBlLm51bGxpZnkgPSBmdW5jdGlvbiAodGVuc29yKSB7XG4gICAgICAgIHRoaXMuZGljdFt0ZW5zb3IuaWRdID0gbnVsbDtcbiAgICB9O1xuICAgIFRlbnNvckFycmF5TWFwQmFzZS5wcm90b3R5cGUuZGlzcG9zZUFycmF5ID0gZnVuY3Rpb24gKHRlbnNvcikge1xuICAgICAgICBpZiAodGhpcy5kaWN0W3RlbnNvci5pZF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBuZGEgPSB0aGlzLmRpY3RbdGVuc29yLmlkXTtcbiAgICAgICAgaWYgKG5kYSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG5kYS5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMuZGljdFt0ZW5zb3IuaWRdID0gbnVsbDtcbiAgICB9O1xuICAgIFRlbnNvckFycmF5TWFwQmFzZS5wcm90b3R5cGUuc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZGljdCkubGVuZ3RoO1xuICAgIH07XG4gICAgVGVuc29yQXJyYXlNYXBCYXNlLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmRpY3QpLmZvckVhY2goZnVuY3Rpb24gKHRlbnNvcklEKSB7XG4gICAgICAgICAgICB2YXIgbmRhID0gX3RoaXMuZGljdFsrdGVuc29ySURdO1xuICAgICAgICAgICAgaWYgKG5kYSkge1xuICAgICAgICAgICAgICAgIG5kYS5kaXNwb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRpY3QgPSB7fTtcbiAgICB9O1xuICAgIFRlbnNvckFycmF5TWFwQmFzZS5wcm90b3R5cGUuaGFzTnVsbEFycmF5ID0gZnVuY3Rpb24gKHRlbnNvcikge1xuICAgICAgICBpZiAodGhpcy5kaWN0W3RlbnNvci5pZF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGVuc29yIFwiICsgdGVuc29yLmlkICsgXCIgbm90IGluIGFycmF5IG1hcC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGljdFt0ZW5zb3IuaWRdID09PSBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIFRlbnNvckFycmF5TWFwQmFzZTtcbn0oKSk7XG5leHBvcnRzLlRlbnNvckFycmF5TWFwQmFzZSA9IFRlbnNvckFycmF5TWFwQmFzZTtcbnZhciBUZW5zb3JBcnJheU1hcCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFRlbnNvckFycmF5TWFwLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFRlbnNvckFycmF5TWFwKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIFRlbnNvckFycmF5TWFwLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAodGVuc29yLCBhcnJheSkge1xuICAgICAgICB0aGlzLmRpY3RbdGVuc29yLmlkXSA9IGFycmF5O1xuICAgIH07XG4gICAgcmV0dXJuIFRlbnNvckFycmF5TWFwO1xufShUZW5zb3JBcnJheU1hcEJhc2UpKTtcbmV4cG9ydHMuVGVuc29yQXJyYXlNYXAgPSBUZW5zb3JBcnJheU1hcDtcbnZhciBTdW1tZWRUZW5zb3JBcnJheU1hcCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN1bW1lZFRlbnNvckFycmF5TWFwLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFN1bW1lZFRlbnNvckFycmF5TWFwKG1hdGgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubWF0aCA9IG1hdGg7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU3VtbWVkVGVuc29yQXJyYXlNYXAucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uICh0ZW5zb3IsIGFycmF5KSB7XG4gICAgICAgIGlmICh0aGlzLmRpY3RbdGVuc29yLmlkXSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmRpY3RbdGVuc29yLmlkXSA9IHRoaXMubWF0aC5rZWVwKGFycmF5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMuZ2V0KHRlbnNvcik7XG4gICAgICAgICAgICB2YXIgbmV3VmFsdWUgPSB0aGlzLm1hdGgua2VlcCh0aGlzLm1hdGguYWRkU3RyaWN0KG9sZFZhbHVlLCBhcnJheSkpO1xuICAgICAgICAgICAgdGhpcy5kaWN0W3RlbnNvci5pZF0gPSBuZXdWYWx1ZTtcbiAgICAgICAgICAgIG9sZFZhbHVlLmRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFN1bW1lZFRlbnNvckFycmF5TWFwO1xufShUZW5zb3JBcnJheU1hcEJhc2UpKTtcbmV4cG9ydHMuU3VtbWVkVGVuc29yQXJyYXlNYXAgPSBTdW1tZWRUZW5zb3JBcnJheU1hcDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph/tensor_array_map.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/graph_runner.js":
/*!*****************************************************!*\
  !*** ./node_modules/deeplearn/dist/graph_runner.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar session_1 = __webpack_require__(/*! ./graph/session */ \"./node_modules/deeplearn/dist/graph/session.js\");\nvar ndarray_1 = __webpack_require__(/*! ./math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar DEFAULT_EVAL_INTERVAL_MS = 1500;\nvar DEFAULT_COST_INTERVAL_MS = 500;\nvar DEFAULT_INFERENCE_EXAMPLE_INTERVAL_MS = 3000;\nvar MetricReduction;\n(function (MetricReduction) {\n    MetricReduction[MetricReduction[\"SUM\"] = 0] = \"SUM\";\n    MetricReduction[MetricReduction[\"MEAN\"] = 1] = \"MEAN\";\n})(MetricReduction = exports.MetricReduction || (exports.MetricReduction = {}));\nvar GraphRunner = (function () {\n    function GraphRunner(math, session, eventObserver) {\n        this.math = math;\n        this.session = session;\n        this.eventObserver = eventObserver;\n        this.lastCostTimestamp = 0;\n        this.lastEvalTimestamp = 0;\n        this.resetStatistics();\n        this.zeroScalar = ndarray_1.Scalar.new(0);\n    }\n    GraphRunner.prototype.resetStatistics = function () {\n        this.totalBatchesTrained = 0;\n    };\n    GraphRunner.prototype.train = function (costTensor, trainFeedEntries, batchSize, optimizer, numBatches, metricTensor, metricFeedEntries, metricBatchSize, metricReduction, evalIntervalMs, costIntervalMs) {\n        if (metricReduction === void 0) { metricReduction = MetricReduction.MEAN; }\n        if (evalIntervalMs === void 0) { evalIntervalMs = DEFAULT_EVAL_INTERVAL_MS; }\n        if (costIntervalMs === void 0) { costIntervalMs = DEFAULT_COST_INTERVAL_MS; }\n        this.costTensor = costTensor;\n        this.trainFeedEntries = trainFeedEntries;\n        this.metricTensor = metricTensor;\n        this.metricFeedEntries = metricFeedEntries;\n        if (metricBatchSize != null && this.metricBatchSize !== metricBatchSize) {\n            if (this.metricBatchSizeScalar != null) {\n                this.metricBatchSizeScalar.dispose();\n            }\n            this.metricBatchSizeScalar = ndarray_1.Scalar.new(metricBatchSize);\n        }\n        this.metricBatchSize = metricBatchSize;\n        this.metricReduction = metricReduction;\n        this.batchSize = batchSize;\n        this.optimizer = optimizer;\n        this.metricIntervalMs = evalIntervalMs;\n        this.costIntervalMs = costIntervalMs;\n        this.currentTrainLoopNumBatches = numBatches;\n        this.batchesTrainedThisRun = 0;\n        this.isTraining = true;\n        this.trainStartTimestamp = performance.now();\n        this.trainNetwork();\n    };\n    GraphRunner.prototype.stopTraining = function () {\n        this.isTraining = false;\n    };\n    GraphRunner.prototype.resumeTraining = function () {\n        this.isTraining = true;\n        this.trainNetwork();\n    };\n    GraphRunner.prototype.trainNetwork = function () {\n        var _this = this;\n        if (this.batchesTrainedThisRun === this.currentTrainLoopNumBatches) {\n            this.stopTraining();\n        }\n        if (!this.isTraining) {\n            if (this.eventObserver.doneTrainingCallback != null) {\n                this.eventObserver.doneTrainingCallback();\n            }\n            return;\n        }\n        var start = performance.now();\n        var shouldComputeCost = this.eventObserver.avgCostCallback != null &&\n            (start - this.lastCostTimestamp > this.costIntervalMs);\n        if (shouldComputeCost) {\n            this.lastCostTimestamp = start;\n        }\n        var costReduction = shouldComputeCost ? session_1.CostReduction.MEAN : session_1.CostReduction.NONE;\n        this.math.scope(function (keep) {\n            var avgCost = _this.session.train(_this.costTensor, _this.trainFeedEntries, _this.batchSize, _this.optimizer, costReduction);\n            if (shouldComputeCost) {\n                var trainTime = performance.now() - start;\n                _this.eventObserver.avgCostCallback(avgCost);\n                if (_this.eventObserver.trainExamplesPerSecCallback != null) {\n                    var examplesPerSec = (_this.batchSize * 1000 / trainTime);\n                    _this.eventObserver.trainExamplesPerSecCallback(examplesPerSec);\n                }\n            }\n            if (_this.eventObserver.metricCallback != null &&\n                _this.metricFeedEntries != null &&\n                start - _this.lastEvalTimestamp > _this.metricIntervalMs) {\n                _this.lastEvalTimestamp = start;\n                if (_this.lastComputedMetric != null) {\n                    _this.lastComputedMetric.dispose();\n                }\n                _this.lastComputedMetric = _this.computeMetric();\n                _this.eventObserver.metricCallback(_this.lastComputedMetric);\n            }\n            if (_this.eventObserver.totalTimeCallback != null) {\n                _this.eventObserver.totalTimeCallback((start - _this.trainStartTimestamp) / 1000);\n            }\n            _this.batchesTrainedThisRun++;\n            _this.totalBatchesTrained++;\n            if (_this.eventObserver.batchesTrainedCallback != null) {\n                _this.eventObserver.batchesTrainedCallback(_this.totalBatchesTrained);\n            }\n        });\n        requestAnimationFrame(function () { return _this.trainNetwork(); });\n    };\n    GraphRunner.prototype.infer = function (inferenceTensor, inferenceFeedEntries, inferenceExampleIntervalMs, inferenceExampleCount, numPasses) {\n        var _this = this;\n        if (inferenceExampleIntervalMs === void 0) { inferenceExampleIntervalMs = DEFAULT_INFERENCE_EXAMPLE_INTERVAL_MS; }\n        if (inferenceExampleCount === void 0) { inferenceExampleCount = 5; }\n        if (this.eventObserver.inferenceExamplesCallback == null &&\n            this.eventObserver.inferenceExamplesPerSecCallback == null) {\n            throw new Error('Cannot start inference loop, no inference example or ' +\n                'examples/sec observer provided.');\n        }\n        for (var i = 0; i < inferenceFeedEntries.length; i++) {\n            var feedEntry = inferenceFeedEntries[i];\n            if (feedEntry.data instanceof ndarray_1.NDArray) {\n                throw new Error('Cannot start inference on the model runner with feed entries of ' +\n                    'type NDArray. Please use InputProviders.');\n            }\n        }\n        this.inferenceExampleIntervalMs = inferenceExampleIntervalMs;\n        this.inferenceTensor = inferenceTensor;\n        this.inferenceFeedEntries = inferenceFeedEntries;\n        this.inferenceExampleCount = inferenceExampleCount;\n        this.currentInferenceLoopNumPasses = numPasses;\n        if (!this.isInferring) {\n            this.inferencePassesThisRun = 0;\n            requestAnimationFrame(function () { return _this.inferNetwork(); });\n        }\n        this.isInferring = true;\n    };\n    GraphRunner.prototype.inferNetwork = function () {\n        var _this = this;\n        if (!this.isInferring ||\n            this.inferencePassesThisRun === this.currentInferenceLoopNumPasses) {\n            return;\n        }\n        this.math.scope(function (keep, track) {\n            var feeds = [];\n            var inferenceValues = [];\n            var start = performance.now();\n            for (var i = 0; i < _this.inferenceExampleCount; i++) {\n                var ndarrayFeedEntries = [];\n                for (var j = 0; j < _this.inferenceFeedEntries.length; j++) {\n                    var feedEntry = _this.inferenceFeedEntries[j];\n                    var nextCopy = feedEntry.data.getNextCopy(_this.math);\n                    ndarrayFeedEntries.push({ tensor: feedEntry.tensor, data: track(nextCopy) });\n                }\n                feeds.push(ndarrayFeedEntries);\n                inferenceValues.push(_this.session.eval(_this.inferenceTensor, ndarrayFeedEntries));\n            }\n            if (_this.eventObserver.inferenceExamplesPerSecCallback != null) {\n                inferenceValues[inferenceValues.length - 1].getValues();\n                var inferenceExamplesPerSecTime = performance.now() - start;\n                var examplesPerSec = (_this.inferenceExampleCount * 1000 / inferenceExamplesPerSecTime);\n                _this.eventObserver.inferenceExamplesPerSecCallback(examplesPerSec);\n            }\n            if (_this.eventObserver.inferenceExamplesCallback != null) {\n                _this.eventObserver.inferenceExamplesCallback(feeds, inferenceValues);\n            }\n            _this.inferencePassesThisRun++;\n        });\n        this.lastInferTimeoutID = window.setTimeout(function () { return _this.inferNetwork(); }, this.inferenceExampleIntervalMs);\n    };\n    GraphRunner.prototype.stopInferring = function () {\n        this.isInferring = false;\n        window.clearTimeout(this.lastInferTimeoutID);\n    };\n    GraphRunner.prototype.isInferenceRunning = function () {\n        return this.isInferring;\n    };\n    GraphRunner.prototype.computeMetric = function () {\n        var _this = this;\n        if (this.metricFeedEntries == null) {\n            throw new Error('Cannot compute metric, no metric FeedEntries provided.');\n        }\n        var metric = this.zeroScalar;\n        return this.math.scope(function (keep) {\n            for (var i = 0; i < _this.metricBatchSize; i++) {\n                var metricValue = _this.session.eval(_this.metricTensor, _this.metricFeedEntries);\n                metric = _this.math.add(metric, metricValue);\n            }\n            if (_this.metricReduction === MetricReduction.MEAN) {\n                metric = _this.math.divide(metric, _this.metricBatchSizeScalar);\n            }\n            return metric;\n        });\n    };\n    GraphRunner.prototype.getTotalBatchesTrained = function () {\n        return this.totalBatchesTrained;\n    };\n    GraphRunner.prototype.getLastComputedMetric = function () {\n        return this.lastComputedMetric;\n    };\n    GraphRunner.prototype.setMath = function (math) {\n        this.math = math;\n    };\n    GraphRunner.prototype.setSession = function (session) {\n        this.session = session;\n    };\n    GraphRunner.prototype.setInferenceTensor = function (inferenceTensor) {\n        this.inferenceTensor = inferenceTensor;\n    };\n    GraphRunner.prototype.setInferenceExampleCount = function (inferenceExampleCount) {\n        this.inferenceExampleCount = inferenceExampleCount;\n    };\n    return GraphRunner;\n}());\nexports.GraphRunner = GraphRunner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/graph_runner.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/index.js":
/*!**********************************************!*\
  !*** ./node_modules/deeplearn/dist/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xhr_dataset = __webpack_require__(/*! ./data/xhr-dataset */ \"./node_modules/deeplearn/dist/data/xhr-dataset.js\");\nexports.xhr_dataset = xhr_dataset;\nvar environment = __webpack_require__(/*! ./environment */ \"./node_modules/deeplearn/dist/environment.js\");\nexports.environment = environment;\nvar gpgpu_util = __webpack_require__(/*! ./math/backends/webgl/gpgpu_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js\");\nexports.gpgpu_util = gpgpu_util;\nvar render_ndarray_gpu_util = __webpack_require__(/*! ./math/backends/webgl/render_ndarray_gpu_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js\");\nexports.render_ndarray_gpu_util = render_ndarray_gpu_util;\nvar webgl_util = __webpack_require__(/*! ./math/backends/webgl/webgl_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\");\nexports.webgl_util = webgl_util;\nvar conv_util = __webpack_require__(/*! ./math/conv_util */ \"./node_modules/deeplearn/dist/math/conv_util.js\");\nexports.conv_util = conv_util;\nvar test_util = __webpack_require__(/*! ./test_util */ \"./node_modules/deeplearn/dist/test_util.js\");\nexports.test_util = test_util;\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/deeplearn/dist/util.js\");\nexports.util = util;\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/deeplearn/dist/version.js\");\nexports.version = version_1.version;\nvar checkpoint_loader_1 = __webpack_require__(/*! ./data/checkpoint_loader */ \"./node_modules/deeplearn/dist/data/checkpoint_loader.js\");\nexports.CheckpointLoader = checkpoint_loader_1.CheckpointLoader;\nvar dataset_1 = __webpack_require__(/*! ./data/dataset */ \"./node_modules/deeplearn/dist/data/dataset.js\");\nexports.InMemoryDataset = dataset_1.InMemoryDataset;\nvar input_provider_1 = __webpack_require__(/*! ./data/input_provider */ \"./node_modules/deeplearn/dist/data/input_provider.js\");\nexports.InCPUMemoryShuffledInputProviderBuilder = input_provider_1.InCPUMemoryShuffledInputProviderBuilder;\nexports.InGPUMemoryShuffledInputProviderBuilder = input_provider_1.InGPUMemoryShuffledInputProviderBuilder;\nvar xhr_dataset_1 = __webpack_require__(/*! ./data/xhr-dataset */ \"./node_modules/deeplearn/dist/data/xhr-dataset.js\");\nexports.XhrDataset = xhr_dataset_1.XhrDataset;\nvar environment_1 = __webpack_require__(/*! ./environment */ \"./node_modules/deeplearn/dist/environment.js\");\nexports.ENV = environment_1.ENV;\nexports.Environment = environment_1.Environment;\nvar graph_1 = __webpack_require__(/*! ./graph/graph */ \"./node_modules/deeplearn/dist/graph/graph.js\");\nexports.Graph = graph_1.Graph;\nexports.Tensor = graph_1.Tensor;\nvar adadelta_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/adadelta_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/adadelta_optimizer.js\");\nexports.AdadeltaOptimizer = adadelta_optimizer_1.AdadeltaOptimizer;\nvar adagrad_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/adagrad_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/adagrad_optimizer.js\");\nexports.AdagradOptimizer = adagrad_optimizer_1.AdagradOptimizer;\nvar adam_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/adam_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/adam_optimizer.js\");\nexports.AdamOptimizer = adam_optimizer_1.AdamOptimizer;\nvar adamax_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/adamax_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/adamax_optimizer.js\");\nexports.AdamaxOptimizer = adamax_optimizer_1.AdamaxOptimizer;\nvar momentum_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/momentum_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/momentum_optimizer.js\");\nexports.MomentumOptimizer = momentum_optimizer_1.MomentumOptimizer;\nvar optimizer_1 = __webpack_require__(/*! ./graph/optimizers/optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/optimizer.js\");\nexports.Optimizer = optimizer_1.Optimizer;\nvar rmsprop_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/rmsprop_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/rmsprop_optimizer.js\");\nexports.RMSPropOptimizer = rmsprop_optimizer_1.RMSPropOptimizer;\nvar sgd_optimizer_1 = __webpack_require__(/*! ./graph/optimizers/sgd_optimizer */ \"./node_modules/deeplearn/dist/graph/optimizers/sgd_optimizer.js\");\nexports.SGDOptimizer = sgd_optimizer_1.SGDOptimizer;\nvar session_1 = __webpack_require__(/*! ./graph/session */ \"./node_modules/deeplearn/dist/graph/session.js\");\nexports.CostReduction = session_1.CostReduction;\nexports.Session = session_1.Session;\nvar graph_runner_1 = __webpack_require__(/*! ./graph_runner */ \"./node_modules/deeplearn/dist/graph_runner.js\");\nexports.GraphRunner = graph_runner_1.GraphRunner;\nexports.MetricReduction = graph_runner_1.MetricReduction;\nvar initializers_1 = __webpack_require__(/*! ./initializers */ \"./node_modules/deeplearn/dist/initializers.js\");\nexports.ConstantInitializer = initializers_1.ConstantInitializer;\nexports.NDArrayInitializer = initializers_1.NDArrayInitializer;\nexports.OnesInitializer = initializers_1.OnesInitializer;\nexports.RandomNormalInitializer = initializers_1.RandomNormalInitializer;\nexports.RandomTruncatedNormalInitializer = initializers_1.RandomTruncatedNormalInitializer;\nexports.RandomUniformInitializer = initializers_1.RandomUniformInitializer;\nexports.VarianceScalingInitializer = initializers_1.VarianceScalingInitializer;\nexports.ZerosInitializer = initializers_1.ZerosInitializer;\nvar backend_cpu_1 = __webpack_require__(/*! ./math/backends/backend_cpu */ \"./node_modules/deeplearn/dist/math/backends/backend_cpu.js\");\nexports.NDArrayMathCPU = backend_cpu_1.NDArrayMathCPU;\nvar backend_webgl_1 = __webpack_require__(/*! ./math/backends/backend_webgl */ \"./node_modules/deeplearn/dist/math/backends/backend_webgl.js\");\nexports.NDArrayMathGPU = backend_webgl_1.NDArrayMathGPU;\nvar matmul_1 = __webpack_require__(/*! ./math/backends/types/matmul */ \"./node_modules/deeplearn/dist/math/backends/types/matmul.js\");\nexports.MatrixOrientation = matmul_1.MatrixOrientation;\nvar gpgpu_context_1 = __webpack_require__(/*! ./math/backends/webgl/gpgpu_context */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js\");\nexports.GPGPUContext = gpgpu_context_1.GPGPUContext;\nvar math_1 = __webpack_require__(/*! ./math/math */ \"./node_modules/deeplearn/dist/math/math.js\");\nexports.NDArrayMath = math_1.NDArrayMath;\nvar ndarray_1 = __webpack_require__(/*! ./math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nexports.Array1D = ndarray_1.Array1D;\nexports.Array2D = ndarray_1.Array2D;\nexports.Array3D = ndarray_1.Array3D;\nexports.Array4D = ndarray_1.Array4D;\nexports.NDArray = ndarray_1.NDArray;\nexports.Scalar = ndarray_1.Scalar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvaW5kZXguanM/YmYyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB4aHJfZGF0YXNldCA9IHJlcXVpcmUoXCIuL2RhdGEveGhyLWRhdGFzZXRcIik7XG5leHBvcnRzLnhocl9kYXRhc2V0ID0geGhyX2RhdGFzZXQ7XG52YXIgZW52aXJvbm1lbnQgPSByZXF1aXJlKFwiLi9lbnZpcm9ubWVudFwiKTtcbmV4cG9ydHMuZW52aXJvbm1lbnQgPSBlbnZpcm9ubWVudDtcbnZhciBncGdwdV91dGlsID0gcmVxdWlyZShcIi4vbWF0aC9iYWNrZW5kcy93ZWJnbC9ncGdwdV91dGlsXCIpO1xuZXhwb3J0cy5ncGdwdV91dGlsID0gZ3BncHVfdXRpbDtcbnZhciByZW5kZXJfbmRhcnJheV9ncHVfdXRpbCA9IHJlcXVpcmUoXCIuL21hdGgvYmFja2VuZHMvd2ViZ2wvcmVuZGVyX25kYXJyYXlfZ3B1X3V0aWxcIik7XG5leHBvcnRzLnJlbmRlcl9uZGFycmF5X2dwdV91dGlsID0gcmVuZGVyX25kYXJyYXlfZ3B1X3V0aWw7XG52YXIgd2ViZ2xfdXRpbCA9IHJlcXVpcmUoXCIuL21hdGgvYmFja2VuZHMvd2ViZ2wvd2ViZ2xfdXRpbFwiKTtcbmV4cG9ydHMud2ViZ2xfdXRpbCA9IHdlYmdsX3V0aWw7XG52YXIgY29udl91dGlsID0gcmVxdWlyZShcIi4vbWF0aC9jb252X3V0aWxcIik7XG5leHBvcnRzLmNvbnZfdXRpbCA9IGNvbnZfdXRpbDtcbnZhciB0ZXN0X3V0aWwgPSByZXF1aXJlKFwiLi90ZXN0X3V0aWxcIik7XG5leHBvcnRzLnRlc3RfdXRpbCA9IHRlc3RfdXRpbDtcbnZhciB1dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmV4cG9ydHMudXRpbCA9IHV0aWw7XG52YXIgdmVyc2lvbl8xID0gcmVxdWlyZShcIi4vdmVyc2lvblwiKTtcbmV4cG9ydHMudmVyc2lvbiA9IHZlcnNpb25fMS52ZXJzaW9uO1xudmFyIGNoZWNrcG9pbnRfbG9hZGVyXzEgPSByZXF1aXJlKFwiLi9kYXRhL2NoZWNrcG9pbnRfbG9hZGVyXCIpO1xuZXhwb3J0cy5DaGVja3BvaW50TG9hZGVyID0gY2hlY2twb2ludF9sb2FkZXJfMS5DaGVja3BvaW50TG9hZGVyO1xudmFyIGRhdGFzZXRfMSA9IHJlcXVpcmUoXCIuL2RhdGEvZGF0YXNldFwiKTtcbmV4cG9ydHMuSW5NZW1vcnlEYXRhc2V0ID0gZGF0YXNldF8xLkluTWVtb3J5RGF0YXNldDtcbnZhciBpbnB1dF9wcm92aWRlcl8xID0gcmVxdWlyZShcIi4vZGF0YS9pbnB1dF9wcm92aWRlclwiKTtcbmV4cG9ydHMuSW5DUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyID0gaW5wdXRfcHJvdmlkZXJfMS5JbkNQVU1lbW9yeVNodWZmbGVkSW5wdXRQcm92aWRlckJ1aWxkZXI7XG5leHBvcnRzLkluR1BVTWVtb3J5U2h1ZmZsZWRJbnB1dFByb3ZpZGVyQnVpbGRlciA9IGlucHV0X3Byb3ZpZGVyXzEuSW5HUFVNZW1vcnlTaHVmZmxlZElucHV0UHJvdmlkZXJCdWlsZGVyO1xudmFyIHhocl9kYXRhc2V0XzEgPSByZXF1aXJlKFwiLi9kYXRhL3hoci1kYXRhc2V0XCIpO1xuZXhwb3J0cy5YaHJEYXRhc2V0ID0geGhyX2RhdGFzZXRfMS5YaHJEYXRhc2V0O1xudmFyIGVudmlyb25tZW50XzEgPSByZXF1aXJlKFwiLi9lbnZpcm9ubWVudFwiKTtcbmV4cG9ydHMuRU5WID0gZW52aXJvbm1lbnRfMS5FTlY7XG5leHBvcnRzLkVudmlyb25tZW50ID0gZW52aXJvbm1lbnRfMS5FbnZpcm9ubWVudDtcbnZhciBncmFwaF8xID0gcmVxdWlyZShcIi4vZ3JhcGgvZ3JhcGhcIik7XG5leHBvcnRzLkdyYXBoID0gZ3JhcGhfMS5HcmFwaDtcbmV4cG9ydHMuVGVuc29yID0gZ3JhcGhfMS5UZW5zb3I7XG52YXIgYWRhZGVsdGFfb3B0aW1pemVyXzEgPSByZXF1aXJlKFwiLi9ncmFwaC9vcHRpbWl6ZXJzL2FkYWRlbHRhX29wdGltaXplclwiKTtcbmV4cG9ydHMuQWRhZGVsdGFPcHRpbWl6ZXIgPSBhZGFkZWx0YV9vcHRpbWl6ZXJfMS5BZGFkZWx0YU9wdGltaXplcjtcbnZhciBhZGFncmFkX29wdGltaXplcl8xID0gcmVxdWlyZShcIi4vZ3JhcGgvb3B0aW1pemVycy9hZGFncmFkX29wdGltaXplclwiKTtcbmV4cG9ydHMuQWRhZ3JhZE9wdGltaXplciA9IGFkYWdyYWRfb3B0aW1pemVyXzEuQWRhZ3JhZE9wdGltaXplcjtcbnZhciBhZGFtX29wdGltaXplcl8xID0gcmVxdWlyZShcIi4vZ3JhcGgvb3B0aW1pemVycy9hZGFtX29wdGltaXplclwiKTtcbmV4cG9ydHMuQWRhbU9wdGltaXplciA9IGFkYW1fb3B0aW1pemVyXzEuQWRhbU9wdGltaXplcjtcbnZhciBhZGFtYXhfb3B0aW1pemVyXzEgPSByZXF1aXJlKFwiLi9ncmFwaC9vcHRpbWl6ZXJzL2FkYW1heF9vcHRpbWl6ZXJcIik7XG5leHBvcnRzLkFkYW1heE9wdGltaXplciA9IGFkYW1heF9vcHRpbWl6ZXJfMS5BZGFtYXhPcHRpbWl6ZXI7XG52YXIgbW9tZW50dW1fb3B0aW1pemVyXzEgPSByZXF1aXJlKFwiLi9ncmFwaC9vcHRpbWl6ZXJzL21vbWVudHVtX29wdGltaXplclwiKTtcbmV4cG9ydHMuTW9tZW50dW1PcHRpbWl6ZXIgPSBtb21lbnR1bV9vcHRpbWl6ZXJfMS5Nb21lbnR1bU9wdGltaXplcjtcbnZhciBvcHRpbWl6ZXJfMSA9IHJlcXVpcmUoXCIuL2dyYXBoL29wdGltaXplcnMvb3B0aW1pemVyXCIpO1xuZXhwb3J0cy5PcHRpbWl6ZXIgPSBvcHRpbWl6ZXJfMS5PcHRpbWl6ZXI7XG52YXIgcm1zcHJvcF9vcHRpbWl6ZXJfMSA9IHJlcXVpcmUoXCIuL2dyYXBoL29wdGltaXplcnMvcm1zcHJvcF9vcHRpbWl6ZXJcIik7XG5leHBvcnRzLlJNU1Byb3BPcHRpbWl6ZXIgPSBybXNwcm9wX29wdGltaXplcl8xLlJNU1Byb3BPcHRpbWl6ZXI7XG52YXIgc2dkX29wdGltaXplcl8xID0gcmVxdWlyZShcIi4vZ3JhcGgvb3B0aW1pemVycy9zZ2Rfb3B0aW1pemVyXCIpO1xuZXhwb3J0cy5TR0RPcHRpbWl6ZXIgPSBzZ2Rfb3B0aW1pemVyXzEuU0dET3B0aW1pemVyO1xudmFyIHNlc3Npb25fMSA9IHJlcXVpcmUoXCIuL2dyYXBoL3Nlc3Npb25cIik7XG5leHBvcnRzLkNvc3RSZWR1Y3Rpb24gPSBzZXNzaW9uXzEuQ29zdFJlZHVjdGlvbjtcbmV4cG9ydHMuU2Vzc2lvbiA9IHNlc3Npb25fMS5TZXNzaW9uO1xudmFyIGdyYXBoX3J1bm5lcl8xID0gcmVxdWlyZShcIi4vZ3JhcGhfcnVubmVyXCIpO1xuZXhwb3J0cy5HcmFwaFJ1bm5lciA9IGdyYXBoX3J1bm5lcl8xLkdyYXBoUnVubmVyO1xuZXhwb3J0cy5NZXRyaWNSZWR1Y3Rpb24gPSBncmFwaF9ydW5uZXJfMS5NZXRyaWNSZWR1Y3Rpb247XG52YXIgaW5pdGlhbGl6ZXJzXzEgPSByZXF1aXJlKFwiLi9pbml0aWFsaXplcnNcIik7XG5leHBvcnRzLkNvbnN0YW50SW5pdGlhbGl6ZXIgPSBpbml0aWFsaXplcnNfMS5Db25zdGFudEluaXRpYWxpemVyO1xuZXhwb3J0cy5OREFycmF5SW5pdGlhbGl6ZXIgPSBpbml0aWFsaXplcnNfMS5OREFycmF5SW5pdGlhbGl6ZXI7XG5leHBvcnRzLk9uZXNJbml0aWFsaXplciA9IGluaXRpYWxpemVyc18xLk9uZXNJbml0aWFsaXplcjtcbmV4cG9ydHMuUmFuZG9tTm9ybWFsSW5pdGlhbGl6ZXIgPSBpbml0aWFsaXplcnNfMS5SYW5kb21Ob3JtYWxJbml0aWFsaXplcjtcbmV4cG9ydHMuUmFuZG9tVHJ1bmNhdGVkTm9ybWFsSW5pdGlhbGl6ZXIgPSBpbml0aWFsaXplcnNfMS5SYW5kb21UcnVuY2F0ZWROb3JtYWxJbml0aWFsaXplcjtcbmV4cG9ydHMuUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyID0gaW5pdGlhbGl6ZXJzXzEuUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyO1xuZXhwb3J0cy5WYXJpYW5jZVNjYWxpbmdJbml0aWFsaXplciA9IGluaXRpYWxpemVyc18xLlZhcmlhbmNlU2NhbGluZ0luaXRpYWxpemVyO1xuZXhwb3J0cy5aZXJvc0luaXRpYWxpemVyID0gaW5pdGlhbGl6ZXJzXzEuWmVyb3NJbml0aWFsaXplcjtcbnZhciBiYWNrZW5kX2NwdV8xID0gcmVxdWlyZShcIi4vbWF0aC9iYWNrZW5kcy9iYWNrZW5kX2NwdVwiKTtcbmV4cG9ydHMuTkRBcnJheU1hdGhDUFUgPSBiYWNrZW5kX2NwdV8xLk5EQXJyYXlNYXRoQ1BVO1xudmFyIGJhY2tlbmRfd2ViZ2xfMSA9IHJlcXVpcmUoXCIuL21hdGgvYmFja2VuZHMvYmFja2VuZF93ZWJnbFwiKTtcbmV4cG9ydHMuTkRBcnJheU1hdGhHUFUgPSBiYWNrZW5kX3dlYmdsXzEuTkRBcnJheU1hdGhHUFU7XG52YXIgbWF0bXVsXzEgPSByZXF1aXJlKFwiLi9tYXRoL2JhY2tlbmRzL3R5cGVzL21hdG11bFwiKTtcbmV4cG9ydHMuTWF0cml4T3JpZW50YXRpb24gPSBtYXRtdWxfMS5NYXRyaXhPcmllbnRhdGlvbjtcbnZhciBncGdwdV9jb250ZXh0XzEgPSByZXF1aXJlKFwiLi9tYXRoL2JhY2tlbmRzL3dlYmdsL2dwZ3B1X2NvbnRleHRcIik7XG5leHBvcnRzLkdQR1BVQ29udGV4dCA9IGdwZ3B1X2NvbnRleHRfMS5HUEdQVUNvbnRleHQ7XG52YXIgbWF0aF8xID0gcmVxdWlyZShcIi4vbWF0aC9tYXRoXCIpO1xuZXhwb3J0cy5OREFycmF5TWF0aCA9IG1hdGhfMS5OREFycmF5TWF0aDtcbnZhciBuZGFycmF5XzEgPSByZXF1aXJlKFwiLi9tYXRoL25kYXJyYXlcIik7XG5leHBvcnRzLkFycmF5MUQgPSBuZGFycmF5XzEuQXJyYXkxRDtcbmV4cG9ydHMuQXJyYXkyRCA9IG5kYXJyYXlfMS5BcnJheTJEO1xuZXhwb3J0cy5BcnJheTNEID0gbmRhcnJheV8xLkFycmF5M0Q7XG5leHBvcnRzLkFycmF5NEQgPSBuZGFycmF5XzEuQXJyYXk0RDtcbmV4cG9ydHMuTkRBcnJheSA9IG5kYXJyYXlfMS5OREFycmF5O1xuZXhwb3J0cy5TY2FsYXIgPSBuZGFycmF5XzEuU2NhbGFyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/index.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/initializers.js":
/*!*****************************************************!*\
  !*** ./node_modules/deeplearn/dist/initializers.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ./math/ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar VarianceScalingInitializer = (function () {\n    function VarianceScalingInitializer(scale, mode, distribution) {\n        if (scale === void 0) { scale = 1.0; }\n        if (mode === void 0) { mode = 'fan_in'; }\n        if (distribution === void 0) { distribution = 'normal'; }\n        this.scale = scale;\n        this.mode = mode;\n        this.distribution = distribution;\n    }\n    VarianceScalingInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var n = 0;\n        if (this.mode === 'fan_in') {\n            n = inputUnits;\n        }\n        else if (this.mode === 'fan_out') {\n            n = outputUnits;\n        }\n        else if (this.mode === 'fan_avg') {\n            n = (inputUnits + outputUnits) / 2;\n        }\n        else {\n            throw new Error(\"Unexpected mode for variance scaling initializer: \" + this.mode);\n        }\n        if (this.distribution === 'normal') {\n            return ndarray_1.NDArray.randTruncatedNormal(weightsShape, 0.0, Math.sqrt(this.scale / n));\n        }\n        else if (this.distribution === 'uniform') {\n            return ndarray_1.NDArray.randUniform(weightsShape, 0.0, Math.sqrt(3 * this.scale / n));\n        }\n        else {\n            throw new Error(\"Unexpected distribution for variance scaling initializer: \" +\n                (\"\" + this.distribution));\n        }\n    };\n    return VarianceScalingInitializer;\n}());\nexports.VarianceScalingInitializer = VarianceScalingInitializer;\nvar ZerosInitializer = (function () {\n    function ZerosInitializer() {\n    }\n    ZerosInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.zeros(weightsShape);\n    };\n    return ZerosInitializer;\n}());\nexports.ZerosInitializer = ZerosInitializer;\nvar OnesInitializer = (function () {\n    function OnesInitializer() {\n    }\n    OnesInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var values = ndarray_1.NDArray.zeros(weightsShape);\n        values.fill(1);\n        return values;\n    };\n    return OnesInitializer;\n}());\nexports.OnesInitializer = OnesInitializer;\nvar ConstantInitializer = (function () {\n    function ConstantInitializer(value) {\n        if (value === void 0) { value = 0; }\n        this.value = value;\n    }\n    ConstantInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        var values = ndarray_1.NDArray.zeros(weightsShape);\n        values.fill(this.value);\n        return values;\n    };\n    return ConstantInitializer;\n}());\nexports.ConstantInitializer = ConstantInitializer;\nvar NDArrayInitializer = (function () {\n    function NDArrayInitializer(ndarray) {\n        this.ndarray = ndarray;\n    }\n    NDArrayInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return this.ndarray;\n    };\n    return NDArrayInitializer;\n}());\nexports.NDArrayInitializer = NDArrayInitializer;\nvar RandomNormalInitializer = (function () {\n    function RandomNormalInitializer(mean, stdev) {\n        if (mean === void 0) { mean = 0; }\n        if (stdev === void 0) { stdev = .05; }\n        this.mean = mean;\n        this.stdev = stdev;\n    }\n    RandomNormalInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randNormal(weightsShape, this.mean, this.stdev);\n    };\n    return RandomNormalInitializer;\n}());\nexports.RandomNormalInitializer = RandomNormalInitializer;\nvar RandomTruncatedNormalInitializer = (function () {\n    function RandomTruncatedNormalInitializer(mean, stdev) {\n        if (mean === void 0) { mean = 0; }\n        if (stdev === void 0) { stdev = .05; }\n        this.mean = mean;\n        this.stdev = stdev;\n    }\n    RandomTruncatedNormalInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randTruncatedNormal(weightsShape, this.mean, this.stdev);\n    };\n    return RandomTruncatedNormalInitializer;\n}());\nexports.RandomTruncatedNormalInitializer = RandomTruncatedNormalInitializer;\nvar RandomUniformInitializer = (function () {\n    function RandomUniformInitializer(minval, maxval) {\n        if (minval === void 0) { minval = -.05; }\n        if (maxval === void 0) { maxval = .05; }\n        this.minval = minval;\n        this.maxval = maxval;\n    }\n    RandomUniformInitializer.prototype.initialize = function (weightsShape, inputUnits, outputUnits) {\n        return ndarray_1.NDArray.randUniform(weightsShape, this.minval, this.maxval);\n    };\n    return RandomUniformInitializer;\n}());\nexports.RandomUniformInitializer = RandomUniformInitializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvaW5pdGlhbGl6ZXJzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L2luaXRpYWxpemVycy5qcz9jNGM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuL21hdGgvbmRhcnJheVwiKTtcbnZhciBWYXJpYW5jZVNjYWxpbmdJbml0aWFsaXplciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVmFyaWFuY2VTY2FsaW5nSW5pdGlhbGl6ZXIoc2NhbGUsIG1vZGUsIGRpc3RyaWJ1dGlvbikge1xuICAgICAgICBpZiAoc2NhbGUgPT09IHZvaWQgMCkgeyBzY2FsZSA9IDEuMDsgfVxuICAgICAgICBpZiAobW9kZSA9PT0gdm9pZCAwKSB7IG1vZGUgPSAnZmFuX2luJzsgfVxuICAgICAgICBpZiAoZGlzdHJpYnV0aW9uID09PSB2b2lkIDApIHsgZGlzdHJpYnV0aW9uID0gJ25vcm1hbCc7IH1cbiAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xuICAgICAgICB0aGlzLm1vZGUgPSBtb2RlO1xuICAgICAgICB0aGlzLmRpc3RyaWJ1dGlvbiA9IGRpc3RyaWJ1dGlvbjtcbiAgICB9XG4gICAgVmFyaWFuY2VTY2FsaW5nSW5pdGlhbGl6ZXIucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiAod2VpZ2h0c1NoYXBlLCBpbnB1dFVuaXRzLCBvdXRwdXRVbml0cykge1xuICAgICAgICB2YXIgbiA9IDA7XG4gICAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdmYW5faW4nKSB7XG4gICAgICAgICAgICBuID0gaW5wdXRVbml0cztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLm1vZGUgPT09ICdmYW5fb3V0Jykge1xuICAgICAgICAgICAgbiA9IG91dHB1dFVuaXRzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMubW9kZSA9PT0gJ2Zhbl9hdmcnKSB7XG4gICAgICAgICAgICBuID0gKGlucHV0VW5pdHMgKyBvdXRwdXRVbml0cykgLyAyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBtb2RlIGZvciB2YXJpYW5jZSBzY2FsaW5nIGluaXRpYWxpemVyOiBcIiArIHRoaXMubW9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZGlzdHJpYnV0aW9uID09PSAnbm9ybWFsJykge1xuICAgICAgICAgICAgcmV0dXJuIG5kYXJyYXlfMS5OREFycmF5LnJhbmRUcnVuY2F0ZWROb3JtYWwod2VpZ2h0c1NoYXBlLCAwLjAsIE1hdGguc3FydCh0aGlzLnNjYWxlIC8gbikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZGlzdHJpYnV0aW9uID09PSAndW5pZm9ybScpIHtcbiAgICAgICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS5yYW5kVW5pZm9ybSh3ZWlnaHRzU2hhcGUsIDAuMCwgTWF0aC5zcXJ0KDMgKiB0aGlzLnNjYWxlIC8gbikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBkaXN0cmlidXRpb24gZm9yIHZhcmlhbmNlIHNjYWxpbmcgaW5pdGlhbGl6ZXI6IFwiICtcbiAgICAgICAgICAgICAgICAoXCJcIiArIHRoaXMuZGlzdHJpYnV0aW9uKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBWYXJpYW5jZVNjYWxpbmdJbml0aWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLlZhcmlhbmNlU2NhbGluZ0luaXRpYWxpemVyID0gVmFyaWFuY2VTY2FsaW5nSW5pdGlhbGl6ZXI7XG52YXIgWmVyb3NJbml0aWFsaXplciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gWmVyb3NJbml0aWFsaXplcigpIHtcbiAgICB9XG4gICAgWmVyb3NJbml0aWFsaXplci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh3ZWlnaHRzU2hhcGUsIGlucHV0VW5pdHMsIG91dHB1dFVuaXRzKSB7XG4gICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS56ZXJvcyh3ZWlnaHRzU2hhcGUpO1xuICAgIH07XG4gICAgcmV0dXJuIFplcm9zSW5pdGlhbGl6ZXI7XG59KCkpO1xuZXhwb3J0cy5aZXJvc0luaXRpYWxpemVyID0gWmVyb3NJbml0aWFsaXplcjtcbnZhciBPbmVzSW5pdGlhbGl6ZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9uZXNJbml0aWFsaXplcigpIHtcbiAgICB9XG4gICAgT25lc0luaXRpYWxpemVyLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gKHdlaWdodHNTaGFwZSwgaW5wdXRVbml0cywgb3V0cHV0VW5pdHMpIHtcbiAgICAgICAgdmFyIHZhbHVlcyA9IG5kYXJyYXlfMS5OREFycmF5Lnplcm9zKHdlaWdodHNTaGFwZSk7XG4gICAgICAgIHZhbHVlcy5maWxsKDEpO1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH07XG4gICAgcmV0dXJuIE9uZXNJbml0aWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLk9uZXNJbml0aWFsaXplciA9IE9uZXNJbml0aWFsaXplcjtcbnZhciBDb25zdGFudEluaXRpYWxpemVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDb25zdGFudEluaXRpYWxpemVyKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSB7IHZhbHVlID0gMDsgfVxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIENvbnN0YW50SW5pdGlhbGl6ZXIucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiAod2VpZ2h0c1NoYXBlLCBpbnB1dFVuaXRzLCBvdXRwdXRVbml0cykge1xuICAgICAgICB2YXIgdmFsdWVzID0gbmRhcnJheV8xLk5EQXJyYXkuemVyb3Mod2VpZ2h0c1NoYXBlKTtcbiAgICAgICAgdmFsdWVzLmZpbGwodGhpcy52YWx1ZSk7XG4gICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfTtcbiAgICByZXR1cm4gQ29uc3RhbnRJbml0aWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLkNvbnN0YW50SW5pdGlhbGl6ZXIgPSBDb25zdGFudEluaXRpYWxpemVyO1xudmFyIE5EQXJyYXlJbml0aWFsaXplciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTkRBcnJheUluaXRpYWxpemVyKG5kYXJyYXkpIHtcbiAgICAgICAgdGhpcy5uZGFycmF5ID0gbmRhcnJheTtcbiAgICB9XG4gICAgTkRBcnJheUluaXRpYWxpemVyLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gKHdlaWdodHNTaGFwZSwgaW5wdXRVbml0cywgb3V0cHV0VW5pdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmRhcnJheTtcbiAgICB9O1xuICAgIHJldHVybiBOREFycmF5SW5pdGlhbGl6ZXI7XG59KCkpO1xuZXhwb3J0cy5OREFycmF5SW5pdGlhbGl6ZXIgPSBOREFycmF5SW5pdGlhbGl6ZXI7XG52YXIgUmFuZG9tTm9ybWFsSW5pdGlhbGl6ZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJhbmRvbU5vcm1hbEluaXRpYWxpemVyKG1lYW4sIHN0ZGV2KSB7XG4gICAgICAgIGlmIChtZWFuID09PSB2b2lkIDApIHsgbWVhbiA9IDA7IH1cbiAgICAgICAgaWYgKHN0ZGV2ID09PSB2b2lkIDApIHsgc3RkZXYgPSAuMDU7IH1cbiAgICAgICAgdGhpcy5tZWFuID0gbWVhbjtcbiAgICAgICAgdGhpcy5zdGRldiA9IHN0ZGV2O1xuICAgIH1cbiAgICBSYW5kb21Ob3JtYWxJbml0aWFsaXplci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh3ZWlnaHRzU2hhcGUsIGlucHV0VW5pdHMsIG91dHB1dFVuaXRzKSB7XG4gICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS5yYW5kTm9ybWFsKHdlaWdodHNTaGFwZSwgdGhpcy5tZWFuLCB0aGlzLnN0ZGV2KTtcbiAgICB9O1xuICAgIHJldHVybiBSYW5kb21Ob3JtYWxJbml0aWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLlJhbmRvbU5vcm1hbEluaXRpYWxpemVyID0gUmFuZG9tTm9ybWFsSW5pdGlhbGl6ZXI7XG52YXIgUmFuZG9tVHJ1bmNhdGVkTm9ybWFsSW5pdGlhbGl6ZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJhbmRvbVRydW5jYXRlZE5vcm1hbEluaXRpYWxpemVyKG1lYW4sIHN0ZGV2KSB7XG4gICAgICAgIGlmIChtZWFuID09PSB2b2lkIDApIHsgbWVhbiA9IDA7IH1cbiAgICAgICAgaWYgKHN0ZGV2ID09PSB2b2lkIDApIHsgc3RkZXYgPSAuMDU7IH1cbiAgICAgICAgdGhpcy5tZWFuID0gbWVhbjtcbiAgICAgICAgdGhpcy5zdGRldiA9IHN0ZGV2O1xuICAgIH1cbiAgICBSYW5kb21UcnVuY2F0ZWROb3JtYWxJbml0aWFsaXplci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh3ZWlnaHRzU2hhcGUsIGlucHV0VW5pdHMsIG91dHB1dFVuaXRzKSB7XG4gICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS5yYW5kVHJ1bmNhdGVkTm9ybWFsKHdlaWdodHNTaGFwZSwgdGhpcy5tZWFuLCB0aGlzLnN0ZGV2KTtcbiAgICB9O1xuICAgIHJldHVybiBSYW5kb21UcnVuY2F0ZWROb3JtYWxJbml0aWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLlJhbmRvbVRydW5jYXRlZE5vcm1hbEluaXRpYWxpemVyID0gUmFuZG9tVHJ1bmNhdGVkTm9ybWFsSW5pdGlhbGl6ZXI7XG52YXIgUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSYW5kb21Vbmlmb3JtSW5pdGlhbGl6ZXIobWludmFsLCBtYXh2YWwpIHtcbiAgICAgICAgaWYgKG1pbnZhbCA9PT0gdm9pZCAwKSB7IG1pbnZhbCA9IC0uMDU7IH1cbiAgICAgICAgaWYgKG1heHZhbCA9PT0gdm9pZCAwKSB7IG1heHZhbCA9IC4wNTsgfVxuICAgICAgICB0aGlzLm1pbnZhbCA9IG1pbnZhbDtcbiAgICAgICAgdGhpcy5tYXh2YWwgPSBtYXh2YWw7XG4gICAgfVxuICAgIFJhbmRvbVVuaWZvcm1Jbml0aWFsaXplci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh3ZWlnaHRzU2hhcGUsIGlucHV0VW5pdHMsIG91dHB1dFVuaXRzKSB7XG4gICAgICAgIHJldHVybiBuZGFycmF5XzEuTkRBcnJheS5yYW5kVW5pZm9ybSh3ZWlnaHRzU2hhcGUsIHRoaXMubWludmFsLCB0aGlzLm1heHZhbCk7XG4gICAgfTtcbiAgICByZXR1cm4gUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyO1xufSgpKTtcbmV4cG9ydHMuUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyID0gUmFuZG9tVW5pZm9ybUluaXRpYWxpemVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/initializers.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/activation_functions.js":
/*!******************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/activation_functions.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ./ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar TanHFunc = (function () {\n    function TanHFunc() {\n        this.one = ndarray_1.Scalar.new(1);\n    }\n    TanHFunc.prototype.output = function (math, x) {\n        return math.tanh(x);\n    };\n    TanHFunc.prototype.der = function (math, x, y) {\n        var _this = this;\n        return math.scope(function () {\n            var ySquared = math.elementWiseMul(y, y);\n            return math.scalarMinusArray(_this.one, ySquared);\n        });\n    };\n    TanHFunc.prototype.dispose = function () {\n        this.one.dispose();\n    };\n    return TanHFunc;\n}());\nexports.TanHFunc = TanHFunc;\nvar ReLUFunc = (function () {\n    function ReLUFunc() {\n    }\n    ReLUFunc.prototype.output = function (math, x) {\n        return math.relu(x);\n    };\n    ReLUFunc.prototype.der = function (math, x, y) {\n        return math.step(x);\n    };\n    ReLUFunc.prototype.dispose = function () { };\n    return ReLUFunc;\n}());\nexports.ReLUFunc = ReLUFunc;\nvar LeakyReluFunc = (function () {\n    function LeakyReluFunc(alpha) {\n        this.alpha = alpha;\n    }\n    LeakyReluFunc.prototype.output = function (math, x) {\n        return math.leakyRelu(x, this.alpha);\n    };\n    LeakyReluFunc.prototype.der = function (math, x, y) {\n        return math.step(x, this.alpha);\n    };\n    LeakyReluFunc.prototype.dispose = function () { };\n    return LeakyReluFunc;\n}());\nexports.LeakyReluFunc = LeakyReluFunc;\nvar SigmoidFunc = (function () {\n    function SigmoidFunc() {\n    }\n    SigmoidFunc.prototype.output = function (math, x) {\n        return math.sigmoid(x);\n    };\n    SigmoidFunc.prototype.der = function (math, x, y) {\n        return math.scope(function () {\n            var ySquared = math.elementWiseMul(y, y);\n            return math.subStrict(y, ySquared);\n        });\n    };\n    SigmoidFunc.prototype.dispose = function () { };\n    return SigmoidFunc;\n}());\nexports.SigmoidFunc = SigmoidFunc;\nvar SquareFunc = (function () {\n    function SquareFunc() {\n        this.two = ndarray_1.Scalar.new(2);\n    }\n    SquareFunc.prototype.output = function (math, x) {\n        return math.elementWiseMul(x, x);\n    };\n    SquareFunc.prototype.der = function (math, x, y) {\n        return math.scalarTimesArray(this.two, x);\n    };\n    SquareFunc.prototype.dispose = function () {\n        this.two.dispose();\n    };\n    return SquareFunc;\n}());\nexports.SquareFunc = SquareFunc;\nvar EluFunc = (function () {\n    function EluFunc() {\n    }\n    EluFunc.prototype.output = function (math, x) {\n        return math.elu(x);\n    };\n    EluFunc.prototype.der = function (math, x, y) {\n        return math.eluDer(x);\n    };\n    EluFunc.prototype.dispose = function () { };\n    return EluFunc;\n}());\nexports.EluFunc = EluFunc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9hY3RpdmF0aW9uX2Z1bmN0aW9ucy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2FjdGl2YXRpb25fZnVuY3Rpb25zLmpzPzViNTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbmRhcnJheV8xID0gcmVxdWlyZShcIi4vbmRhcnJheVwiKTtcbnZhciBUYW5IRnVuYyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGFuSEZ1bmMoKSB7XG4gICAgICAgIHRoaXMub25lID0gbmRhcnJheV8xLlNjYWxhci5uZXcoMSk7XG4gICAgfVxuICAgIFRhbkhGdW5jLnByb3RvdHlwZS5vdXRwdXQgPSBmdW5jdGlvbiAobWF0aCwgeCkge1xuICAgICAgICByZXR1cm4gbWF0aC50YW5oKHgpO1xuICAgIH07XG4gICAgVGFuSEZ1bmMucHJvdG90eXBlLmRlciA9IGZ1bmN0aW9uIChtYXRoLCB4LCB5KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBtYXRoLnNjb3BlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB5U3F1YXJlZCA9IG1hdGguZWxlbWVudFdpc2VNdWwoeSwgeSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0aC5zY2FsYXJNaW51c0FycmF5KF90aGlzLm9uZSwgeVNxdWFyZWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFRhbkhGdW5jLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm9uZS5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gVGFuSEZ1bmM7XG59KCkpO1xuZXhwb3J0cy5UYW5IRnVuYyA9IFRhbkhGdW5jO1xudmFyIFJlTFVGdW5jID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZUxVRnVuYygpIHtcbiAgICB9XG4gICAgUmVMVUZ1bmMucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uIChtYXRoLCB4KSB7XG4gICAgICAgIHJldHVybiBtYXRoLnJlbHUoeCk7XG4gICAgfTtcbiAgICBSZUxVRnVuYy5wcm90b3R5cGUuZGVyID0gZnVuY3Rpb24gKG1hdGgsIHgsIHkpIHtcbiAgICAgICAgcmV0dXJuIG1hdGguc3RlcCh4KTtcbiAgICB9O1xuICAgIFJlTFVGdW5jLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIHJldHVybiBSZUxVRnVuYztcbn0oKSk7XG5leHBvcnRzLlJlTFVGdW5jID0gUmVMVUZ1bmM7XG52YXIgTGVha3lSZWx1RnVuYyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGVha3lSZWx1RnVuYyhhbHBoYSkge1xuICAgICAgICB0aGlzLmFscGhhID0gYWxwaGE7XG4gICAgfVxuICAgIExlYWt5UmVsdUZ1bmMucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uIChtYXRoLCB4KSB7XG4gICAgICAgIHJldHVybiBtYXRoLmxlYWt5UmVsdSh4LCB0aGlzLmFscGhhKTtcbiAgICB9O1xuICAgIExlYWt5UmVsdUZ1bmMucHJvdG90eXBlLmRlciA9IGZ1bmN0aW9uIChtYXRoLCB4LCB5KSB7XG4gICAgICAgIHJldHVybiBtYXRoLnN0ZXAoeCwgdGhpcy5hbHBoYSk7XG4gICAgfTtcbiAgICBMZWFreVJlbHVGdW5jLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIHJldHVybiBMZWFreVJlbHVGdW5jO1xufSgpKTtcbmV4cG9ydHMuTGVha3lSZWx1RnVuYyA9IExlYWt5UmVsdUZ1bmM7XG52YXIgU2lnbW9pZEZ1bmMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNpZ21vaWRGdW5jKCkge1xuICAgIH1cbiAgICBTaWdtb2lkRnVuYy5wcm90b3R5cGUub3V0cHV0ID0gZnVuY3Rpb24gKG1hdGgsIHgpIHtcbiAgICAgICAgcmV0dXJuIG1hdGguc2lnbW9pZCh4KTtcbiAgICB9O1xuICAgIFNpZ21vaWRGdW5jLnByb3RvdHlwZS5kZXIgPSBmdW5jdGlvbiAobWF0aCwgeCwgeSkge1xuICAgICAgICByZXR1cm4gbWF0aC5zY29wZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgeVNxdWFyZWQgPSBtYXRoLmVsZW1lbnRXaXNlTXVsKHksIHkpO1xuICAgICAgICAgICAgcmV0dXJuIG1hdGguc3ViU3RyaWN0KHksIHlTcXVhcmVkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTaWdtb2lkRnVuYy5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHsgfTtcbiAgICByZXR1cm4gU2lnbW9pZEZ1bmM7XG59KCkpO1xuZXhwb3J0cy5TaWdtb2lkRnVuYyA9IFNpZ21vaWRGdW5jO1xudmFyIFNxdWFyZUZ1bmMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNxdWFyZUZ1bmMoKSB7XG4gICAgICAgIHRoaXMudHdvID0gbmRhcnJheV8xLlNjYWxhci5uZXcoMik7XG4gICAgfVxuICAgIFNxdWFyZUZ1bmMucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uIChtYXRoLCB4KSB7XG4gICAgICAgIHJldHVybiBtYXRoLmVsZW1lbnRXaXNlTXVsKHgsIHgpO1xuICAgIH07XG4gICAgU3F1YXJlRnVuYy5wcm90b3R5cGUuZGVyID0gZnVuY3Rpb24gKG1hdGgsIHgsIHkpIHtcbiAgICAgICAgcmV0dXJuIG1hdGguc2NhbGFyVGltZXNBcnJheSh0aGlzLnR3bywgeCk7XG4gICAgfTtcbiAgICBTcXVhcmVGdW5jLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnR3by5kaXNwb3NlKCk7XG4gICAgfTtcbiAgICByZXR1cm4gU3F1YXJlRnVuYztcbn0oKSk7XG5leHBvcnRzLlNxdWFyZUZ1bmMgPSBTcXVhcmVGdW5jO1xudmFyIEVsdUZ1bmMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEVsdUZ1bmMoKSB7XG4gICAgfVxuICAgIEVsdUZ1bmMucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uIChtYXRoLCB4KSB7XG4gICAgICAgIHJldHVybiBtYXRoLmVsdSh4KTtcbiAgICB9O1xuICAgIEVsdUZ1bmMucHJvdG90eXBlLmRlciA9IGZ1bmN0aW9uIChtYXRoLCB4LCB5KSB7XG4gICAgICAgIHJldHVybiBtYXRoLmVsdURlcih4KTtcbiAgICB9O1xuICAgIEVsdUZ1bmMucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7IH07XG4gICAgcmV0dXJuIEVsdUZ1bmM7XG59KCkpO1xuZXhwb3J0cy5FbHVGdW5jID0gRWx1RnVuYztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/activation_functions.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/axis_util.js":
/*!*******************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/axis_util.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction axesAreInnerMostDims(axes, rank) {\n    for (var i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.axesAreInnerMostDims = axesAreInnerMostDims;\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    var rank = outputLoc.length + reduceLoc.length;\n    var loc = [];\n    var outIdx = 0;\n    var reduceIdx = 0;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexports.combineLocations = combineLocations;\nfunction computeOutAndReduceShapes(aShape, axes) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    var reduceShape = axes.map(function (dim) { return aShape[dim]; });\n    return [outShape, reduceShape];\n}\nexports.computeOutAndReduceShapes = computeOutAndReduceShapes;\nfunction expandShapeToKeepDim(shape, axes) {\n    var reduceSubShape = axes.map(function (x) { return 1; });\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexports.expandShapeToKeepDim = expandShapeToKeepDim;\nfunction parseAxisParam(axis, shape) {\n    if (axis == null) {\n        axis = shape.map(function (s, i) { return i; });\n    }\n    else if (typeof (axis) === 'number') {\n        axis = [axis];\n    }\n    return axis;\n}\nexports.parseAxisParam = parseAxisParam;\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    if (!axesAreInnerMostDims(axes, rank)) {\n        throw new Error(msg + \" supports only inner-most axes for now. \" +\n            (\"Got axes \" + axes + \" and rank-\" + rank + \" input.\"));\n    }\n}\nexports.assertAxesAreInnerMostDims = assertAxesAreInnerMostDims;\nfunction getPermutedAxes(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    var result = [];\n    for (var i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(function (axis) { return result.push(axis); });\n    return result;\n}\nexports.getPermutedAxes = getPermutedAxes;\nfunction getInnerMostAxes(numAxes, rank) {\n    var res = [];\n    for (var i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\nexports.getInnerMostAxes = getInnerMostAxes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9heGlzX3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9heGlzX3V0aWwuanM/ODY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGF4ZXNBcmVJbm5lck1vc3REaW1zKGF4ZXMsIHJhbmspIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF4ZXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKGF4ZXNbYXhlcy5sZW5ndGggLSBpIC0gMV0gIT09IHJhbmsgLSAxIC0gaSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5heGVzQXJlSW5uZXJNb3N0RGltcyA9IGF4ZXNBcmVJbm5lck1vc3REaW1zO1xuZnVuY3Rpb24gY29tYmluZUxvY2F0aW9ucyhvdXRwdXRMb2MsIHJlZHVjZUxvYywgYXhlcykge1xuICAgIHZhciByYW5rID0gb3V0cHV0TG9jLmxlbmd0aCArIHJlZHVjZUxvYy5sZW5ndGg7XG4gICAgdmFyIGxvYyA9IFtdO1xuICAgIHZhciBvdXRJZHggPSAwO1xuICAgIHZhciByZWR1Y2VJZHggPSAwO1xuICAgIGZvciAodmFyIGRpbSA9IDA7IGRpbSA8IHJhbms7IGRpbSsrKSB7XG4gICAgICAgIGlmIChheGVzLmluZGV4T2YoZGltKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIGxvYy5wdXNoKG91dHB1dExvY1tvdXRJZHgrK10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9jLnB1c2gocmVkdWNlTG9jW3JlZHVjZUlkeCsrXSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxvYztcbn1cbmV4cG9ydHMuY29tYmluZUxvY2F0aW9ucyA9IGNvbWJpbmVMb2NhdGlvbnM7XG5mdW5jdGlvbiBjb21wdXRlT3V0QW5kUmVkdWNlU2hhcGVzKGFTaGFwZSwgYXhlcykge1xuICAgIHZhciBvdXRTaGFwZSA9IFtdO1xuICAgIHZhciByYW5rID0gYVNoYXBlLmxlbmd0aDtcbiAgICBmb3IgKHZhciBkaW0gPSAwOyBkaW0gPCByYW5rOyBkaW0rKykge1xuICAgICAgICBpZiAoYXhlcy5pbmRleE9mKGRpbSkgPT09IC0xKSB7XG4gICAgICAgICAgICBvdXRTaGFwZS5wdXNoKGFTaGFwZVtkaW1dKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2YXIgcmVkdWNlU2hhcGUgPSBheGVzLm1hcChmdW5jdGlvbiAoZGltKSB7IHJldHVybiBhU2hhcGVbZGltXTsgfSk7XG4gICAgcmV0dXJuIFtvdXRTaGFwZSwgcmVkdWNlU2hhcGVdO1xufVxuZXhwb3J0cy5jb21wdXRlT3V0QW5kUmVkdWNlU2hhcGVzID0gY29tcHV0ZU91dEFuZFJlZHVjZVNoYXBlcztcbmZ1bmN0aW9uIGV4cGFuZFNoYXBlVG9LZWVwRGltKHNoYXBlLCBheGVzKSB7XG4gICAgdmFyIHJlZHVjZVN1YlNoYXBlID0gYXhlcy5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIDE7IH0pO1xuICAgIHJldHVybiBjb21iaW5lTG9jYXRpb25zKHNoYXBlLCByZWR1Y2VTdWJTaGFwZSwgYXhlcyk7XG59XG5leHBvcnRzLmV4cGFuZFNoYXBlVG9LZWVwRGltID0gZXhwYW5kU2hhcGVUb0tlZXBEaW07XG5mdW5jdGlvbiBwYXJzZUF4aXNQYXJhbShheGlzLCBzaGFwZSkge1xuICAgIGlmIChheGlzID09IG51bGwpIHtcbiAgICAgICAgYXhpcyA9IHNoYXBlLm1hcChmdW5jdGlvbiAocywgaSkgeyByZXR1cm4gaTsgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiAoYXhpcykgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGF4aXMgPSBbYXhpc107XG4gICAgfVxuICAgIHJldHVybiBheGlzO1xufVxuZXhwb3J0cy5wYXJzZUF4aXNQYXJhbSA9IHBhcnNlQXhpc1BhcmFtO1xuZnVuY3Rpb24gYXNzZXJ0QXhlc0FyZUlubmVyTW9zdERpbXMobXNnLCBheGVzLCByYW5rKSB7XG4gICAgaWYgKCFheGVzQXJlSW5uZXJNb3N0RGltcyhheGVzLCByYW5rKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnICsgXCIgc3VwcG9ydHMgb25seSBpbm5lci1tb3N0IGF4ZXMgZm9yIG5vdy4gXCIgK1xuICAgICAgICAgICAgKFwiR290IGF4ZXMgXCIgKyBheGVzICsgXCIgYW5kIHJhbmstXCIgKyByYW5rICsgXCIgaW5wdXQuXCIpKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydEF4ZXNBcmVJbm5lck1vc3REaW1zID0gYXNzZXJ0QXhlc0FyZUlubmVyTW9zdERpbXM7XG5mdW5jdGlvbiBnZXRQZXJtdXRlZEF4ZXMoYXhlcywgcmFuaykge1xuICAgIGlmIChheGVzQXJlSW5uZXJNb3N0RGltcyhheGVzLCByYW5rKSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmFuazsgKytpKSB7XG4gICAgICAgIGlmIChheGVzLmluZGV4T2YoaSkgPT09IC0xKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBheGVzLmZvckVhY2goZnVuY3Rpb24gKGF4aXMpIHsgcmV0dXJuIHJlc3VsdC5wdXNoKGF4aXMpOyB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5nZXRQZXJtdXRlZEF4ZXMgPSBnZXRQZXJtdXRlZEF4ZXM7XG5mdW5jdGlvbiBnZXRJbm5lck1vc3RBeGVzKG51bUF4ZXMsIHJhbmspIHtcbiAgICB2YXIgcmVzID0gW107XG4gICAgZm9yICh2YXIgaSA9IHJhbmsgLSBudW1BeGVzOyBpIDwgcmFuazsgKytpKSB7XG4gICAgICAgIHJlcy5wdXNoKGkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0cy5nZXRJbm5lck1vc3RBeGVzID0gZ2V0SW5uZXJNb3N0QXhlcztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/axis_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/backend.js":
/*!**************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/backend.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BACKEND_REGISTRY = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy9iYWNrZW5kLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvYmFja2VuZC5qcz9jYWIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CQUNLRU5EX1JFR0lTVFJZID0ge307XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/backend.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/backend_cpu.js":
/*!******************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/backend_cpu.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar broadcast_util = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/deeplearn/dist/math/broadcast_util.js\");\nvar concat_util = __webpack_require__(/*! ../concat_util */ \"./node_modules/deeplearn/dist/math/concat_util.js\");\nvar math_1 = __webpack_require__(/*! ../math */ \"./node_modules/deeplearn/dist/math/math.js\");\nvar ndarray_1 = __webpack_require__(/*! ../ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar types_1 = __webpack_require__(/*! ../types */ \"./node_modules/deeplearn/dist/math/types.js\");\nvar axis_util = __webpack_require__(/*! ./../axis_util */ \"./node_modules/deeplearn/dist/math/axis_util.js\");\nvar backend_1 = __webpack_require__(/*! ./backend */ \"./node_modules/deeplearn/dist/math/backends/backend.js\");\nvar matmul_1 = __webpack_require__(/*! ./types/matmul */ \"./node_modules/deeplearn/dist/math/backends/types/matmul.js\");\nvar MathBackendCPU = (function () {\n    function MathBackendCPU() {\n        this.data = {};\n    }\n    MathBackendCPU.prototype.dispose = function () { };\n    MathBackendCPU.prototype.write = function (id, values, dtype, shape) {\n        this.data[id] = values;\n    };\n    MathBackendCPU.prototype.writePixels = function (id, pixels, numChannels) {\n        var vals;\n        if (pixels instanceof ImageData) {\n            vals = pixels.data;\n        }\n        else if (pixels instanceof HTMLCanvasElement) {\n            vals = pixels.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else if (pixels instanceof HTMLImageElement ||\n            pixels instanceof HTMLVideoElement) {\n            var canvas = document.createElement('canvas');\n            canvas.width = pixels.width;\n            canvas.height = pixels.height;\n            canvas.getContext('2d').drawImage(pixels, 0, 0, canvas.width, canvas.height);\n            vals = canvas.getContext('2d')\n                .getImageData(0, 0, canvas.width, canvas.height)\n                .data;\n        }\n        else {\n            throw new Error(\"pixels is of unknown type: \" + pixels.constructor.name);\n        }\n        var values;\n        if (numChannels === 4) {\n            values = new Int32Array(vals);\n        }\n        else {\n            var numPixels = pixels.width * pixels.height;\n            values = new Int32Array(numPixels * numChannels);\n            for (var i = 0; i < numPixels; i++) {\n                for (var channel = 0; channel < numChannels; ++channel) {\n                    values[i * numChannels + channel] = vals[i * 4 + channel];\n                }\n            }\n        }\n        this.data[id] = values;\n    };\n    MathBackendCPU.prototype.readSync = function (id) {\n        return this.data[id];\n    };\n    MathBackendCPU.prototype.disposeData = function (id) {\n        delete this.data[id];\n    };\n    MathBackendCPU.prototype.read = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2, this.data[id]];\n            });\n        });\n    };\n    MathBackendCPU.prototype.clone = function (x) {\n        return ndarray_1.NDArray.make(x.shape, { values: new Float32Array(x.getValues()) });\n    };\n    MathBackendCPU.prototype.slice1D = function (x, begin, size) {\n        var newVals = x.getValues().slice(begin, begin + size);\n        return ndarray_1.Array1D.new(newVals);\n    };\n    MathBackendCPU.prototype.slice2D = function (x, begin, size) {\n        var result = ndarray_1.Array2D.zeros(size);\n        var startI = begin[0], startJ = begin[1];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                var val = x.get(i + startI, j + startJ);\n                result.set(val, i, j);\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.slice3D = function (x, begin, size) {\n        var result = ndarray_1.Array3D.zeros(size);\n        var startI = begin[0], startJ = begin[1], startK = begin[2];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                for (var k = 0; k < size[2]; ++k) {\n                    var val = x.get(i + startI, j + startJ, k + startK);\n                    result.set(val, i, j, k);\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.slice4D = function (x, begin, size) {\n        var result = ndarray_1.Array4D.zeros(size);\n        var startI = begin[0], startJ = begin[1], startK = begin[2], startL = begin[3];\n        for (var i = 0; i < size[0]; ++i) {\n            for (var j = 0; j < size[1]; ++j) {\n                for (var k = 0; k < size[2]; ++k) {\n                    for (var l = 0; l < size[3]; ++l) {\n                        var val = x.get(i + startI, j + startJ, k + startK, l + startL);\n                        result.set(val, i, j, k, l);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat1D = function (a, b) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, 0);\n        var result = ndarray_1.Array1D.zeros(outShape);\n        var aVals = a.getValues();\n        var bVals = b.getValues();\n        var vals = result.getValues();\n        vals.set(aVals, 0);\n        vals.set(bVals, a.size);\n        return result;\n    };\n    MathBackendCPU.prototype.concat2D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array2D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                var index = [i, j];\n                var value = void 0;\n                if (index[axis] < a.shape[axis]) {\n                    value = a.get(i, j);\n                }\n                else {\n                    index[axis] -= a.shape[axis];\n                    var i2 = index[0], j2 = index[1];\n                    value = b.get(i2, j2);\n                }\n                result.set(value, i, j);\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat3D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array3D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                for (var k = 0; k < outShape[2]; ++k) {\n                    var index = [i, j, k];\n                    var value = void 0;\n                    if (index[axis] < a.shape[axis]) {\n                        value = a.get(i, j, k);\n                    }\n                    else {\n                        index[axis] -= a.shape[axis];\n                        var i2 = index[0], j2 = index[1], k2 = index[2];\n                        value = b.get(i2, j2, k2);\n                    }\n                    result.set(value, i, j, k);\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.concat4D = function (a, b, axis) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n        var result = ndarray_1.Array4D.zeros(outShape);\n        if (axis === 0) {\n            var aVals = a.getValues();\n            var bVals = b.getValues();\n            var vals = result.getValues();\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return result;\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < outShape[1]; ++j) {\n                for (var k = 0; k < outShape[2]; ++k) {\n                    for (var l = 0; l < outShape[3]; ++l) {\n                        var index = [i, j, k, l];\n                        var value = void 0;\n                        if (index[axis] < a.shape[axis]) {\n                            value = a.get(i, j, k, l);\n                        }\n                        else {\n                            index[axis] -= a.shape[axis];\n                            var i2 = index[0], j2 = index[1], k2 = index[2], l2 = index[3];\n                            value = b.get(i2, j2, k2, l2);\n                        }\n                        result.set(value, i, j, k, l);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.scaledArrayAdd = function (c1, a, c2, b) {\n        var c1Val = c1.get();\n        var c2Val = c2.get();\n        return this.broadcastedBinaryOp(a, b, 'float32', function (aVal, bVal) {\n            return c1Val * aVal + c2Val * bVal;\n        });\n    };\n    MathBackendCPU.prototype.neg = function (x) {\n        return this.multiply(ndarray_1.Scalar.new(-1), x);\n    };\n    MathBackendCPU.prototype.add = function (a, b) {\n        var one = ndarray_1.Scalar.new(1);\n        return this.scaledArrayAdd(one, a, one, b);\n    };\n    MathBackendCPU.prototype.subtract = function (a, b) {\n        return this.scaledArrayAdd(ndarray_1.Scalar.new(1), a, ndarray_1.Scalar.new(-1), b);\n    };\n    MathBackendCPU.prototype.pow = function (a, b) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var newValues = new Float32Array(util.sizeFromShape(newShape));\n        var aValues = a.getValues();\n        var bValues = b.getValues();\n        for (var i = 0; i < newValues.length; ++i) {\n            newValues[i] = Math.pow(aValues[i % a.size], bValues[i % b.size]);\n        }\n        return ndarray_1.NDArray.make(newShape, { values: newValues });\n    };\n    MathBackendCPU.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        if (aOrientation === void 0) { aOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrientation === void 0) { bOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        var sharedDim = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[1] : a.shape[0];\n        var leftDim = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[0] : a.shape[1];\n        var rightDim = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ? b.shape[1] : b.shape[0];\n        var normalGetter = function (matrix, i, j) {\n            return matrix.get(i, j);\n        };\n        var transposedGetter = function (matrix, i, j) {\n            return matrix.get(j, i);\n        };\n        var aGetter = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ?\n            normalGetter :\n            transposedGetter;\n        var bGetter = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ?\n            normalGetter :\n            transposedGetter;\n        var values = new Float32Array(leftDim * rightDim);\n        var index = 0;\n        for (var i = 0; i < leftDim; ++i) {\n            for (var j = 0; j < rightDim; ++j) {\n                var sum = 0;\n                for (var k = 0; k < sharedDim; ++k) {\n                    sum += aGetter(a, i, k) * bGetter(b, k, j);\n                }\n                values[index++] = sum;\n            }\n        }\n        return ndarray_1.Array2D.new([leftDim, rightDim], values);\n    };\n    MathBackendCPU.prototype.multiply = function (a, b) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var newValues = new Float32Array(util.sizeFromShape(newShape));\n        var aValues = a.getValues();\n        var bValues = b.getValues();\n        for (var i = 0; i < newValues.length; ++i) {\n            newValues[i] = aValues[i % a.size] * bValues[i % b.size];\n        }\n        return ndarray_1.NDArray.make(newShape, { values: newValues });\n    };\n    MathBackendCPU.prototype.divide = function (a, b) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var newValues = new Float32Array(util.sizeFromShape(newShape));\n        var aValues = a.getValues();\n        var bValues = b.getValues();\n        for (var i = 0; i < newValues.length; ++i) {\n            newValues[i] = aValues[i % a.size] / bValues[i % b.size];\n        }\n        return ndarray_1.NDArray.make(newShape, { values: newValues }, 'float32');\n    };\n    MathBackendCPU.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types_1.SumTypesMap[x.dtype];\n        var result = ndarray_1.NDArray.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var sum = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                sum += aVals[offset + j];\n            }\n            vals[i] = sum;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMin = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            var minIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    minIndex = util.NAN_INT32;\n                    break;\n                }\n                if (value < min) {\n                    min = value;\n                    minIndex = j;\n                }\n            }\n            vals[i] = minIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMax = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            var maxIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    maxIndex = util.NAN_INT32;\n                    break;\n                }\n                if (value > max) {\n                    max = value;\n                    maxIndex = j;\n                }\n            }\n            vals[i] = maxIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.equal = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            if (util.isValNaN(aVal, a.dtype) || util.isValNaN(bVal, b.dtype)) {\n                return util.getNaN('bool');\n            }\n            else {\n                return (aVal === bVal) ? 1 : 0;\n            }\n        });\n    };\n    MathBackendCPU.prototype.topKValues = function (x, k) {\n        return this.topK(x, k).values;\n    };\n    MathBackendCPU.prototype.topKIndices = function (x, k) {\n        return this.topK(x, k).indices;\n    };\n    MathBackendCPU.prototype.topK = function (x, k) {\n        var values = x.getValues();\n        var valuesAndIndices = [];\n        for (var i = 0; i < values.length; i++) {\n            valuesAndIndices.push({ value: values[i], index: i });\n        }\n        valuesAndIndices.sort(function (a, b) {\n            return b.value - a.value;\n        });\n        var topkValues = util.getTypedArrayFromDType(x.dtype, k);\n        var topkIndices = new Int32Array(k);\n        for (var i = 0; i < k; i++) {\n            topkValues[i] = valuesAndIndices[i].value;\n            topkIndices[i] = valuesAndIndices[i].index;\n        }\n        return {\n            values: ndarray_1.Array1D.new(topkValues),\n            indices: ndarray_1.Array1D.new(topkIndices)\n        };\n    };\n    MathBackendCPU.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[0];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    min = Number.NaN;\n                    break;\n                }\n                if (value < min) {\n                    min = value;\n                }\n            }\n            vals[i] = min;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ndarray_1.NDArray.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.getValues();\n        var aVals = x.getValues();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (isNaN(value)) {\n                    max = Number.NaN;\n                    break;\n                }\n                if (value > max) {\n                    max = value;\n                }\n            }\n            vals[i] = max;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.ceil = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.ceil(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.floor = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.floor(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.exp = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.exp(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log(value);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sqrt = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.sqrt(value);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.square = function (x) {\n        var values = x.getValues();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = value * value;\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.relu = function (x) {\n        var res = ndarray_1.NDArray.zeros(x.shape, x.dtype);\n        var resVals = res.getValues();\n        var inVals = x.getValues();\n        for (var i = 0; i < inVals.length; ++i) {\n            var val = inVals[i];\n            if (util.isValNaN(val, x.dtype)) {\n                resVals[i] = util.getNaN(res.dtype);\n            }\n            else {\n                resVals[i] = Math.max(0, inVals[i]);\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.elu = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = (Math.exp(v) - 1);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.eluDer = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = 1;\n            }\n            else {\n                resultValues[i] = Math.exp(v);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.selu = function (x) {\n        var scaleAlpha = 1.7580993408473768599402175208123;\n        var scale = 1.0507009873554804934193349852946;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = scale * v;\n            }\n            else {\n                resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.leakyRelu = function (x, alpha) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; i++) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = alpha * v;\n            }\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.clip = function (x, min, max) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.min(max, Math.max(min, values[i]));\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.abs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.abs(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sigmoid = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sin(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cos(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.tan(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asin(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acos(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atan(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sinh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cosh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = util.tanh(values[i]);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0; }\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            resultValues[i] = value > 0 ? 1 : (value < 0 ? alpha : value);\n        }\n        return ndarray_1.NDArray.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.conv2d = function (x, filter, bias, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var dotProd = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        var biasVal = (bias != null) ? bias.get(d2) : 0;\n                        y.set(dotProd + biasVal, b, yR, yC, d2);\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dx = ndarray_1.Array4D.zeros(convInfo.inShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var xR = 0; xR < convInfo.inHeight; ++xR) {\n                    var xRCorner = xR - leftPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(convInfo.outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < convInfo.inWidth; ++xC) {\n                        var xCCorner = xC - topPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(convInfo.outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                    var pixel = dy.get(b, yR, yC, d2);\n                                    var weight = filter.get(filterHeight - 1 - wR, filterWidth - 1 - wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        dx.set(dotProd, b, xR, xC, d1);\n                    }\n                }\n            }\n        }\n        return dx;\n    };\n    MathBackendCPU.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dW = ndarray_1.Array4D.zeros(convInfo.filterShape);\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        var dotProd = 0;\n                        for (var b = 0; b < convInfo.batchSize; ++b) {\n                            for (var yR = yRMin; yR < yRMax; ++yR) {\n                                var xR = wR + yR * strideHeight - topPad;\n                                for (var yC = yCMin; yC < yCMax; ++yC) {\n                                    var xC = wC + yC * strideWidth - leftPad;\n                                    dotProd += x.get(b, xR, xC, d1) * dy.get(b, yR, yC, d2);\n                                }\n                            }\n                        }\n                        dW.set(dotProd, wR, wC, d1, d2);\n                    }\n                }\n            }\n        }\n        return dW;\n    };\n    MathBackendCPU.prototype.conv2dDerBias = function (dy) {\n        var _a = dy.shape, batchSize = _a[0], numRows = _a[1], numCols = _a[2], outDepth = _a[3];\n        var values = new Float32Array(outDepth);\n        for (var d2 = 0; d2 < outDepth; ++d2) {\n            var sum = 0;\n            for (var b = 0; b < batchSize; ++b) {\n                for (var r = 0; r < numRows; ++r) {\n                    for (var c = 0; c < numCols; ++c) {\n                        sum += dy.get(b, r, c, d2);\n                    }\n                }\n            }\n            values[d2] = sum;\n        }\n        return ndarray_1.Array1D.new(values);\n    };\n    MathBackendCPU.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        for (var q = 0; q < chMul; ++q) {\n                            var dotProd = 0;\n                            for (var xR = xRMin; xR < xRMax; ++xR) {\n                                var wR = xR - xRCorner;\n                                for (var xC = xCMin; xC < xCMax; ++xC) {\n                                    var wC = xC - xCCorner;\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, q);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                            y.set(dotProd, b, yR, yC, d1 * chMul + q);\n                        }\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.tile = function (x, reps) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[i] * reps[i];\n        }\n        var dtype;\n        if (x.dtype === 'float32') {\n            dtype = Float32Array;\n        }\n        else if (x.dtype === 'int32') {\n            dtype = Int32Array;\n        }\n        else if (x.dtype === 'bool') {\n            dtype = Uint8Array;\n        }\n        else {\n            throw new Error(\"Dtype \" + x.dtype + \" not supported for tile\");\n        }\n        var resultValues = new dtype(util.sizeFromShape(newShape));\n        var result = ndarray_1.NDArray.make(newShape, { values: resultValues }, x.dtype);\n        var values = x.getValues();\n        for (var i = 0; i < result.size; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = new Array(x.rank);\n            for (var i_1 = 0; i_1 < originalLoc.length; i_1++) {\n                originalLoc[i_1] = newLoc[i_1] % x.shape[i_1];\n            }\n            var originalIndex = x.locToIndex(originalLoc);\n            resultValues[i] = values[originalIndex];\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.transpose = function (x, perm) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[perm[i]];\n        }\n        var resultValues = new Float32Array(x.size);\n        var values = x.getValues();\n        var result = ndarray_1.NDArray.make(newShape, { values: resultValues });\n        for (var i = 0; i < x.size; ++i) {\n            var loc = x.indexToLoc(i);\n            var newLoc = new Array(loc.length);\n            for (var i_2 = 0; i_2 < newLoc.length; i_2++) {\n                newLoc[i_2] = loc[perm[i_2]];\n            }\n            var newIndex = result.locToIndex(newLoc);\n            resultValues[newIndex] = values[i];\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.pool = function (x, convInfo, poolType) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var y = ndarray_1.Array4D.zeros(convInfo.outShape);\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var minMaxValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n                        var avgValue = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var pixel = x.get(b, xR, xC, d);\n                                if (isNaN(pixel)) {\n                                    minMaxValue = NaN;\n                                    avgValue = NaN;\n                                    break;\n                                }\n                                if ((poolType === 'max' && pixel > minMaxValue) ||\n                                    (poolType === 'min' && pixel < minMaxValue)) {\n                                    minMaxValue = pixel;\n                                }\n                                else if (poolType === 'avg') {\n                                    avgValue += pixel / (filterHeight * filterWidth);\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        y.set(poolType === 'avg' ? avgValue : minMaxValue, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return y;\n    };\n    MathBackendCPU.prototype.maxPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'max');\n    };\n    MathBackendCPU.prototype.maxPoolPositions = function (x, convInfo) {\n        var maxPositions = ndarray_1.Array4D.zeros(convInfo.outShape);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var maxValue = Number.NEGATIVE_INFINITY;\n                        var maxPosition = -1;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                var pixel = x.get(b, xR, xC, d);\n                                if (pixel > maxValue) {\n                                    maxValue = pixel;\n                                    maxPosition = wR * filterWidth + wC;\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return maxPositions;\n    };\n    MathBackendCPU.prototype.maxPoolBackprop = function (dy, x, convInfo) {\n        var maxPositions = this.maxPoolPositions(x, convInfo);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ndarray_1.Array4D.zeros(x.shape);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var maxPos = filterHeight * filterWidth - 1 -\n                                    maxPositions.get(b, dyR, dyC, d);\n                                var curPos = wR * filterWidth + wC;\n                                var mask = maxPos === curPos ? 1 : 0;\n                                if (mask === 0) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel * mask;\n                            }\n                        }\n                        dx.set(dotProd, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx;\n    };\n    MathBackendCPU.prototype.minPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'min');\n    };\n    MathBackendCPU.prototype.avgPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'avg');\n    };\n    MathBackendCPU.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        var output = ndarray_1.Array3D.zeros([newShape2D[0], newShape2D[1], x.shape[2]]);\n        var effectiveInputSize = alignCorners ? [x.shape[0] - 1, x.shape[1] - 1, x.shape[2]] : x.shape;\n        var effectiveOutputSize = alignCorners ?\n            [output.shape[0] - 1, output.shape[1] - 1, output.shape[2]] :\n            output.shape;\n        for (var r = 0; r < output.shape[0]; r++) {\n            for (var c = 0; c < output.shape[1]; c++) {\n                for (var d = 0; d < output.shape[2]; d++) {\n                    var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                    var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                    var sourceRowFloor = Math.floor(sourceFracRow);\n                    var sourceRowCeil = Math.min(x.shape[0] - 1, Math.ceil(sourceFracRow));\n                    var sourceColFloor = Math.floor(sourceFracCol);\n                    var sourceColCeil = Math.min(x.shape[1] - 1, Math.ceil(sourceFracCol));\n                    var topLeft = x.get(sourceRowFloor, sourceColFloor, d);\n                    var bottomLeft = x.get(sourceRowCeil, sourceColFloor, d);\n                    var topRight = x.get(sourceRowFloor, sourceColCeil, d);\n                    var bottomRight = x.get(sourceRowCeil, sourceColCeil, d);\n                    var rowFrac = sourceFracRow - sourceRowFloor;\n                    var colFrac = sourceFracCol - sourceColFloor;\n                    var top_1 = topLeft + (topRight - topLeft) * colFrac;\n                    var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                    var newValue = top_1 + (bottom - top_1) * rowFrac;\n                    output.set(newValue, r, c, d);\n                }\n            }\n        }\n        return output;\n    };\n    MathBackendCPU.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.getValues();\n        var meanValues = mean.getValues();\n        var varianceValues = variance.getValues();\n        var scaleValues = scale ? scale.getValues() : new Float32Array([1]);\n        var offsetValues = offset ? offset.getValues() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ndarray_1.Array2D.new(x.shape, outValues);\n    };\n    MathBackendCPU.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.getValues();\n        var meanValues = mean.getValues();\n        var varianceValues = variance.getValues();\n        var scaleValues = scale ? scale.getValues() : new Float32Array([1]);\n        var offsetValues = offset ? offset.getValues() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ndarray_1.Array3D.new(x.shape, outValues);\n    };\n    MathBackendCPU.prototype.multinomial = function (probabilities, numSamples, seed) {\n        var batchSize = probabilities.shape[0];\n        var numEvents = probabilities.shape[1];\n        var res = ndarray_1.Array2D.zeros([batchSize, numSamples], 'int32');\n        var resVals = res.getValues();\n        var probVals = probabilities.getValues();\n        for (var b = 0; b < batchSize; ++b) {\n            var offset = b * numEvents;\n            var cdf = new Float32Array(numEvents - 1);\n            cdf[0] = probVals[offset];\n            for (var event_1 = 1; event_1 < cdf.length; ++event_1) {\n                cdf[event_1] = cdf[event_1 - 1] + probVals[offset + event_1];\n            }\n            var random = seedrandom.alea(seed.toString());\n            var outOffset = b * numSamples;\n            for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n                var r = random();\n                resVals[outOffset + sampleId] = cdf.length;\n                for (var event_2 = 0; event_2 < cdf.length; event_2++) {\n                    if (r < cdf[event_2]) {\n                        resVals[outOffset + sampleId] = event_2;\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var res = new Float32Array(indices.size * depth);\n        res.fill(offValue);\n        for (var event_3 = 0; event_3 < indices.size; ++event_3) {\n            res[event_3 * depth + indices.get(event_3)] = onValue;\n        }\n        return ndarray_1.Array2D.new([indices.size, depth], res);\n    };\n    MathBackendCPU.prototype.broadcastedBinaryOp = function (a, b, dtype, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var result = ndarray_1.NDArray.zeros(newShape, dtype);\n        var newValues = result.getValues();\n        var aValues = a.getValues();\n        var bValues = b.getValues();\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var _loop_1 = function (i) {\n            var loc = result.indexToLoc(i);\n            var aLoc = loc.slice(-a.rank);\n            aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n            var aIndex = a.locToIndex(aLoc);\n            var bLoc = loc.slice(-b.rank);\n            bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n            var bIndex = b.locToIndex(bLoc);\n            newValues[i] = op(aValues[aIndex], bValues[bIndex]);\n        };\n        for (var i = 0; i < newValues.length; ++i) {\n            _loop_1(i);\n        }\n        return result;\n    };\n    return MathBackendCPU;\n}());\nexports.MathBackendCPU = MathBackendCPU;\nbackend_1.BACKEND_REGISTRY['cpu'] = new MathBackendCPU();\nvar NDArrayMathCPU = (function (_super) {\n    __extends(NDArrayMathCPU, _super);\n    function NDArrayMathCPU(safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        return _super.call(this, 'cpu', safeMode) || this;\n    }\n    return NDArrayMathCPU;\n}(math_1.NDArrayMath));\nexports.NDArrayMathCPU = NDArrayMathCPU;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/backend_cpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/backend_engine.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/backend_engine.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar kernel_registry = __webpack_require__(/*! ./kernel_registry */ \"./node_modules/deeplearn/dist/math/backends/kernel_registry.js\");\nvar BackendEngine = (function () {\n    function BackendEngine(backend) {\n        this.backend = backend;\n        this.debugMode = false;\n    }\n    BackendEngine.prototype.enableDebugMode = function () {\n        this.debugMode = true;\n    };\n    BackendEngine.prototype.executeKernel = function (kernelName, config) {\n        var _this = this;\n        var kernelFn = function () {\n            return kernel_registry.executeKernel(kernelName, _this.backend, config);\n        };\n        var start;\n        if (this.debugMode) {\n            start = performance.now();\n        }\n        var result = kernelFn();\n        if (this.debugMode) {\n            var vals = result.getValues();\n            var time = util.rightPad(performance.now() - start + \"ms\", 9);\n            var paddedName = util.rightPad(name, 25);\n            var rank = result.rank;\n            var size = result.size;\n            var shape = util.rightPad(result.shape.toString(), 14);\n            console.log(\"%c\" + paddedName + \"\\t%c\" + time + \"\\t%c\" + rank + \"D \" + shape + \"\\t%c\" + size, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange');\n            this.checkForNaN(vals, result.dtype, name);\n        }\n        return result;\n    };\n    BackendEngine.prototype.checkForNaN = function (vals, dtype, name) {\n        for (var i = 0; i < vals.length; i++) {\n            if (util.isValNaN(vals[i], dtype)) {\n                throw Error(\"The result of the last math.\" + name + \" has NaNs.\");\n            }\n        }\n    };\n    BackendEngine.prototype.getBackend = function () {\n        return this.backend;\n    };\n    return BackendEngine;\n}());\nexports.BackendEngine = BackendEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy9iYWNrZW5kX2VuZ2luZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL2JhY2tlbmRfZW5naW5lLmpzPzU4NzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi91dGlsXCIpO1xudmFyIGtlcm5lbF9yZWdpc3RyeSA9IHJlcXVpcmUoXCIuL2tlcm5lbF9yZWdpc3RyeVwiKTtcbnZhciBCYWNrZW5kRW5naW5lID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCYWNrZW5kRW5naW5lKGJhY2tlbmQpIHtcbiAgICAgICAgdGhpcy5iYWNrZW5kID0gYmFja2VuZDtcbiAgICAgICAgdGhpcy5kZWJ1Z01vZGUgPSBmYWxzZTtcbiAgICB9XG4gICAgQmFja2VuZEVuZ2luZS5wcm90b3R5cGUuZW5hYmxlRGVidWdNb2RlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlYnVnTW9kZSA9IHRydWU7XG4gICAgfTtcbiAgICBCYWNrZW5kRW5naW5lLnByb3RvdHlwZS5leGVjdXRlS2VybmVsID0gZnVuY3Rpb24gKGtlcm5lbE5hbWUsIGNvbmZpZykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIga2VybmVsRm4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4ga2VybmVsX3JlZ2lzdHJ5LmV4ZWN1dGVLZXJuZWwoa2VybmVsTmFtZSwgX3RoaXMuYmFja2VuZCwgY29uZmlnKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHN0YXJ0O1xuICAgICAgICBpZiAodGhpcy5kZWJ1Z01vZGUpIHtcbiAgICAgICAgICAgIHN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlc3VsdCA9IGtlcm5lbEZuKCk7XG4gICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkge1xuICAgICAgICAgICAgdmFyIHZhbHMgPSByZXN1bHQuZ2V0VmFsdWVzKCk7XG4gICAgICAgICAgICB2YXIgdGltZSA9IHV0aWwucmlnaHRQYWQocGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydCArIFwibXNcIiwgOSk7XG4gICAgICAgICAgICB2YXIgcGFkZGVkTmFtZSA9IHV0aWwucmlnaHRQYWQobmFtZSwgMjUpO1xuICAgICAgICAgICAgdmFyIHJhbmsgPSByZXN1bHQucmFuaztcbiAgICAgICAgICAgIHZhciBzaXplID0gcmVzdWx0LnNpemU7XG4gICAgICAgICAgICB2YXIgc2hhcGUgPSB1dGlsLnJpZ2h0UGFkKHJlc3VsdC5zaGFwZS50b1N0cmluZygpLCAxNCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIiVjXCIgKyBwYWRkZWROYW1lICsgXCJcXHQlY1wiICsgdGltZSArIFwiXFx0JWNcIiArIHJhbmsgKyBcIkQgXCIgKyBzaGFwZSArIFwiXFx0JWNcIiArIHNpemUsICdmb250LXdlaWdodDpib2xkJywgJ2NvbG9yOnJlZCcsICdjb2xvcjpibHVlJywgJ2NvbG9yOiBvcmFuZ2UnKTtcbiAgICAgICAgICAgIHRoaXMuY2hlY2tGb3JOYU4odmFscywgcmVzdWx0LmR0eXBlLCBuYW1lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgQmFja2VuZEVuZ2luZS5wcm90b3R5cGUuY2hlY2tGb3JOYU4gPSBmdW5jdGlvbiAodmFscywgZHR5cGUsIG5hbWUpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodXRpbC5pc1ZhbE5hTih2YWxzW2ldLCBkdHlwZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcIlRoZSByZXN1bHQgb2YgdGhlIGxhc3QgbWF0aC5cIiArIG5hbWUgKyBcIiBoYXMgTmFOcy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEJhY2tlbmRFbmdpbmUucHJvdG90eXBlLmdldEJhY2tlbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhY2tlbmQ7XG4gICAgfTtcbiAgICByZXR1cm4gQmFja2VuZEVuZ2luZTtcbn0oKSk7XG5leHBvcnRzLkJhY2tlbmRFbmdpbmUgPSBCYWNrZW5kRW5naW5lO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/backend_engine.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/backend_webgl.js":
/*!********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/backend_webgl.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar axis_util = __webpack_require__(/*! ../axis_util */ \"./node_modules/deeplearn/dist/math/axis_util.js\");\nvar math_1 = __webpack_require__(/*! ../math */ \"./node_modules/deeplearn/dist/math/math.js\");\nvar ndarray_1 = __webpack_require__(/*! ../ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar reduce_util = __webpack_require__(/*! ../reduce_util */ \"./node_modules/deeplearn/dist/math/reduce_util.js\");\nvar types_1 = __webpack_require__(/*! ../types */ \"./node_modules/deeplearn/dist/math/types.js\");\nvar backend_1 = __webpack_require__(/*! ./backend */ \"./node_modules/deeplearn/dist/math/backends/backend.js\");\nvar argminmax_gpu_1 = __webpack_require__(/*! ./webgl/argminmax_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js\");\nvar batchnorm_gpu_1 = __webpack_require__(/*! ./webgl/batchnorm_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js\");\nvar binaryop_gpu = __webpack_require__(/*! ./webgl/binaryop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js\");\nvar binaryop_gpu_1 = __webpack_require__(/*! ./webgl/binaryop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js\");\nvar clip_gpu_1 = __webpack_require__(/*! ./webgl/clip_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js\");\nvar concat_gpu_1 = __webpack_require__(/*! ./webgl/concat_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js\");\nvar conv_backprop_gpu_1 = __webpack_require__(/*! ./webgl/conv_backprop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js\");\nvar conv_gpu_1 = __webpack_require__(/*! ./webgl/conv_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js\");\nvar conv_gpu_depthwise_1 = __webpack_require__(/*! ./webgl/conv_gpu_depthwise */ \"./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js\");\nvar copy_gpu_1 = __webpack_require__(/*! ./webgl/copy_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js\");\nvar gpgpu_context_1 = __webpack_require__(/*! ./webgl/gpgpu_context */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js\");\nvar gpgpu_math = __webpack_require__(/*! ./webgl/gpgpu_math */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js\");\nvar gpgpu_util = __webpack_require__(/*! ./webgl/gpgpu_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js\");\nvar max_pool_backprop_gpu_1 = __webpack_require__(/*! ./webgl/max_pool_backprop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js\");\nvar mulmat_gpu_1 = __webpack_require__(/*! ./webgl/mulmat_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js\");\nvar multinomial_gpu_1 = __webpack_require__(/*! ./webgl/multinomial_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js\");\nvar onehot_gpu_1 = __webpack_require__(/*! ./webgl/onehot_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js\");\nvar pool_gpu_1 = __webpack_require__(/*! ./webgl/pool_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js\");\nvar reduce_gpu_1 = __webpack_require__(/*! ./webgl/reduce_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js\");\nvar resize_bilinear_gpu_1 = __webpack_require__(/*! ./webgl/resize_bilinear_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js\");\nvar slice_gpu_1 = __webpack_require__(/*! ./webgl/slice_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js\");\nvar tex_util_1 = __webpack_require__(/*! ./webgl/tex_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\");\nvar texture_manager_1 = __webpack_require__(/*! ./webgl/texture_manager */ \"./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js\");\nvar tile_gpu_1 = __webpack_require__(/*! ./webgl/tile_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js\");\nvar transpose_gpu_1 = __webpack_require__(/*! ./webgl/transpose_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js\");\nvar unary_op = __webpack_require__(/*! ./webgl/unaryop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js\");\nvar unaryop_gpu_1 = __webpack_require__(/*! ./webgl/unaryop_gpu */ \"./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js\");\nvar webgl_util = __webpack_require__(/*! ./webgl/webgl_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\");\nvar MathBackendWebGL = (function () {\n    function MathBackendWebGL(gpgpu) {\n        this.texData = {};\n        this.binaryCache = {};\n        if (gpgpu == null) {\n            var gl = gpgpu_util.createWebGLContext();\n            this.gpgpu = new gpgpu_context_1.GPGPUContext(gl);\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpu = gpgpu;\n            this.gpgpuCreatedLocally = false;\n        }\n        this.textureManager = new texture_manager_1.TextureManager(this.gpgpu);\n    }\n    MathBackendWebGL.prototype.writePixels = function (id, pixels, numChannels) {\n        var shape = [pixels.height, pixels.width, numChannels];\n        var texShape = [shape[0], shape[1]];\n        var texture = this.textureManager.acquireTexture(texShape);\n        this.gpgpu.uploadPixelDataToTexture(texture, pixels);\n        this.texData[id] = {\n            texture: texture,\n            textureType: tex_util_1.TextureType.RGBA_COLOR,\n            texShape: texShape,\n            numChannels: numChannels,\n            dtype: 'int32'\n        };\n    };\n    MathBackendWebGL.prototype.write = function (id, values, dtype, shape) {\n        var texShape = webgl_util.getTextureShapeFromLogicalShape(this.gpgpu.gl, shape);\n        var texture = this.textureManager.acquireTexture(texShape);\n        var textureType = tex_util_1.TextureType.DEFAULT;\n        this.texData[id] = { texture: texture, textureType: textureType, texShape: texShape, dtype: dtype };\n        if (values != null) {\n            this.gpgpu.uploadMatrixToTexture(texture, texShape[0], texShape[1], typedArrayToFloat32(values, dtype));\n        }\n    };\n    MathBackendWebGL.prototype.readSync = function (id) {\n        var values;\n        var _a = this.texData[id], texture = _a.texture, textureType = _a.textureType, texShape = _a.texShape, numChannels = _a.numChannels, dtype = _a.dtype;\n        if (textureType === tex_util_1.TextureType.DEFAULT) {\n            values = this.gpgpu.downloadMatrixFromTexture(texture, texShape[0], texShape[1]);\n        }\n        else {\n            values = this.gpgpu.downloadMatrixFromRGBAColorTexture(texture, texShape[0], texShape[1], numChannels);\n        }\n        return float32ToTypedArray(values, dtype);\n    };\n    MathBackendWebGL.prototype.read = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, texture, textureType, texShape, queryFn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.texData[id], texture = _a.texture, textureType = _a.textureType, texShape = _a.texShape;\n                        if (environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') &&\n                            textureType === tex_util_1.TextureType.DEFAULT) {\n                            return [2, this.gpgpu.downloadMatrixFromTextureAsync(texture, texShape[0], texShape[1])];\n                        }\n                        if (!!environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_ENABLED')) return [3, 2];\n                        return [4, this.readSync(id)];\n                    case 1: return [2, _b.sent()];\n                    case 2:\n                        queryFn = function () { };\n                        return [4, this.gpgpu.runQuery(queryFn)];\n                    case 3:\n                        _b.sent();\n                        return [2, this.readSync(id)];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.disposeData = function (id) {\n        if (id in this.texData) {\n            var _a = this.texData[id], texture = _a.texture, texShape = _a.texShape;\n            this.textureManager.releaseTexture(texture, texShape);\n            delete this.texData[id];\n        }\n    };\n    MathBackendWebGL.prototype.getGPGPUContext = function () {\n        return this.gpgpu;\n    };\n    MathBackendWebGL.prototype.clone = function (x) {\n        var texShape = this.texData[x.id].texShape;\n        var source = x.as2D(texShape[0], texShape[1]);\n        var output = this.makeOutputArray(texShape, x.dtype);\n        this.copy2D(source, [0, 0], texShape, output, [0, 0], texShape);\n        return output.reshape(x.shape);\n    };\n    MathBackendWebGL.prototype.slice1D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram([size]);\n        var customSetup = program.getCustomSetupFunc([begin]);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice2D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice3D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.slice4D = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.copy2D = function (source, sourceBeginRowCol, sourceSizeRowCol, dest, destBeginRowCol, destSizeRowCol) {\n        var program = new copy_gpu_1.Copy2DProgram(sourceSizeRowCol[1], destSizeRowCol[1]);\n        var customSetup = program.getCustomSetupFunc(sourceBeginRowCol, destBeginRowCol, destSizeRowCol);\n        this.compileAndRun(program, [source], dest, customSetup);\n    };\n    MathBackendWebGL.prototype.concat1D = function (a, b) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, 0);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat2D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat3D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.concat4D = function (a, b, axis) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape, axis);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.neg = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.NEG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        var program = new mulmat_gpu_1.MatMulProgram(a.shape, b.shape, aOrientation, bOrientation);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.multiply = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.tile = function (x, reps) {\n        var program = new tile_gpu_1.TileProgram(x.shape, reps);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.transpose = function (x, perm) {\n        var program = new transpose_gpu_1.TransposeProgram(x.shape, perm);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reduce = function (x, reduceType, dtype) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new reduce_gpu_1.ReduceProgram(reduceInfo, reduceType);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray(program.outputShape, dtype).as2D(rows, cols);\n        this.compileAndRun(program, [x], output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.reduce(output, reduceType, dtype);\n    };\n    MathBackendWebGL.prototype.argReduce = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        if (bestIndicesA != null) {\n            batchSize = bestIndicesA.shape[0];\n            inSize = bestIndicesA.shape[1];\n        }\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new argminmax_gpu_1.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray(program.outputShape, 'int32').as2D(rows, cols);\n        var inputs = [x];\n        if (bestIndicesA != null) {\n            inputs.push(bestIndicesA);\n        }\n        this.compileAndRun(program, inputs, output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.argReduce(x, reduceType, output);\n    };\n    MathBackendWebGL.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types_1.SumTypesMap[x.dtype];\n        return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMin = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'min').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMax = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'max').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.equal = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.topKValues = function (x, k) {\n        throw new Error('topKValues GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.topKIndices = function (x, k) {\n        throw new Error('topKIndices GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.divide = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.DIV, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'float32');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.add = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.subtract = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.pow = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.ceil = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.CEIL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.floor = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.FLOOR);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.exp = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXP);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.square = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQUARE);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.elu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.eluDer = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU_DER);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.selu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.leakyRelu = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LEAKY_RELU(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.clip = function (x, min, max) {\n        var program = new clip_gpu_1.ClipProgram(x.shape, min, max);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.abs = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sigmoid = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGMOID);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.step = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.conv2d = function (x, filter, bias, convInfo) {\n        var program = new conv_gpu_1.Conv2DProgram(convInfo, bias != null);\n        var inputs = bias != null ? [x, filter, bias] : [x, filter];\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.conv2dDerBias = function (dy) {\n        var program = new conv_backprop_gpu_1.Conv2DDerBiasProgram(dy.shape);\n        return this.compileAndRun(program, [dy]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.maxPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'max', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.minPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'min', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.avgPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'avg', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.maxPoolBackprop = function (dy, x, convInfo) {\n        var getPositions = true;\n        var maxPoolPositionsProgram = new pool_gpu_1.Pool2DProgram(convInfo, 'max', getPositions);\n        var maxPoolPositions = this.compileAndRun(maxPoolPositionsProgram, [x]);\n        var maxPoolBackPropProgram = new max_pool_backprop_gpu_1.MaxPool2DBackpropProgram(convInfo);\n        var result = this.compileAndRun(maxPoolBackPropProgram, [dy, maxPoolPositions]);\n        maxPoolPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        var program = new resize_bilinear_gpu_1.ResizeBilinear3DProgram(x.shape, newShape2D, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.multinomial = function (probs, numSamples, seed) {\n        var batchSize = probs.shape[0];\n        var numOutcomes = probs.shape[1];\n        var program = new multinomial_gpu_1.MultinomialProgram(batchSize, numOutcomes, numSamples);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        var customSetup = program.getCustomSetupFunc(seed);\n        return this.compileAndRun(program, [probs], output, customSetup);\n    };\n    MathBackendWebGL.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var program = new onehot_gpu_1.OneHotProgram(indices.size, depth, onValue, offValue);\n        return this.compileAndRun(program, [indices]);\n    };\n    MathBackendWebGL.prototype.makeOutputArray = function (shape, dtype) {\n        return ndarray_1.NDArray.make(shape, {}, dtype);\n    };\n    MathBackendWebGL.prototype.compileAndRun = function (program, inputs, output, customSetup) {\n        var _this = this;\n        if (output == null) {\n            output = this.makeOutputArray(program.outputShape, inputs[0].dtype);\n        }\n        var inputsData = inputs.map(function (input) {\n            return { array: input, texData: _this.texData[input.id] };\n        });\n        var outputData = { array: output, texData: this.texData[output.id] };\n        var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        var binary = this.getAndSaveBinary(key, function () {\n            return gpgpu_math.compileProgram(_this.gpgpu, program, inputsData, outputData);\n        });\n        gpgpu_math.runProgram(binary, inputsData, outputData, customSetup);\n        return output;\n    };\n    MathBackendWebGL.prototype.getAndSaveBinary = function (key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    };\n    MathBackendWebGL.prototype.getTextureManager = function () {\n        return this.textureManager;\n    };\n    MathBackendWebGL.prototype.dispose = function () {\n        for (var key in this.binaryCache) {\n            this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n        }\n        this.textureManager.dispose();\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.dispose();\n        }\n    };\n    return MathBackendWebGL;\n}());\nexports.MathBackendWebGL = MathBackendWebGL;\nbackend_1.BACKEND_REGISTRY['webgl'] = new MathBackendWebGL();\nvar NDArrayMathGPU = (function (_super) {\n    __extends(NDArrayMathGPU, _super);\n    function NDArrayMathGPU(gpgpu, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        return _super.call(this, new MathBackendWebGL(gpgpu), safeMode) || this;\n    }\n    NDArrayMathGPU.prototype.getGPGPUContext = function () {\n        return this.backendEngine.getBackend()\n            .getGPGPUContext();\n    };\n    NDArrayMathGPU.prototype.getTextureManager = function () {\n        return this.backendEngine.getBackend()\n            .getTextureManager();\n    };\n    return NDArrayMathGPU;\n}(math_1.NDArrayMath));\nexports.NDArrayMathGPU = NDArrayMathGPU;\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        var result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (var i = 0; i < result.length; ++i) {\n            var val = a[i];\n            val = isNaN(val) ? util.getNaN(dtype) : Math.round(val);\n            result[i] = val;\n        }\n        return result;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nfunction typedArrayToFloat32(a, dtype) {\n    if (a instanceof Float32Array) {\n        return a;\n    }\n    else {\n        var res = new Float32Array(a.length);\n        for (var i = 0; i < res.length; i++) {\n            var val = a[i];\n            res[i] = util.isValNaN(val, dtype) ? NaN : val;\n        }\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy9iYWNrZW5kX3dlYmdsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvYmFja2VuZF93ZWJnbC5qcz84MjRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSB5W29wWzBdICYgMiA/IFwicmV0dXJuXCIgOiBvcFswXSA/IFwidGhyb3dcIiA6IFwibmV4dFwiXSkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gWzAsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBlbnZpcm9ubWVudF8xID0gcmVxdWlyZShcIi4uLy4uL2Vudmlyb25tZW50XCIpO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbnZhciBheGlzX3V0aWwgPSByZXF1aXJlKFwiLi4vYXhpc191dGlsXCIpO1xudmFyIG1hdGhfMSA9IHJlcXVpcmUoXCIuLi9tYXRoXCIpO1xudmFyIG5kYXJyYXlfMSA9IHJlcXVpcmUoXCIuLi9uZGFycmF5XCIpO1xudmFyIHJlZHVjZV91dGlsID0gcmVxdWlyZShcIi4uL3JlZHVjZV91dGlsXCIpO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG52YXIgYmFja2VuZF8xID0gcmVxdWlyZShcIi4vYmFja2VuZFwiKTtcbnZhciBhcmdtaW5tYXhfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9hcmdtaW5tYXhfZ3B1XCIpO1xudmFyIGJhdGNobm9ybV9ncHVfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL2JhdGNobm9ybV9ncHVcIik7XG52YXIgYmluYXJ5b3BfZ3B1ID0gcmVxdWlyZShcIi4vd2ViZ2wvYmluYXJ5b3BfZ3B1XCIpO1xudmFyIGJpbmFyeW9wX2dwdV8xID0gcmVxdWlyZShcIi4vd2ViZ2wvYmluYXJ5b3BfZ3B1XCIpO1xudmFyIGNsaXBfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9jbGlwX2dwdVwiKTtcbnZhciBjb25jYXRfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9jb25jYXRfZ3B1XCIpO1xudmFyIGNvbnZfYmFja3Byb3BfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9jb252X2JhY2twcm9wX2dwdVwiKTtcbnZhciBjb252X2dwdV8xID0gcmVxdWlyZShcIi4vd2ViZ2wvY29udl9ncHVcIik7XG52YXIgY29udl9ncHVfZGVwdGh3aXNlXzEgPSByZXF1aXJlKFwiLi93ZWJnbC9jb252X2dwdV9kZXB0aHdpc2VcIik7XG52YXIgY29weV9ncHVfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL2NvcHlfZ3B1XCIpO1xudmFyIGdwZ3B1X2NvbnRleHRfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL2dwZ3B1X2NvbnRleHRcIik7XG52YXIgZ3BncHVfbWF0aCA9IHJlcXVpcmUoXCIuL3dlYmdsL2dwZ3B1X21hdGhcIik7XG52YXIgZ3BncHVfdXRpbCA9IHJlcXVpcmUoXCIuL3dlYmdsL2dwZ3B1X3V0aWxcIik7XG52YXIgbWF4X3Bvb2xfYmFja3Byb3BfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9tYXhfcG9vbF9iYWNrcHJvcF9ncHVcIik7XG52YXIgbXVsbWF0X2dwdV8xID0gcmVxdWlyZShcIi4vd2ViZ2wvbXVsbWF0X2dwdVwiKTtcbnZhciBtdWx0aW5vbWlhbF9ncHVfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL211bHRpbm9taWFsX2dwdVwiKTtcbnZhciBvbmVob3RfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9vbmVob3RfZ3B1XCIpO1xudmFyIHBvb2xfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9wb29sX2dwdVwiKTtcbnZhciByZWR1Y2VfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9yZWR1Y2VfZ3B1XCIpO1xudmFyIHJlc2l6ZV9iaWxpbmVhcl9ncHVfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL3Jlc2l6ZV9iaWxpbmVhcl9ncHVcIik7XG52YXIgc2xpY2VfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC9zbGljZV9ncHVcIik7XG52YXIgdGV4X3V0aWxfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL3RleF91dGlsXCIpO1xudmFyIHRleHR1cmVfbWFuYWdlcl8xID0gcmVxdWlyZShcIi4vd2ViZ2wvdGV4dHVyZV9tYW5hZ2VyXCIpO1xudmFyIHRpbGVfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC90aWxlX2dwdVwiKTtcbnZhciB0cmFuc3Bvc2VfZ3B1XzEgPSByZXF1aXJlKFwiLi93ZWJnbC90cmFuc3Bvc2VfZ3B1XCIpO1xudmFyIHVuYXJ5X29wID0gcmVxdWlyZShcIi4vd2ViZ2wvdW5hcnlvcF9ncHVcIik7XG52YXIgdW5hcnlvcF9ncHVfMSA9IHJlcXVpcmUoXCIuL3dlYmdsL3VuYXJ5b3BfZ3B1XCIpO1xudmFyIHdlYmdsX3V0aWwgPSByZXF1aXJlKFwiLi93ZWJnbC93ZWJnbF91dGlsXCIpO1xudmFyIE1hdGhCYWNrZW5kV2ViR0wgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1hdGhCYWNrZW5kV2ViR0woZ3BncHUpIHtcbiAgICAgICAgdGhpcy50ZXhEYXRhID0ge307XG4gICAgICAgIHRoaXMuYmluYXJ5Q2FjaGUgPSB7fTtcbiAgICAgICAgaWYgKGdwZ3B1ID09IG51bGwpIHtcbiAgICAgICAgICAgIHZhciBnbCA9IGdwZ3B1X3V0aWwuY3JlYXRlV2ViR0xDb250ZXh0KCk7XG4gICAgICAgICAgICB0aGlzLmdwZ3B1ID0gbmV3IGdwZ3B1X2NvbnRleHRfMS5HUEdQVUNvbnRleHQoZ2wpO1xuICAgICAgICAgICAgdGhpcy5ncGdwdUNyZWF0ZWRMb2NhbGx5ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZ3BncHUgPSBncGdwdTtcbiAgICAgICAgICAgIHRoaXMuZ3BncHVDcmVhdGVkTG9jYWxseSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGV4dHVyZU1hbmFnZXIgPSBuZXcgdGV4dHVyZV9tYW5hZ2VyXzEuVGV4dHVyZU1hbmFnZXIodGhpcy5ncGdwdSk7XG4gICAgfVxuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLndyaXRlUGl4ZWxzID0gZnVuY3Rpb24gKGlkLCBwaXhlbHMsIG51bUNoYW5uZWxzKSB7XG4gICAgICAgIHZhciBzaGFwZSA9IFtwaXhlbHMuaGVpZ2h0LCBwaXhlbHMud2lkdGgsIG51bUNoYW5uZWxzXTtcbiAgICAgICAgdmFyIHRleFNoYXBlID0gW3NoYXBlWzBdLCBzaGFwZVsxXV07XG4gICAgICAgIHZhciB0ZXh0dXJlID0gdGhpcy50ZXh0dXJlTWFuYWdlci5hY3F1aXJlVGV4dHVyZSh0ZXhTaGFwZSk7XG4gICAgICAgIHRoaXMuZ3BncHUudXBsb2FkUGl4ZWxEYXRhVG9UZXh0dXJlKHRleHR1cmUsIHBpeGVscyk7XG4gICAgICAgIHRoaXMudGV4RGF0YVtpZF0gPSB7XG4gICAgICAgICAgICB0ZXh0dXJlOiB0ZXh0dXJlLFxuICAgICAgICAgICAgdGV4dHVyZVR5cGU6IHRleF91dGlsXzEuVGV4dHVyZVR5cGUuUkdCQV9DT0xPUixcbiAgICAgICAgICAgIHRleFNoYXBlOiB0ZXhTaGFwZSxcbiAgICAgICAgICAgIG51bUNoYW5uZWxzOiBudW1DaGFubmVscyxcbiAgICAgICAgICAgIGR0eXBlOiAnaW50MzInXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIChpZCwgdmFsdWVzLCBkdHlwZSwgc2hhcGUpIHtcbiAgICAgICAgdmFyIHRleFNoYXBlID0gd2ViZ2xfdXRpbC5nZXRUZXh0dXJlU2hhcGVGcm9tTG9naWNhbFNoYXBlKHRoaXMuZ3BncHUuZ2wsIHNoYXBlKTtcbiAgICAgICAgdmFyIHRleHR1cmUgPSB0aGlzLnRleHR1cmVNYW5hZ2VyLmFjcXVpcmVUZXh0dXJlKHRleFNoYXBlKTtcbiAgICAgICAgdmFyIHRleHR1cmVUeXBlID0gdGV4X3V0aWxfMS5UZXh0dXJlVHlwZS5ERUZBVUxUO1xuICAgICAgICB0aGlzLnRleERhdGFbaWRdID0geyB0ZXh0dXJlOiB0ZXh0dXJlLCB0ZXh0dXJlVHlwZTogdGV4dHVyZVR5cGUsIHRleFNoYXBlOiB0ZXhTaGFwZSwgZHR5cGU6IGR0eXBlIH07XG4gICAgICAgIGlmICh2YWx1ZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5ncGdwdS51cGxvYWRNYXRyaXhUb1RleHR1cmUodGV4dHVyZSwgdGV4U2hhcGVbMF0sIHRleFNoYXBlWzFdLCB0eXBlZEFycmF5VG9GbG9hdDMyKHZhbHVlcywgZHR5cGUpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUucmVhZFN5bmMgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdmFyIHZhbHVlcztcbiAgICAgICAgdmFyIF9hID0gdGhpcy50ZXhEYXRhW2lkXSwgdGV4dHVyZSA9IF9hLnRleHR1cmUsIHRleHR1cmVUeXBlID0gX2EudGV4dHVyZVR5cGUsIHRleFNoYXBlID0gX2EudGV4U2hhcGUsIG51bUNoYW5uZWxzID0gX2EubnVtQ2hhbm5lbHMsIGR0eXBlID0gX2EuZHR5cGU7XG4gICAgICAgIGlmICh0ZXh0dXJlVHlwZSA9PT0gdGV4X3V0aWxfMS5UZXh0dXJlVHlwZS5ERUZBVUxUKSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSB0aGlzLmdwZ3B1LmRvd25sb2FkTWF0cml4RnJvbVRleHR1cmUodGV4dHVyZSwgdGV4U2hhcGVbMF0sIHRleFNoYXBlWzFdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlcyA9IHRoaXMuZ3BncHUuZG93bmxvYWRNYXRyaXhGcm9tUkdCQUNvbG9yVGV4dHVyZSh0ZXh0dXJlLCB0ZXhTaGFwZVswXSwgdGV4U2hhcGVbMV0sIG51bUNoYW5uZWxzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmxvYXQzMlRvVHlwZWRBcnJheSh2YWx1ZXMsIGR0eXBlKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnJlYWQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hLCB0ZXh0dXJlLCB0ZXh0dXJlVHlwZSwgdGV4U2hhcGUsIHF1ZXJ5Rm47XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYSA9IHRoaXMudGV4RGF0YVtpZF0sIHRleHR1cmUgPSBfYS50ZXh0dXJlLCB0ZXh0dXJlVHlwZSA9IF9hLnRleHR1cmVUeXBlLCB0ZXhTaGFwZSA9IF9hLnRleFNoYXBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVudmlyb25tZW50XzEuRU5WLmdldCgnV0VCR0xfR0VUX0JVRkZFUl9TVUJfREFUQV9BU1lOQ19FWFRFTlNJT05fRU5BQkxFRCcpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dHVyZVR5cGUgPT09IHRleF91dGlsXzEuVGV4dHVyZVR5cGUuREVGQVVMVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiwgdGhpcy5ncGdwdS5kb3dubG9hZE1hdHJpeEZyb21UZXh0dXJlQXN5bmModGV4dHVyZSwgdGV4U2hhcGVbMF0sIHRleFNoYXBlWzFdKV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISFlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0RJU0pPSU5UX1FVRVJZX1RJTUVSX0VYVEVOU0lPTl9FTkFCTEVEJykpIHJldHVybiBbMywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQsIHRoaXMucmVhZFN5bmMoaWQpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gWzIsIF9iLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5Rm4gPSBmdW5jdGlvbiAoKSB7IH07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQsIHRoaXMuZ3BncHUucnVuUXVlcnkocXVlcnlGbildO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIsIHRoaXMucmVhZFN5bmMoaWQpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5kaXNwb3NlRGF0YSA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICBpZiAoaWQgaW4gdGhpcy50ZXhEYXRhKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSB0aGlzLnRleERhdGFbaWRdLCB0ZXh0dXJlID0gX2EudGV4dHVyZSwgdGV4U2hhcGUgPSBfYS50ZXhTaGFwZTtcbiAgICAgICAgICAgIHRoaXMudGV4dHVyZU1hbmFnZXIucmVsZWFzZVRleHR1cmUodGV4dHVyZSwgdGV4U2hhcGUpO1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMudGV4RGF0YVtpZF07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmdldEdQR1BVQ29udGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3BncHU7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciB0ZXhTaGFwZSA9IHRoaXMudGV4RGF0YVt4LmlkXS50ZXhTaGFwZTtcbiAgICAgICAgdmFyIHNvdXJjZSA9IHguYXMyRCh0ZXhTaGFwZVswXSwgdGV4U2hhcGVbMV0pO1xuICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5tYWtlT3V0cHV0QXJyYXkodGV4U2hhcGUsIHguZHR5cGUpO1xuICAgICAgICB0aGlzLmNvcHkyRChzb3VyY2UsIFswLCAwXSwgdGV4U2hhcGUsIG91dHB1dCwgWzAsIDBdLCB0ZXhTaGFwZSk7XG4gICAgICAgIHJldHVybiBvdXRwdXQucmVzaGFwZSh4LnNoYXBlKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNsaWNlMUQgPSBmdW5jdGlvbiAoeCwgYmVnaW4sIHNpemUpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgc2xpY2VfZ3B1XzEuU2xpY2VQcm9ncmFtKFtzaXplXSk7XG4gICAgICAgIHZhciBjdXN0b21TZXR1cCA9IHByb2dyYW0uZ2V0Q3VzdG9tU2V0dXBGdW5jKFtiZWdpbl0pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSwgbnVsbCwgY3VzdG9tU2V0dXApO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuc2xpY2UyRCA9IGZ1bmN0aW9uICh4LCBiZWdpbiwgc2l6ZSkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBzbGljZV9ncHVfMS5TbGljZVByb2dyYW0oc2l6ZSk7XG4gICAgICAgIHZhciBjdXN0b21TZXR1cCA9IHByb2dyYW0uZ2V0Q3VzdG9tU2V0dXBGdW5jKGJlZ2luKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0sIG51bGwsIGN1c3RvbVNldHVwKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNsaWNlM0QgPSBmdW5jdGlvbiAoeCwgYmVnaW4sIHNpemUpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgc2xpY2VfZ3B1XzEuU2xpY2VQcm9ncmFtKHNpemUpO1xuICAgICAgICB2YXIgY3VzdG9tU2V0dXAgPSBwcm9ncmFtLmdldEN1c3RvbVNldHVwRnVuYyhiZWdpbik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdLCBudWxsLCBjdXN0b21TZXR1cCk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5zbGljZTREID0gZnVuY3Rpb24gKHgsIGJlZ2luLCBzaXplKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHNsaWNlX2dwdV8xLlNsaWNlUHJvZ3JhbShzaXplKTtcbiAgICAgICAgdmFyIGN1c3RvbVNldHVwID0gcHJvZ3JhbS5nZXRDdXN0b21TZXR1cEZ1bmMoYmVnaW4pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSwgbnVsbCwgY3VzdG9tU2V0dXApO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuY29weTJEID0gZnVuY3Rpb24gKHNvdXJjZSwgc291cmNlQmVnaW5Sb3dDb2wsIHNvdXJjZVNpemVSb3dDb2wsIGRlc3QsIGRlc3RCZWdpblJvd0NvbCwgZGVzdFNpemVSb3dDb2wpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY29weV9ncHVfMS5Db3B5MkRQcm9ncmFtKHNvdXJjZVNpemVSb3dDb2xbMV0sIGRlc3RTaXplUm93Q29sWzFdKTtcbiAgICAgICAgdmFyIGN1c3RvbVNldHVwID0gcHJvZ3JhbS5nZXRDdXN0b21TZXR1cEZ1bmMoc291cmNlQmVnaW5Sb3dDb2wsIGRlc3RCZWdpblJvd0NvbCwgZGVzdFNpemVSb3dDb2wpO1xuICAgICAgICB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3NvdXJjZV0sIGRlc3QsIGN1c3RvbVNldHVwKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbmNhdDFEID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY29uY2F0X2dwdV8xLkNvbmNhdFByb2dyYW0oYS5zaGFwZSwgYi5zaGFwZSwgMCk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbmNhdDJEID0gZnVuY3Rpb24gKGEsIGIsIGF4aXMpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY29uY2F0X2dwdV8xLkNvbmNhdFByb2dyYW0oYS5zaGFwZSwgYi5zaGFwZSwgYXhpcyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbmNhdDNEID0gZnVuY3Rpb24gKGEsIGIsIGF4aXMpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY29uY2F0X2dwdV8xLkNvbmNhdFByb2dyYW0oYS5zaGFwZSwgYi5zaGFwZSwgYXhpcyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbmNhdDREID0gZnVuY3Rpb24gKGEsIGIsIGF4aXMpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY29uY2F0X2dwdV8xLkNvbmNhdFByb2dyYW0oYS5zaGFwZSwgYi5zaGFwZSwgYXhpcyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuTkVHKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUubWF0TXVsID0gZnVuY3Rpb24gKGEsIGIsIGFPcmllbnRhdGlvbiwgYk9yaWVudGF0aW9uKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IG11bG1hdF9ncHVfMS5NYXRNdWxQcm9ncmFtKGEuc2hhcGUsIGIuc2hhcGUsIGFPcmllbnRhdGlvbiwgYk9yaWVudGF0aW9uKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbYSwgYl0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUubXVsdGlwbHkgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBiaW5hcnlvcF9ncHVfMS5CaW5hcnlPcFByb2dyYW0oYmluYXJ5b3BfZ3B1Lk1VTCwgYS5zaGFwZSwgYi5zaGFwZSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmJhdGNoTm9ybWFsaXphdGlvbjJEID0gZnVuY3Rpb24gKHgsIG1lYW4sIHZhcmlhbmNlLCB2YXJpYW5jZUVwc2lsb24sIHNjYWxlLCBvZmZzZXQpIHtcbiAgICAgICAgdmFyIGlucHV0cyA9IFt4LCBtZWFuLCB2YXJpYW5jZV07XG4gICAgICAgIHZhciBvZmZzZXRTaGFwZSA9IG51bGw7XG4gICAgICAgIGlmIChvZmZzZXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgb2Zmc2V0U2hhcGUgPSBvZmZzZXQuc2hhcGU7XG4gICAgICAgICAgICBpbnB1dHMucHVzaChvZmZzZXQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzY2FsZVNoYXBlID0gbnVsbDtcbiAgICAgICAgaWYgKHNjYWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgIHNjYWxlU2hhcGUgPSBzY2FsZS5zaGFwZTtcbiAgICAgICAgICAgIGlucHV0cy5wdXNoKHNjYWxlKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBiYXRjaG5vcm1fZ3B1XzEuQmF0Y2hOb3JtUHJvZ3JhbSh4LnNoYXBlLCBtZWFuLnNoYXBlLCB2YXJpYW5jZS5zaGFwZSwgb2Zmc2V0U2hhcGUsIHNjYWxlU2hhcGUsIHZhcmlhbmNlRXBzaWxvbik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgaW5wdXRzKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmJhdGNoTm9ybWFsaXphdGlvbjNEID0gZnVuY3Rpb24gKHgsIG1lYW4sIHZhcmlhbmNlLCB2YXJpYW5jZUVwc2lsb24sIHNjYWxlLCBvZmZzZXQpIHtcbiAgICAgICAgdmFyIGlucHV0cyA9IFt4LCBtZWFuLCB2YXJpYW5jZV07XG4gICAgICAgIHZhciBvZmZzZXRTaGFwZSA9IG51bGw7XG4gICAgICAgIGlmIChvZmZzZXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgb2Zmc2V0U2hhcGUgPSBvZmZzZXQuc2hhcGU7XG4gICAgICAgICAgICBpbnB1dHMucHVzaChvZmZzZXQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzY2FsZVNoYXBlID0gbnVsbDtcbiAgICAgICAgaWYgKHNjYWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgIHNjYWxlU2hhcGUgPSBzY2FsZS5zaGFwZTtcbiAgICAgICAgICAgIGlucHV0cy5wdXNoKHNjYWxlKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBiYXRjaG5vcm1fZ3B1XzEuQmF0Y2hOb3JtUHJvZ3JhbSh4LnNoYXBlLCBtZWFuLnNoYXBlLCB2YXJpYW5jZS5zaGFwZSwgb2Zmc2V0U2hhcGUsIHNjYWxlU2hhcGUsIHZhcmlhbmNlRXBzaWxvbik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgaW5wdXRzKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnRpbGUgPSBmdW5jdGlvbiAoeCwgcmVwcykge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB0aWxlX2dwdV8xLlRpbGVQcm9ncmFtKHguc2hhcGUsIHJlcHMpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS50cmFuc3Bvc2UgPSBmdW5jdGlvbiAoeCwgcGVybSkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB0cmFuc3Bvc2VfZ3B1XzEuVHJhbnNwb3NlUHJvZ3JhbSh4LnNoYXBlLCBwZXJtKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUucmVkdWNlID0gZnVuY3Rpb24gKHgsIHJlZHVjZVR5cGUsIGR0eXBlKSB7XG4gICAgICAgIHZhciBiYXRjaFNpemUgPSB4LnNoYXBlWzBdO1xuICAgICAgICB2YXIgaW5TaXplID0geC5zaGFwZVsxXTtcbiAgICAgICAgdmFyIHdpbmRvd1NpemUgPSByZWR1Y2VfdXRpbC5jb21wdXRlT3B0aW1hbFdpbmRvd1NpemUoaW5TaXplKTtcbiAgICAgICAgdmFyIHJlZHVjZUluZm8gPSB7IHdpbmRvd1NpemU6IHdpbmRvd1NpemUsIGluU2l6ZTogaW5TaXplLCBiYXRjaFNpemU6IGJhdGNoU2l6ZSB9O1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyByZWR1Y2VfZ3B1XzEuUmVkdWNlUHJvZ3JhbShyZWR1Y2VJbmZvLCByZWR1Y2VUeXBlKTtcbiAgICAgICAgdmFyIF9hID0gcHJvZ3JhbS5vdXRwdXRTaGFwZSwgcm93cyA9IF9hWzBdLCBjb2xzID0gX2FbMV07XG4gICAgICAgIHZhciBvdXRwdXQgPSB0aGlzLm1ha2VPdXRwdXRBcnJheShwcm9ncmFtLm91dHB1dFNoYXBlLCBkdHlwZSkuYXMyRChyb3dzLCBjb2xzKTtcbiAgICAgICAgdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSwgb3V0cHV0KTtcbiAgICAgICAgaWYgKG91dHB1dC5zaGFwZVsxXSA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5yZWR1Y2Uob3V0cHV0LCByZWR1Y2VUeXBlLCBkdHlwZSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5hcmdSZWR1Y2UgPSBmdW5jdGlvbiAoeCwgcmVkdWNlVHlwZSwgYmVzdEluZGljZXNBKSB7XG4gICAgICAgIGlmIChiZXN0SW5kaWNlc0EgPT09IHZvaWQgMCkgeyBiZXN0SW5kaWNlc0EgPSBudWxsOyB9XG4gICAgICAgIHZhciBiYXRjaFNpemUgPSB4LnNoYXBlWzBdO1xuICAgICAgICB2YXIgaW5TaXplID0geC5zaGFwZVsxXTtcbiAgICAgICAgaWYgKGJlc3RJbmRpY2VzQSAhPSBudWxsKSB7XG4gICAgICAgICAgICBiYXRjaFNpemUgPSBiZXN0SW5kaWNlc0Euc2hhcGVbMF07XG4gICAgICAgICAgICBpblNpemUgPSBiZXN0SW5kaWNlc0Euc2hhcGVbMV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHdpbmRvd1NpemUgPSByZWR1Y2VfdXRpbC5jb21wdXRlT3B0aW1hbFdpbmRvd1NpemUoaW5TaXplKTtcbiAgICAgICAgdmFyIHJlZHVjZUluZm8gPSB7IHdpbmRvd1NpemU6IHdpbmRvd1NpemUsIGluU2l6ZTogaW5TaXplLCBiYXRjaFNpemU6IGJhdGNoU2l6ZSB9O1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBhcmdtaW5tYXhfZ3B1XzEuQXJnTWluTWF4UHJvZ3JhbShyZWR1Y2VJbmZvLCByZWR1Y2VUeXBlLCBiZXN0SW5kaWNlc0EgPT0gbnVsbCk7XG4gICAgICAgIHZhciBfYSA9IHByb2dyYW0ub3V0cHV0U2hhcGUsIHJvd3MgPSBfYVswXSwgY29scyA9IF9hWzFdO1xuICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5tYWtlT3V0cHV0QXJyYXkocHJvZ3JhbS5vdXRwdXRTaGFwZSwgJ2ludDMyJykuYXMyRChyb3dzLCBjb2xzKTtcbiAgICAgICAgdmFyIGlucHV0cyA9IFt4XTtcbiAgICAgICAgaWYgKGJlc3RJbmRpY2VzQSAhPSBudWxsKSB7XG4gICAgICAgICAgICBpbnB1dHMucHVzaChiZXN0SW5kaWNlc0EpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBpbnB1dHMsIG91dHB1dCk7XG4gICAgICAgIGlmIChvdXRwdXQuc2hhcGVbMV0gPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXJnUmVkdWNlKHgsIHJlZHVjZVR5cGUsIG91dHB1dCk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5zdW0gPSBmdW5jdGlvbiAoeCwgYXhlcykge1xuICAgICAgICBheGlzX3V0aWwuYXNzZXJ0QXhlc0FyZUlubmVyTW9zdERpbXMoJ3N1bScsIGF4ZXMsIHgucmFuayk7XG4gICAgICAgIHZhciBfYSA9IGF4aXNfdXRpbC5jb21wdXRlT3V0QW5kUmVkdWNlU2hhcGVzKHguc2hhcGUsIGF4ZXMpLCBvdXRTaGFwZSA9IF9hWzBdLCByZWR1Y2VTaGFwZSA9IF9hWzFdO1xuICAgICAgICB2YXIgaW5TaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKHJlZHVjZVNoYXBlKTtcbiAgICAgICAgdmFyIGEyRCA9IHguYXMyRCgtMSwgaW5TaXplKTtcbiAgICAgICAgdmFyIG91dHB1dERUeXBlID0gdHlwZXNfMS5TdW1UeXBlc01hcFt4LmR0eXBlXTtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVkdWNlKGEyRCwgJ3N1bScsIG91dHB1dERUeXBlKS5yZXNoYXBlKG91dFNoYXBlKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmFyZ01pbiA9IGZ1bmN0aW9uICh4LCBheGVzKSB7XG4gICAgICAgIGF4aXNfdXRpbC5hc3NlcnRBeGVzQXJlSW5uZXJNb3N0RGltcygnYXJnTWluJywgYXhlcywgeC5yYW5rKTtcbiAgICAgICAgdmFyIF9hID0gYXhpc191dGlsLmNvbXB1dGVPdXRBbmRSZWR1Y2VTaGFwZXMoeC5zaGFwZSwgYXhlcyksIG91dFNoYXBlID0gX2FbMF0sIHJlZHVjZVNoYXBlID0gX2FbMV07XG4gICAgICAgIHZhciBpblNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUocmVkdWNlU2hhcGUpO1xuICAgICAgICB2YXIgYTJEID0geC5hczJEKC0xLCBpblNpemUpO1xuICAgICAgICByZXR1cm4gdGhpcy5hcmdSZWR1Y2UoYTJELCAnbWluJykucmVzaGFwZShvdXRTaGFwZSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5hcmdNYXggPSBmdW5jdGlvbiAoeCwgYXhlcykge1xuICAgICAgICBheGlzX3V0aWwuYXNzZXJ0QXhlc0FyZUlubmVyTW9zdERpbXMoJ2FyZ01heCcsIGF4ZXMsIHgucmFuayk7XG4gICAgICAgIHZhciBfYSA9IGF4aXNfdXRpbC5jb21wdXRlT3V0QW5kUmVkdWNlU2hhcGVzKHguc2hhcGUsIGF4ZXMpLCBvdXRTaGFwZSA9IF9hWzBdLCByZWR1Y2VTaGFwZSA9IF9hWzFdO1xuICAgICAgICB2YXIgaW5TaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKHJlZHVjZVNoYXBlKTtcbiAgICAgICAgdmFyIGEyRCA9IHguYXMyRCgtMSwgaW5TaXplKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXJnUmVkdWNlKGEyRCwgJ21heCcpLnJlc2hhcGUob3V0U2hhcGUpO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuZXF1YWwgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBiaW5hcnlvcF9ncHVfMS5CaW5hcnlPcFByb2dyYW0oYmluYXJ5b3BfZ3B1LkVRVUFMLCBhLnNoYXBlLCBiLnNoYXBlKTtcbiAgICAgICAgdmFyIG91dHB1dCA9IHRoaXMubWFrZU91dHB1dEFycmF5KHByb2dyYW0ub3V0cHV0U2hhcGUsICdib29sJyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdLCBvdXRwdXQpO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUudG9wS1ZhbHVlcyA9IGZ1bmN0aW9uICh4LCBrKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndG9wS1ZhbHVlcyBHUFUgbm90IHlldCBpbXBsZW1lbnRlZCEnKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnRvcEtJbmRpY2VzID0gZnVuY3Rpb24gKHgsIGspIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0b3BLSW5kaWNlcyBHUFUgbm90IHlldCBpbXBsZW1lbnRlZCEnKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm1pbiA9IGZ1bmN0aW9uICh4LCBheGVzKSB7XG4gICAgICAgIGF4aXNfdXRpbC5hc3NlcnRBeGVzQXJlSW5uZXJNb3N0RGltcygnbWluJywgYXhlcywgeC5yYW5rKTtcbiAgICAgICAgdmFyIF9hID0gYXhpc191dGlsLmNvbXB1dGVPdXRBbmRSZWR1Y2VTaGFwZXMoeC5zaGFwZSwgYXhlcyksIG91dFNoYXBlID0gX2FbMF0sIHJlZHVjZVNoYXBlID0gX2FbMV07XG4gICAgICAgIHZhciBpblNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUocmVkdWNlU2hhcGUpO1xuICAgICAgICB2YXIgYTJEID0geC5hczJEKC0xLCBpblNpemUpO1xuICAgICAgICByZXR1cm4gdGhpcy5yZWR1Y2UoYTJELCAnbWluJywgYTJELmR0eXBlKS5yZXNoYXBlKG91dFNoYXBlKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm1heCA9IGZ1bmN0aW9uICh4LCBheGVzKSB7XG4gICAgICAgIGF4aXNfdXRpbC5hc3NlcnRBeGVzQXJlSW5uZXJNb3N0RGltcygnbWF4JywgYXhlcywgeC5yYW5rKTtcbiAgICAgICAgdmFyIF9hID0gYXhpc191dGlsLmNvbXB1dGVPdXRBbmRSZWR1Y2VTaGFwZXMoeC5zaGFwZSwgYXhlcyksIG91dFNoYXBlID0gX2FbMF0sIHJlZHVjZVNoYXBlID0gX2FbMV07XG4gICAgICAgIHZhciBpblNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUocmVkdWNlU2hhcGUpO1xuICAgICAgICB2YXIgYTJEID0geC5hczJEKC0xLCBpblNpemUpO1xuICAgICAgICByZXR1cm4gdGhpcy5yZWR1Y2UoYTJELCAnbWF4JywgYTJELmR0eXBlKS5yZXNoYXBlKG91dFNoYXBlKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmRpdmlkZSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IGJpbmFyeW9wX2dwdV8xLkJpbmFyeU9wUHJvZ3JhbShiaW5hcnlvcF9ncHUuRElWLCBhLnNoYXBlLCBiLnNoYXBlKTtcbiAgICAgICAgdmFyIG91dHB1dCA9IHRoaXMubWFrZU91dHB1dEFycmF5KHByb2dyYW0ub3V0cHV0U2hhcGUsICdmbG9hdDMyJyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2EsIGJdLCBvdXRwdXQpO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgYmluYXJ5b3BfZ3B1XzEuQmluYXJ5T3BQcm9ncmFtKGJpbmFyeW9wX2dwdS5BREQsIGEuc2hhcGUsIGIuc2hhcGUpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFthLCBiXSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5zdWJ0cmFjdCA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IGJpbmFyeW9wX2dwdV8xLkJpbmFyeU9wUHJvZ3JhbShiaW5hcnlvcF9ncHUuU1VCLCBhLnNoYXBlLCBiLnNoYXBlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbYSwgYl0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUucG93ID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgYmluYXJ5b3BfZ3B1XzEuQmluYXJ5T3BQcm9ncmFtKGJpbmFyeW9wX2dwdS5QT1csIGEuc2hhcGUsIGIuc2hhcGUpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFthLCBiXSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5jZWlsID0gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5DRUlMKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuZmxvb3IgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLkZMT09SKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuZXhwID0gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5FWFApO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5sb2cgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLkxPRyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNxcnQgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlNRUlQpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5zcXVhcmUgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlNRVUFSRSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnJlbHUgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlJFTFUpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5lbHUgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLkVMVSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmVsdURlciA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuRUxVX0RFUik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNlbHUgPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlNFTFUpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5sZWFreVJlbHUgPSBmdW5jdGlvbiAoeCwgYWxwaGEpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5MRUFLWV9SRUxVKGFscGhhKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNsaXAgPSBmdW5jdGlvbiAoeCwgbWluLCBtYXgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgY2xpcF9ncHVfMS5DbGlwUHJvZ3JhbSh4LnNoYXBlLCBtaW4sIG1heCk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmFicyA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuQUJTKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuc2lnbW9pZCA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuU0lHTU9JRCk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNpbiA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuU0lOKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuY29zID0gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5DT1MpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS50YW4gPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlRBTik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmFzaW4gPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLkFTSU4pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5hY29zID0gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5BQ09TKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuYXRhbiA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuQVRBTik7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnNpbmggPSBmdW5jdGlvbiAoeCkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyB1bmFyeW9wX2dwdV8xLlVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIHVuYXJ5X29wLlNJTkgpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5jb3NoID0gZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5DT1NIKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUudGFuaCA9IGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHVuYXJ5b3BfZ3B1XzEuVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgdW5hcnlfb3AuVEFOSCk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLnN0ZXAgPSBmdW5jdGlvbiAoeCwgYWxwaGEpIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgdW5hcnlvcF9ncHVfMS5VbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCB1bmFyeV9vcC5TVEVQKGFscGhhKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbnYyZCA9IGZ1bmN0aW9uICh4LCBmaWx0ZXIsIGJpYXMsIGNvbnZJbmZvKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IGNvbnZfZ3B1XzEuQ29udjJEUHJvZ3JhbShjb252SW5mbywgYmlhcyAhPSBudWxsKTtcbiAgICAgICAgdmFyIGlucHV0cyA9IGJpYXMgIT0gbnVsbCA/IFt4LCBmaWx0ZXIsIGJpYXNdIDogW3gsIGZpbHRlcl07XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgaW5wdXRzKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmNvbnYyZERlcklucHV0ID0gZnVuY3Rpb24gKGR5LCBmaWx0ZXIsIGNvbnZJbmZvKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IGNvbnZfYmFja3Byb3BfZ3B1XzEuQ29udjJERGVySW5wdXRQcm9ncmFtKGNvbnZJbmZvKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbZHksIGZpbHRlcl0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuY29udjJkRGVyRmlsdGVyID0gZnVuY3Rpb24gKHgsIGR5LCBjb252SW5mbykge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBjb252X2JhY2twcm9wX2dwdV8xLkNvbnYyRERlckZpbHRlclByb2dyYW0oY29udkluZm8pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4LCBkeV0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuY29udjJkRGVyQmlhcyA9IGZ1bmN0aW9uIChkeSkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBjb252X2JhY2twcm9wX2dwdV8xLkNvbnYyRERlckJpYXNQcm9ncmFtKGR5LnNoYXBlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbZHldKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmRlcHRod2lzZUNvbnYyRCA9IGZ1bmN0aW9uICh4LCBmaWx0ZXIsIGNvbnZJbmZvKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IGNvbnZfZ3B1X2RlcHRod2lzZV8xLkRlcHRod2lzZUNvbnYyRFByb2dyYW0oY29udkluZm8pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4LCBmaWx0ZXJdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm1heFBvb2wgPSBmdW5jdGlvbiAoeCwgY29udkluZm8pIHtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgcG9vbF9ncHVfMS5Qb29sMkRQcm9ncmFtKGNvbnZJbmZvLCAnbWF4JywgZmFsc2UpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFt4XSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5taW5Qb29sID0gZnVuY3Rpb24gKHgsIGNvbnZJbmZvKSB7XG4gICAgICAgIHZhciBwcm9ncmFtID0gbmV3IHBvb2xfZ3B1XzEuUG9vbDJEUHJvZ3JhbShjb252SW5mbywgJ21pbicsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUuYXZnUG9vbCA9IGZ1bmN0aW9uICh4LCBjb252SW5mbykge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBwb29sX2dwdV8xLlBvb2wyRFByb2dyYW0oY29udkluZm8sICdhdmcnLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW3hdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm1heFBvb2xCYWNrcHJvcCA9IGZ1bmN0aW9uIChkeSwgeCwgY29udkluZm8pIHtcbiAgICAgICAgdmFyIGdldFBvc2l0aW9ucyA9IHRydWU7XG4gICAgICAgIHZhciBtYXhQb29sUG9zaXRpb25zUHJvZ3JhbSA9IG5ldyBwb29sX2dwdV8xLlBvb2wyRFByb2dyYW0oY29udkluZm8sICdtYXgnLCBnZXRQb3NpdGlvbnMpO1xuICAgICAgICB2YXIgbWF4UG9vbFBvc2l0aW9ucyA9IHRoaXMuY29tcGlsZUFuZFJ1bihtYXhQb29sUG9zaXRpb25zUHJvZ3JhbSwgW3hdKTtcbiAgICAgICAgdmFyIG1heFBvb2xCYWNrUHJvcFByb2dyYW0gPSBuZXcgbWF4X3Bvb2xfYmFja3Byb3BfZ3B1XzEuTWF4UG9vbDJEQmFja3Byb3BQcm9ncmFtKGNvbnZJbmZvKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuY29tcGlsZUFuZFJ1bihtYXhQb29sQmFja1Byb3BQcm9ncmFtLCBbZHksIG1heFBvb2xQb3NpdGlvbnNdKTtcbiAgICAgICAgbWF4UG9vbFBvc2l0aW9ucy5kaXNwb3NlKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5yZXNpemVCaWxpbmVhcjNEID0gZnVuY3Rpb24gKHgsIG5ld1NoYXBlMkQsIGFsaWduQ29ybmVycykge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyByZXNpemVfYmlsaW5lYXJfZ3B1XzEuUmVzaXplQmlsaW5lYXIzRFByb2dyYW0oeC5zaGFwZSwgbmV3U2hhcGUyRCwgYWxpZ25Db3JuZXJzKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihwcm9ncmFtLCBbeF0pO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUubXVsdGlub21pYWwgPSBmdW5jdGlvbiAocHJvYnMsIG51bVNhbXBsZXMsIHNlZWQpIHtcbiAgICAgICAgdmFyIGJhdGNoU2l6ZSA9IHByb2JzLnNoYXBlWzBdO1xuICAgICAgICB2YXIgbnVtT3V0Y29tZXMgPSBwcm9icy5zaGFwZVsxXTtcbiAgICAgICAgdmFyIHByb2dyYW0gPSBuZXcgbXVsdGlub21pYWxfZ3B1XzEuTXVsdGlub21pYWxQcm9ncmFtKGJhdGNoU2l6ZSwgbnVtT3V0Y29tZXMsIG51bVNhbXBsZXMpO1xuICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5tYWtlT3V0cHV0QXJyYXkocHJvZ3JhbS5vdXRwdXRTaGFwZSwgJ2ludDMyJyk7XG4gICAgICAgIHZhciBjdXN0b21TZXR1cCA9IHByb2dyYW0uZ2V0Q3VzdG9tU2V0dXBGdW5jKHNlZWQpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHByb2dyYW0sIFtwcm9ic10sIG91dHB1dCwgY3VzdG9tU2V0dXApO1xuICAgIH07XG4gICAgTWF0aEJhY2tlbmRXZWJHTC5wcm90b3R5cGUub25lSG90ID0gZnVuY3Rpb24gKGluZGljZXMsIGRlcHRoLCBvblZhbHVlLCBvZmZWYWx1ZSkge1xuICAgICAgICB2YXIgcHJvZ3JhbSA9IG5ldyBvbmVob3RfZ3B1XzEuT25lSG90UHJvZ3JhbShpbmRpY2VzLnNpemUsIGRlcHRoLCBvblZhbHVlLCBvZmZWYWx1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocHJvZ3JhbSwgW2luZGljZXNdKTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLm1ha2VPdXRwdXRBcnJheSA9IGZ1bmN0aW9uIChzaGFwZSwgZHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIG5kYXJyYXlfMS5OREFycmF5Lm1ha2Uoc2hhcGUsIHt9LCBkdHlwZSk7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5jb21waWxlQW5kUnVuID0gZnVuY3Rpb24gKHByb2dyYW0sIGlucHV0cywgb3V0cHV0LCBjdXN0b21TZXR1cCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAob3V0cHV0ID09IG51bGwpIHtcbiAgICAgICAgICAgIG91dHB1dCA9IHRoaXMubWFrZU91dHB1dEFycmF5KHByb2dyYW0ub3V0cHV0U2hhcGUsIGlucHV0c1swXS5kdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlucHV0c0RhdGEgPSBpbnB1dHMubWFwKGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgYXJyYXk6IGlucHV0LCB0ZXhEYXRhOiBfdGhpcy50ZXhEYXRhW2lucHV0LmlkXSB9O1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIG91dHB1dERhdGEgPSB7IGFycmF5OiBvdXRwdXQsIHRleERhdGE6IHRoaXMudGV4RGF0YVtvdXRwdXQuaWRdIH07XG4gICAgICAgIHZhciBrZXkgPSBncGdwdV9tYXRoLm1ha2VTaGFkZXJLZXkocHJvZ3JhbSwgaW5wdXRzRGF0YSwgb3V0cHV0RGF0YSk7XG4gICAgICAgIHZhciBiaW5hcnkgPSB0aGlzLmdldEFuZFNhdmVCaW5hcnkoa2V5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZ3BncHVfbWF0aC5jb21waWxlUHJvZ3JhbShfdGhpcy5ncGdwdSwgcHJvZ3JhbSwgaW5wdXRzRGF0YSwgb3V0cHV0RGF0YSk7XG4gICAgICAgIH0pO1xuICAgICAgICBncGdwdV9tYXRoLnJ1blByb2dyYW0oYmluYXJ5LCBpbnB1dHNEYXRhLCBvdXRwdXREYXRhLCBjdXN0b21TZXR1cCk7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfTtcbiAgICBNYXRoQmFja2VuZFdlYkdMLnByb3RvdHlwZS5nZXRBbmRTYXZlQmluYXJ5ID0gZnVuY3Rpb24gKGtleSwgZ2V0QmluYXJ5KSB7XG4gICAgICAgIGlmICghKGtleSBpbiB0aGlzLmJpbmFyeUNhY2hlKSkge1xuICAgICAgICAgICAgdGhpcy5iaW5hcnlDYWNoZVtrZXldID0gZ2V0QmluYXJ5KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYmluYXJ5Q2FjaGVba2V5XTtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmdldFRleHR1cmVNYW5hZ2VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50ZXh0dXJlTWFuYWdlcjtcbiAgICB9O1xuICAgIE1hdGhCYWNrZW5kV2ViR0wucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmJpbmFyeUNhY2hlKSB7XG4gICAgICAgICAgICB0aGlzLmdwZ3B1LmRlbGV0ZVByb2dyYW0odGhpcy5iaW5hcnlDYWNoZVtrZXldLndlYkdMUHJvZ3JhbSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50ZXh0dXJlTWFuYWdlci5kaXNwb3NlKCk7XG4gICAgICAgIGlmICh0aGlzLmdwZ3B1Q3JlYXRlZExvY2FsbHkpIHtcbiAgICAgICAgICAgIHRoaXMuZ3BncHUuZGlzcG9zZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gTWF0aEJhY2tlbmRXZWJHTDtcbn0oKSk7XG5leHBvcnRzLk1hdGhCYWNrZW5kV2ViR0wgPSBNYXRoQmFja2VuZFdlYkdMO1xuYmFja2VuZF8xLkJBQ0tFTkRfUkVHSVNUUllbJ3dlYmdsJ10gPSBuZXcgTWF0aEJhY2tlbmRXZWJHTCgpO1xudmFyIE5EQXJyYXlNYXRoR1BVID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTkRBcnJheU1hdGhHUFUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTkRBcnJheU1hdGhHUFUoZ3BncHUsIHNhZmVNb2RlKSB7XG4gICAgICAgIGlmIChzYWZlTW9kZSA9PT0gdm9pZCAwKSB7IHNhZmVNb2RlID0gZmFsc2U7IH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG5ldyBNYXRoQmFja2VuZFdlYkdMKGdwZ3B1KSwgc2FmZU1vZGUpIHx8IHRoaXM7XG4gICAgfVxuICAgIE5EQXJyYXlNYXRoR1BVLnByb3RvdHlwZS5nZXRHUEdQVUNvbnRleHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhY2tlbmRFbmdpbmUuZ2V0QmFja2VuZCgpXG4gICAgICAgICAgICAuZ2V0R1BHUFVDb250ZXh0KCk7XG4gICAgfTtcbiAgICBOREFycmF5TWF0aEdQVS5wcm90b3R5cGUuZ2V0VGV4dHVyZU1hbmFnZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhY2tlbmRFbmdpbmUuZ2V0QmFja2VuZCgpXG4gICAgICAgICAgICAuZ2V0VGV4dHVyZU1hbmFnZXIoKTtcbiAgICB9O1xuICAgIHJldHVybiBOREFycmF5TWF0aEdQVTtcbn0obWF0aF8xLk5EQXJyYXlNYXRoKSk7XG5leHBvcnRzLk5EQXJyYXlNYXRoR1BVID0gTkRBcnJheU1hdGhHUFU7XG5mdW5jdGlvbiBmbG9hdDMyVG9UeXBlZEFycmF5KGEsIGR0eXBlKSB7XG4gICAgaWYgKGR0eXBlID09PSAnZmxvYXQzMicpIHtcbiAgICAgICAgcmV0dXJuIGE7XG4gICAgfVxuICAgIGVsc2UgaWYgKGR0eXBlID09PSAnaW50MzInIHx8IGR0eXBlID09PSAnYm9vbCcpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IChkdHlwZSA9PT0gJ2ludDMyJykgPyBuZXcgSW50MzJBcnJheShhLmxlbmd0aCkgOlxuICAgICAgICAgICAgbmV3IFVpbnQ4QXJyYXkoYS5sZW5ndGgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIHZhbCA9IGFbaV07XG4gICAgICAgICAgICB2YWwgPSBpc05hTih2YWwpID8gdXRpbC5nZXROYU4oZHR5cGUpIDogTWF0aC5yb3VuZCh2YWwpO1xuICAgICAgICAgICAgcmVzdWx0W2ldID0gdmFsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGR0eXBlIFwiICsgZHR5cGUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHR5cGVkQXJyYXlUb0Zsb2F0MzIoYSwgZHR5cGUpIHtcbiAgICBpZiAoYSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkge1xuICAgICAgICByZXR1cm4gYTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciByZXMgPSBuZXcgRmxvYXQzMkFycmF5KGEubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciB2YWwgPSBhW2ldO1xuICAgICAgICAgICAgcmVzW2ldID0gdXRpbC5pc1ZhbE5hTih2YWwsIGR0eXBlKSA/IE5hTiA6IHZhbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/backend_webgl.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/kernel_registry.js":
/*!**********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/kernel_registry.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar KERNEL_METHODS = {\n    MatMul: function (backend, config) {\n        return backend.matMul(config.inputs.a, config.inputs.b, config.args.aOrientation, config.args.bOrientation);\n    },\n    Clone: function (backend, config) {\n        return backend.clone(config.inputs.x);\n    },\n    Slice1D: function (backend, config) {\n        return backend.slice1D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice2D: function (backend, config) {\n        return backend.slice2D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice3D: function (backend, config) {\n        return backend.slice3D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Slice4D: function (backend, config) {\n        return backend.slice4D(config.inputs.x, config.args.begin, config.args.size);\n    },\n    Concat1D: function (backend, config) {\n        return backend.concat1D(config.inputs.a, config.inputs.b);\n    },\n    Concat2D: function (backend, config) {\n        return backend.concat2D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Concat3D: function (backend, config) {\n        return backend.concat3D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Concat4D: function (backend, config) {\n        return backend.concat4D(config.inputs.a, config.inputs.b, config.args.axis);\n    },\n    Neg: function (backend, config) {\n        return backend.neg(config.inputs.x);\n    },\n    Add: function (backend, config) {\n        return backend.add(config.inputs.a, config.inputs.b);\n    },\n    Sub: function (backend, config) {\n        return backend.subtract(config.inputs.a, config.inputs.b);\n    },\n    Mul: function (backend, config) {\n        return backend.multiply(config.inputs.a, config.inputs.b);\n    },\n    Div: function (backend, config) {\n        return backend.divide(config.inputs.a, config.inputs.b);\n    },\n    Sum: function (backend, config) {\n        return backend.sum(config.inputs.x, config.args.axes);\n    },\n    ArgMax: function (backend, config) {\n        return backend.argMax(config.inputs.x, config.args.axes);\n    },\n    ArgMin: function (backend, config) {\n        return backend.argMin(config.inputs.x, config.args.axes);\n    },\n    Equal: function (backend, config) {\n        return backend.equal(config.inputs.a, config.inputs.b);\n    },\n    TopKValues: function (backend, config) {\n        return backend.topKValues(config.inputs.x, config.args.k);\n    },\n    TopKIndices: function (backend, config) {\n        return backend.topKIndices(config.inputs.x, config.args.k);\n    },\n    Min: function (backend, config) {\n        return backend.min(config.inputs.x, config.args.axes);\n    },\n    Max: function (backend, config) {\n        return backend.max(config.inputs.x, config.args.axes);\n    },\n    Ceil: function (backend, config) {\n        return backend.ceil(config.inputs.x);\n    },\n    Floor: function (backend, config) {\n        return backend.floor(config.inputs.x);\n    },\n    Pow: function (backend, config) {\n        return backend.pow(config.inputs.a, config.inputs.b);\n    },\n    Exp: function (backend, config) {\n        return backend.exp(config.inputs.x);\n    },\n    Log: function (backend, config) {\n        return backend.log(config.inputs.x);\n    },\n    Sqrt: function (backend, config) {\n        return backend.sqrt(config.inputs.x);\n    },\n    Square: function (backend, config) {\n        return backend.square(config.inputs.x);\n    },\n    Relu: function (backend, config) {\n        return backend.relu(config.inputs.x);\n    },\n    LeakyRelu: function (backend, config) {\n        return backend.leakyRelu(config.inputs.x, config.args.alpha);\n    },\n    Elu: function (backend, config) {\n        return backend.elu(config.inputs.x);\n    },\n    EluDer: function (backend, config) {\n        return backend.eluDer(config.inputs.x);\n    },\n    Selu: function (backend, config) {\n        return backend.selu(config.inputs.x);\n    },\n    Abs: function (backend, config) {\n        return backend.abs(config.inputs.x);\n    },\n    Sigmoid: function (backend, config) {\n        return backend.sigmoid(config.inputs.x);\n    },\n    Step: function (backend, config) {\n        return backend.step(config.inputs.x, config.args.alpha);\n    },\n    Sin: function (backend, config) {\n        return backend.sin(config.inputs.x);\n    },\n    Cos: function (backend, config) {\n        return backend.cos(config.inputs.x);\n    },\n    Tan: function (backend, config) {\n        return backend.tan(config.inputs.x);\n    },\n    Asin: function (backend, config) {\n        return backend.asin(config.inputs.x);\n    },\n    Acos: function (backend, config) {\n        return backend.acos(config.inputs.x);\n    },\n    Atan: function (backend, config) {\n        return backend.atan(config.inputs.x);\n    },\n    Sinh: function (backend, config) {\n        return backend.sinh(config.inputs.x);\n    },\n    Cosh: function (backend, config) {\n        return backend.cosh(config.inputs.x);\n    },\n    Tanh: function (backend, config) {\n        return backend.tanh(config.inputs.x);\n    },\n    Clip: function (backend, config) {\n        return backend.clip(config.inputs.x, config.args.min, config.args.max);\n    },\n    Transpose: function (backend, config) {\n        return backend.transpose(config.inputs.x, config.args.perm);\n    },\n    Tile: function (backend, config) {\n        return backend.tile(config.inputs.x, config.args.reps);\n    },\n    Conv2D: function (backend, config) {\n        return backend.conv2d(config.inputs.x, config.inputs.filter, config.inputs.bias, config.args.convInfo);\n    },\n    Conv2DDerInput: function (backend, config) {\n        return backend.conv2dDerInput(config.inputs.dy, config.inputs.filter, config.args.convInfo);\n    },\n    Conv2DDerFilter: function (backend, config) {\n        return backend.conv2dDerFilter(config.inputs.x, config.inputs.dy, config.args.convInfo);\n    },\n    Conv2DDerBias: function (backend, config) {\n        return backend.conv2dDerBias(config.inputs.dy);\n    },\n    DepthwiseConv2D: function (backend, config) {\n        return backend.depthwiseConv2D(config.inputs.x, config.inputs.filter, config.args.convInfo);\n    },\n    MaxPool: function (backend, config) {\n        return backend.maxPool(config.inputs.x, config.args.convInfo);\n    },\n    MaxPoolBackprop: function (backend, config) {\n        return backend.maxPoolBackprop(config.inputs.dy, config.inputs.x, config.args.convInfo);\n    },\n    AvgPool: function (backend, config) {\n        return backend.avgPool(config.inputs.x, config.args.convInfo);\n    },\n    MinPool: function (backend, config) {\n        return backend.minPool(config.inputs.x, config.args.convInfo);\n    },\n    ResizeBilinear3D: function (backend, config) {\n        return backend.resizeBilinear3D(config.inputs.x, config.args.newShape2D, config.args.alignCorners);\n    },\n    BatchNorm3D: function (backend, config) {\n        return backend.batchNormalization3D(config.inputs.x, config.inputs.mean, config.inputs.variance, config.args.varianceEpsilon, config.inputs.scale, config.inputs.offset);\n    },\n    BatchNorm2D: function (backend, config) {\n        return backend.batchNormalization2D(config.inputs.x, config.inputs.mean, config.inputs.variance, config.args.varianceEpsilon, config.inputs.scale, config.inputs.offset);\n    },\n    Multinomial: function (backend, config) {\n        return backend.multinomial(config.inputs.probs, config.args.numSamples, config.args.seed);\n    },\n    OneHot: function (backend, config) {\n        return backend.oneHot(config.inputs.indices, config.args.depth, config.args.onValue, config.args.offValue);\n    }\n};\nfunction executeKernel(kernelName, backend, config) {\n    return KERNEL_METHODS[kernelName](backend, config);\n}\nexports.executeKernel = executeKernel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/kernel_registry.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/types/matmul.js":
/*!*******************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/types/matmul.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MatrixOrientation;\n(function (MatrixOrientation) {\n    MatrixOrientation[MatrixOrientation[\"REGULAR\"] = 0] = \"REGULAR\";\n    MatrixOrientation[MatrixOrientation[\"TRANSPOSED\"] = 1] = \"TRANSPOSED\";\n})(MatrixOrientation = exports.MatrixOrientation || (exports.MatrixOrientation = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy90eXBlcy9tYXRtdWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy90eXBlcy9tYXRtdWwuanM/NmY2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBNYXRyaXhPcmllbnRhdGlvbjtcbihmdW5jdGlvbiAoTWF0cml4T3JpZW50YXRpb24pIHtcbiAgICBNYXRyaXhPcmllbnRhdGlvbltNYXRyaXhPcmllbnRhdGlvbltcIlJFR1VMQVJcIl0gPSAwXSA9IFwiUkVHVUxBUlwiO1xuICAgIE1hdHJpeE9yaWVudGF0aW9uW01hdHJpeE9yaWVudGF0aW9uW1wiVFJBTlNQT1NFRFwiXSA9IDFdID0gXCJUUkFOU1BPU0VEXCI7XG59KShNYXRyaXhPcmllbnRhdGlvbiA9IGV4cG9ydHMuTWF0cml4T3JpZW50YXRpb24gfHwgKGV4cG9ydHMuTWF0cml4T3JpZW50YXRpb24gPSB7fSkpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/types/matmul.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArgMinMaxProgram = (function () {\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        var compOp = (op === 'max') ? '>' : '<';\n        var indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = 0;\\n        float bestValue = getA(batch, inOffset);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (isNaN(candidate)) {\\n            setOutput(candidate);\\n            return;\\n          }\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n    }\n    return ArgMinMaxProgram;\n}());\nexports.ArgMinMaxProgram = ArgMinMaxProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9hcmdtaW5tYXhfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvYXJnbWlubWF4X2dwdS5qcz8xMDM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIEFyZ01pbk1heFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFyZ01pbk1heFByb2dyYW0ocmVkdWNlSW5mbywgb3AsIGZpcnN0UGFzcykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ0EnXTtcbiAgICAgICAgdmFyIHdpbmRvd1NpemUgPSByZWR1Y2VJbmZvLndpbmRvd1NpemU7XG4gICAgICAgIHZhciBiYXRjaFNpemUgPSByZWR1Y2VJbmZvLmJhdGNoU2l6ZTtcbiAgICAgICAgdmFyIGluU2l6ZSA9IHJlZHVjZUluZm8uaW5TaXplO1xuICAgICAgICB2YXIgb3V0U2l6ZSA9IE1hdGguY2VpbChpblNpemUgLyB3aW5kb3dTaXplKTtcbiAgICAgICAgaWYgKCFmaXJzdFBhc3MpIHtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKCdiZXN0SW5kaWNlc0EnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gW2JhdGNoU2l6ZSwgb3V0U2l6ZV07XG4gICAgICAgIHZhciBjb21wT3AgPSAob3AgPT09ICdtYXgnKSA/ICc+JyA6ICc8JztcbiAgICAgICAgdmFyIGluZGV4U25pcHBldCA9IGZpcnN0UGFzcyA/XG4gICAgICAgICAgICAnaW5PZmZzZXQgKyBpOycgOlxuICAgICAgICAgICAgJ3JvdW5kKGdldEJlc3RJbmRpY2VzQShiYXRjaCwgaW5PZmZzZXQgKyBpKSk7JztcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgb3V0SWR4ID0gY29vcmRzWzFdO1xcbiAgICAgICAgaW50IGluT2Zmc2V0ID0gb3V0SWR4ICogXCIgKyB3aW5kb3dTaXplICsgXCI7XFxuXFxuICAgICAgICBpbnQgYmVzdEluZGV4ID0gMDtcXG4gICAgICAgIGZsb2F0IGJlc3RWYWx1ZSA9IGdldEEoYmF0Y2gsIGluT2Zmc2V0KTtcXG5cXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgXCIgKyB3aW5kb3dTaXplICsgXCI7IGkrKykge1xcbiAgICAgICAgICBpbnQgaW5JZHggPSBcIiArIGluZGV4U25pcHBldCArIFwiO1xcbiAgICAgICAgICBmbG9hdCBjYW5kaWRhdGUgPSBnZXRBKGJhdGNoLCBpbklkeCk7XFxuICAgICAgICAgIGlmIChpc05hTihjYW5kaWRhdGUpKSB7XFxuICAgICAgICAgICAgc2V0T3V0cHV0KGNhbmRpZGF0ZSk7XFxuICAgICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgICB9XFxuICAgICAgICAgIGlmIChjYW5kaWRhdGUgXCIgKyBjb21wT3AgKyBcIiBiZXN0VmFsdWUpIHtcXG4gICAgICAgICAgICBiZXN0VmFsdWUgPSBjYW5kaWRhdGU7XFxuICAgICAgICAgICAgYmVzdEluZGV4ID0gaW5JZHg7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChmbG9hdChiZXN0SW5kZXgpKTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICByZXR1cm4gQXJnTWluTWF4UHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkFyZ01pbk1heFByb2dyYW0gPSBBcmdNaW5NYXhQcm9ncmFtO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/argminmax_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = __webpack_require__(/*! ../../broadcast_util */ \"./node_modules/deeplearn/dist/math/broadcast_util.js\");\nvar BatchNormProgram = (function () {\n    function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.supportsBroadcasting = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + offsetSnippet + \";\\n        float scale = \" + scaleSnippet + \";\\n        float inv = scale / sqrt(variance + float(\" + varianceEpsilon + \"));\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n    }\n    return BatchNormProgram;\n}());\nexports.BatchNormProgram = BatchNormProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9iYXRjaG5vcm1fZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvYmF0Y2hub3JtX2dwdS5qcz85NjkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJyb2FkY2FzdF91dGlsID0gcmVxdWlyZShcIi4uLy4uL2Jyb2FkY2FzdF91dGlsXCIpO1xudmFyIEJhdGNoTm9ybVByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhdGNoTm9ybVByb2dyYW0oeFNoYXBlLCBtZWFuU2hhcGUsIHZhcmlhbmNlU2hhcGUsIG9mZnNldFNoYXBlLCBzY2FsZVNoYXBlLCB2YXJpYW5jZUVwc2lsb24pIHtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtdO1xuICAgICAgICB0aGlzLnN1cHBvcnRzQnJvYWRjYXN0aW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWyd4JywgJ21lYW4nLCAndmFyaWFuY2UnXTtcbiAgICAgICAgYnJvYWRjYXN0X3V0aWwuYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGUoeFNoYXBlLCBtZWFuU2hhcGUpO1xuICAgICAgICBicm9hZGNhc3RfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZSh4U2hhcGUsIHZhcmlhbmNlU2hhcGUpO1xuICAgICAgICB2YXIgb2Zmc2V0U25pcHBldCA9ICcwLjAnO1xuICAgICAgICBpZiAob2Zmc2V0U2hhcGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgYnJvYWRjYXN0X3V0aWwuYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGUoeFNoYXBlLCBvZmZzZXRTaGFwZSk7XG4gICAgICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMucHVzaCgnb2Zmc2V0Jyk7XG4gICAgICAgICAgICBvZmZzZXRTbmlwcGV0ID0gJ2dldE9mZnNldEF0T3V0Q29vcmRzKCknO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzY2FsZVNuaXBwZXQgPSAnMS4wJztcbiAgICAgICAgaWYgKHNjYWxlU2hhcGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgYnJvYWRjYXN0X3V0aWwuYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGUoeFNoYXBlLCBzY2FsZVNoYXBlKTtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKCdzY2FsZScpO1xuICAgICAgICAgICAgc2NhbGVTbmlwcGV0ID0gJ2dldFNjYWxlQXRPdXRDb29yZHMoKSc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IHhTaGFwZTtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgZmxvYXQgeCA9IGdldFhBdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgbWVhbiA9IGdldE1lYW5BdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgdmFyaWFuY2UgPSBnZXRWYXJpYW5jZUF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCBvZmZzZXQgPSBcIiArIG9mZnNldFNuaXBwZXQgKyBcIjtcXG4gICAgICAgIGZsb2F0IHNjYWxlID0gXCIgKyBzY2FsZVNuaXBwZXQgKyBcIjtcXG4gICAgICAgIGZsb2F0IGludiA9IHNjYWxlIC8gc3FydCh2YXJpYW5jZSArIGZsb2F0KFwiICsgdmFyaWFuY2VFcHNpbG9uICsgXCIpKTtcXG4gICAgICAgIHNldE91dHB1dCgoeCAtIG1lYW4pICogaW52ICsgb2Zmc2V0KTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICByZXR1cm4gQmF0Y2hOb3JtUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkJhdGNoTm9ybVByb2dyYW0gPSBCYXRjaE5vcm1Qcm9ncmFtO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/batchnorm_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = __webpack_require__(/*! ../../broadcast_util */ \"./node_modules/deeplearn/dist/math/broadcast_util.js\");\nexports.ADD = 'return a + b;';\nexports.SUB = 'return a - b;';\nexports.MUL = 'return a * b;';\nexports.DIV = 'return a / b;';\nexports.POW = \"\\n  return (round(mod(b, 2.0)) == 0 || round(mod(b, 2.0)) == 2) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nexports.EQUAL = \"\\n  if (isNaN(a)) return a;\\n  if (isNaN(b)) return b;\\n  return float(a == b);\\n\";\nvar BinaryOpProgram = (function () {\n    function BinaryOpProgram(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n    }\n    return BinaryOpProgram;\n}());\nexports.BinaryOpProgram = BinaryOpProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9iaW5hcnlvcF9ncHUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9iaW5hcnlvcF9ncHUuanM/YmYzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBicm9hZGNhc3RfdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi9icm9hZGNhc3RfdXRpbFwiKTtcbmV4cG9ydHMuQUREID0gJ3JldHVybiBhICsgYjsnO1xuZXhwb3J0cy5TVUIgPSAncmV0dXJuIGEgLSBiOyc7XG5leHBvcnRzLk1VTCA9ICdyZXR1cm4gYSAqIGI7JztcbmV4cG9ydHMuRElWID0gJ3JldHVybiBhIC8gYjsnO1xuZXhwb3J0cy5QT1cgPSBcIlxcbiAgcmV0dXJuIChyb3VuZChtb2QoYiwgMi4wKSkgPT0gMCB8fCByb3VuZChtb2QoYiwgMi4wKSkgPT0gMikgP1xcbiAgICAgIHBvdyhhYnMoYSksIGIpIDogc2lnbihhKSAqIHBvdyhhYnMoYSksIGIpO1xcblwiO1xuZXhwb3J0cy5FUVVBTCA9IFwiXFxuICBpZiAoaXNOYU4oYSkpIHJldHVybiBhO1xcbiAgaWYgKGlzTmFOKGIpKSByZXR1cm4gYjtcXG4gIHJldHVybiBmbG9hdChhID09IGIpO1xcblwiO1xudmFyIEJpbmFyeU9wUHJvZ3JhbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQmluYXJ5T3BQcm9ncmFtKG9wLCBhU2hhcGUsIGJTaGFwZSkge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ0EnLCAnQiddO1xuICAgICAgICB0aGlzLnN1cHBvcnRzQnJvYWRjYXN0aW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9XG4gICAgICAgICAgICBicm9hZGNhc3RfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZShhU2hhcGUsIGJTaGFwZSk7XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIGZsb2F0IGJpbmFyeU9wZXJhdGlvbihmbG9hdCBhLCBmbG9hdCBiKSB7XFxuICAgICAgICBcIiArIG9wICsgXCJcXG4gICAgICB9XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgZmxvYXQgYSA9IGdldEFBdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgYiA9IGdldEJBdE91dENvb3JkcygpO1xcbiAgICAgICAgc2V0T3V0cHV0KGJpbmFyeU9wZXJhdGlvbihhLCBiKSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIEJpbmFyeU9wUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkJpbmFyeU9wUHJvZ3JhbSA9IEJpbmFyeU9wUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/binaryop_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jbGlwX2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL2NsaXBfZ3B1LmpzP2Q3OTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgQ2xpcFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENsaXBQcm9ncmFtKGFTaGFwZSwgbWluLCBtYXgpIHtcbiAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWydBJ107XG4gICAgICAgIHRoaXMub3V0cHV0U2hhcGUgPSBhU2hhcGU7XG4gICAgICAgIHZhciBtaW5GaXhlZCA9IG1pbi50b0ZpeGVkKDIwKTtcbiAgICAgICAgdmFyIG1heEZpeGVkID0gbWF4LnRvRml4ZWQoMjApO1xuICAgICAgICB0aGlzLnVzZXJDb2RlID0gXCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBmbG9hdCB2YWx1ZSA9IGdldEFBdE91dENvb3JkcygpO1xcbiAgICAgICAgaWYgKGlzTmFOKHZhbHVlKSkge1xcbiAgICAgICAgICBzZXRPdXRwdXQodmFsdWUpO1xcbiAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuXFxuICAgICAgICBzZXRPdXRwdXQoY2xhbXAodmFsdWUsIFwiICsgbWluRml4ZWQgKyBcIiwgXCIgKyBtYXhGaXhlZCArIFwiKSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIENsaXBQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuQ2xpcFByb2dyYW0gPSBDbGlwUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/clip_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = __webpack_require__(/*! ../../concat_util */ \"./node_modules/deeplearn/dist/math/concat_util.js\");\nvar shader_compiler_1 = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\");\nvar ConcatProgram = (function () {\n    function ConcatProgram(aShape, bShape, axis) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = [];\n        var yAxes = ['yR', 'yC', 'yD', 'yW'];\n        var concatAxis = yAxes[axis];\n        this.outputShape = concat_util.computeOutShape(aShape, bShape, axis);\n        var dType = shader_compiler_1.getCoordsDataType(aShape.length);\n        var unpackSnippet = getUnpack(aShape.length);\n        var sampleCoords = getSampleCoords(aShape.length);\n        this.userCode = \"\\n      void main() {\\n        \" + dType + \" coords = getOutputCoords();\\n        \" + unpackSnippet + \"\\n\\n        float value = 0.0;\\n        if (\" + concatAxis + \" < \" + aShape[axis] + \") {\\n          value = getA(\" + sampleCoords + \");\\n        } else {\\n          \" + concatAxis + \" -= \" + aShape[axis] + \";\\n          value = getB(\" + sampleCoords + \");\\n        }\\n\\n        setOutput(value);\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}());\nexports.ConcatProgram = ConcatProgram;\nfunction getSampleCoords(rank) {\n    if (rank === 1) {\n        return 'yR';\n    }\n    else if (rank === 2) {\n        return 'yR, yC';\n    }\n    else if (rank === 3) {\n        return 'yR, yC, yD';\n    }\n    else if (rank === 4) {\n        return 'yR, yC, yD, yW';\n    }\n    else {\n        throw Error(\"Concat for rank \" + rank + \" is not yet supported\");\n    }\n}\nfunction getUnpack(rank) {\n    var res = rank === 1 ? 'int yR = coords;' : 'int yR = coords.x;';\n    if (rank > 1) {\n        res += '\\nint yC = coords.y;';\n    }\n    if (rank > 2) {\n        res += '\\nint yD = coords.z;';\n    }\n    if (rank > 3) {\n        res += '\\nint yW = coords.w;';\n    }\n    if (rank > 4) {\n        throw Error(\"Concat for rank \" + rank + \" is not yet supported\");\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb25jYXRfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvY29uY2F0X2dwdS5qcz85ODdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNvbmNhdF91dGlsID0gcmVxdWlyZShcIi4uLy4uL2NvbmNhdF91dGlsXCIpO1xudmFyIHNoYWRlcl9jb21waWxlcl8xID0gcmVxdWlyZShcIi4vc2hhZGVyX2NvbXBpbGVyXCIpO1xudmFyIENvbmNhdFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbmNhdFByb2dyYW0oYVNoYXBlLCBiU2hhcGUsIGF4aXMpIHtcbiAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWydBJywgJ0InXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtdO1xuICAgICAgICB2YXIgeUF4ZXMgPSBbJ3lSJywgJ3lDJywgJ3lEJywgJ3lXJ107XG4gICAgICAgIHZhciBjb25jYXRBeGlzID0geUF4ZXNbYXhpc107XG4gICAgICAgIHRoaXMub3V0cHV0U2hhcGUgPSBjb25jYXRfdXRpbC5jb21wdXRlT3V0U2hhcGUoYVNoYXBlLCBiU2hhcGUsIGF4aXMpO1xuICAgICAgICB2YXIgZFR5cGUgPSBzaGFkZXJfY29tcGlsZXJfMS5nZXRDb29yZHNEYXRhVHlwZShhU2hhcGUubGVuZ3RoKTtcbiAgICAgICAgdmFyIHVucGFja1NuaXBwZXQgPSBnZXRVbnBhY2soYVNoYXBlLmxlbmd0aCk7XG4gICAgICAgIHZhciBzYW1wbGVDb29yZHMgPSBnZXRTYW1wbGVDb29yZHMoYVNoYXBlLmxlbmd0aCk7XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIFwiICsgZFR5cGUgKyBcIiBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIFwiICsgdW5wYWNrU25pcHBldCArIFwiXFxuXFxuICAgICAgICBmbG9hdCB2YWx1ZSA9IDAuMDtcXG4gICAgICAgIGlmIChcIiArIGNvbmNhdEF4aXMgKyBcIiA8IFwiICsgYVNoYXBlW2F4aXNdICsgXCIpIHtcXG4gICAgICAgICAgdmFsdWUgPSBnZXRBKFwiICsgc2FtcGxlQ29vcmRzICsgXCIpO1xcbiAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgXCIgKyBjb25jYXRBeGlzICsgXCIgLT0gXCIgKyBhU2hhcGVbYXhpc10gKyBcIjtcXG4gICAgICAgICAgdmFsdWUgPSBnZXRCKFwiICsgc2FtcGxlQ29vcmRzICsgXCIpO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgc2V0T3V0cHV0KHZhbHVlKTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICByZXR1cm4gQ29uY2F0UHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkNvbmNhdFByb2dyYW0gPSBDb25jYXRQcm9ncmFtO1xuZnVuY3Rpb24gZ2V0U2FtcGxlQ29vcmRzKHJhbmspIHtcbiAgICBpZiAocmFuayA9PT0gMSkge1xuICAgICAgICByZXR1cm4gJ3lSJztcbiAgICB9XG4gICAgZWxzZSBpZiAocmFuayA9PT0gMikge1xuICAgICAgICByZXR1cm4gJ3lSLCB5Qyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJhbmsgPT09IDMpIHtcbiAgICAgICAgcmV0dXJuICd5UiwgeUMsIHlEJztcbiAgICB9XG4gICAgZWxzZSBpZiAocmFuayA9PT0gNCkge1xuICAgICAgICByZXR1cm4gJ3lSLCB5QywgeUQsIHlXJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQ29uY2F0IGZvciByYW5rIFwiICsgcmFuayArIFwiIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFVucGFjayhyYW5rKSB7XG4gICAgdmFyIHJlcyA9IHJhbmsgPT09IDEgPyAnaW50IHlSID0gY29vcmRzOycgOiAnaW50IHlSID0gY29vcmRzLng7JztcbiAgICBpZiAocmFuayA+IDEpIHtcbiAgICAgICAgcmVzICs9ICdcXG5pbnQgeUMgPSBjb29yZHMueTsnO1xuICAgIH1cbiAgICBpZiAocmFuayA+IDIpIHtcbiAgICAgICAgcmVzICs9ICdcXG5pbnQgeUQgPSBjb29yZHMuejsnO1xuICAgIH1cbiAgICBpZiAocmFuayA+IDMpIHtcbiAgICAgICAgcmVzICs9ICdcXG5pbnQgeVcgPSBjb29yZHMudzsnO1xuICAgIH1cbiAgICBpZiAocmFuayA+IDQpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJDb25jYXQgZm9yIHJhbmsgXCIgKyByYW5rICsgXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/concat_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js":
/*!******************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DDerFilterProgram = (function () {\n    function Conv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerFilterProgram;\n}());\nexports.Conv2DDerFilterProgram = Conv2DDerFilterProgram;\nvar Conv2DDerInputProgram = (function () {\n    function Conv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerInputProgram;\n}());\nexports.Conv2DDerInputProgram = Conv2DDerInputProgram;\nvar Conv2DDerBiasProgram = (function () {\n    function Conv2DDerBiasProgram(yShape) {\n        this.variableNames = ['dy'];\n        var batchSize = yShape[0], yNumRows = yShape[1], yNumCols = yShape[2], outputDepth = yShape[3];\n        this.outputShape = [outputDepth];\n        this.userCode = \"\\n      void main() {\\n        int d2 = getOutputCoords();\\n\\n        float derBias = 0.0;\\n        for (int b = 0; b < \" + batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + yNumRows + \"; yR++) {\\n            for (int yC = 0; yC < \" + yNumCols + \"; yC++) {\\n              derBias += getDy(b, yR, yC, d2);\\n            }\\n          }\\n        }\\n        setOutput(derBias);\\n      }\\n    \";\n    }\n    return Conv2DDerBiasProgram;\n}());\nexports.Conv2DDerBiasProgram = Conv2DDerBiasProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb252X2JhY2twcm9wX2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL2NvbnZfYmFja3Byb3BfZ3B1LmpzP2NlZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgQ29udjJERGVyRmlsdGVyUHJvZ3JhbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29udjJERGVyRmlsdGVyUHJvZ3JhbShjb252SW5mbykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ3gnLCAnZHknXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IGNvbnZJbmZvLmZpbHRlclNoYXBlO1xuICAgICAgICB2YXIgc3RyaWRlSGVpZ2h0ID0gY29udkluZm8uc3RyaWRlSGVpZ2h0O1xuICAgICAgICB2YXIgc3RyaWRlV2lkdGggPSBjb252SW5mby5zdHJpZGVXaWR0aDtcbiAgICAgICAgdmFyIHBhZFRvcCA9IGNvbnZJbmZvLnBhZEluZm8udG9wO1xuICAgICAgICB2YXIgcGFkTGVmdCA9IGNvbnZJbmZvLnBhZEluZm8ubGVmdDtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgd1IgPSBjb29yZHMueDtcXG4gICAgICAgIGludCB3QyA9IGNvb3Jkcy55O1xcbiAgICAgICAgaW50IGQxID0gY29vcmRzLno7XFxuICAgICAgICBpbnQgZDIgPSBjb29yZHMudztcXG5cXG4gICAgICAgIC8vIENvbnZvbHZlIHgoPywgPywgZDEpIHdpdGggZHkoOiwgOiwgZDIpIHRvIGdldCBkdyh3Uiwgd0MsIGQxLCBkMikuXFxuICAgICAgICAvLyA/ID0gdG8gYmUgZGV0ZXJtaW5lZC4gOiA9IGFjcm9zcyBhbGwgdmFsdWVzIGluIHRoYXQgYXhpcy5cXG4gICAgICAgIGZsb2F0IGRvdFByb2QgPSAwLjA7XFxuXFxuICAgICAgICBmb3IgKGludCBiID0gMDsgYiA8IFwiICsgY29udkluZm8uYmF0Y2hTaXplICsgXCI7IGIrKykge1xcbiAgICAgICAgICBmb3IgKGludCB5UiA9IDA7IHlSIDwgXCIgKyBjb252SW5mby5vdXRIZWlnaHQgKyBcIjsgeVIrKykge1xcbiAgICAgICAgICAgIGludCB4UiA9IHdSICsgeVIgKiBcIiArIHN0cmlkZUhlaWdodCArIFwiIC0gXCIgKyBwYWRUb3AgKyBcIjtcXG5cXG4gICAgICAgICAgICBpZiAoeFIgPCAwIHx8IHhSID49IFwiICsgY29udkluZm8uaW5IZWlnaHQgKyBcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZvciAoaW50IHlDID0gMDsgeUMgPCBcIiArIGNvbnZJbmZvLm91dFdpZHRoICsgXCI7IHlDKyspIHtcXG4gICAgICAgICAgICAgIGludCB4QyA9IHdDICsgeUMgKiBcIiArIHN0cmlkZVdpZHRoICsgXCIgLSBcIiArIHBhZExlZnQgKyBcIjtcXG5cXG4gICAgICAgICAgICAgIGlmICh4QyA8IDAgfHwgeEMgPj0gXCIgKyBjb252SW5mby5pbldpZHRoICsgXCIpIHtcXG4gICAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICBmbG9hdCBkeVZhbHVlID0gZ2V0RHkoYiwgeVIsIHlDLCBkMik7XFxuICAgICAgICAgICAgICBmbG9hdCB4VmFsdWUgPSBnZXRYKGIsIHhSLCB4QywgZDEpO1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPSAoeFZhbHVlICogZHlWYWx1ZSk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoZG90UHJvZCk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIENvbnYyRERlckZpbHRlclByb2dyYW07XG59KCkpO1xuZXhwb3J0cy5Db252MkREZXJGaWx0ZXJQcm9ncmFtID0gQ29udjJERGVyRmlsdGVyUHJvZ3JhbTtcbnZhciBDb252MkREZXJJbnB1dFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbnYyRERlcklucHV0UHJvZ3JhbShjb252SW5mbykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ2R5JywgJ1cnXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IGNvbnZJbmZvLmluU2hhcGU7XG4gICAgICAgIHZhciBmaWx0ZXJIZWlnaHQgPSBjb252SW5mby5maWx0ZXJIZWlnaHQ7XG4gICAgICAgIHZhciBmaWx0ZXJXaWR0aCA9IGNvbnZJbmZvLmZpbHRlcldpZHRoO1xuICAgICAgICB2YXIgc3RyaWRlSGVpZ2h0ID0gY29udkluZm8uc3RyaWRlSGVpZ2h0O1xuICAgICAgICB2YXIgc3RyaWRlV2lkdGggPSBjb252SW5mby5zdHJpZGVXaWR0aDtcbiAgICAgICAgdmFyIHBhZFRvcCA9IGZpbHRlckhlaWdodCAtIDEgLSBjb252SW5mby5wYWRJbmZvLnRvcDtcbiAgICAgICAgdmFyIHBhZExlZnQgPSBmaWx0ZXJXaWR0aCAtIDEgLSBjb252SW5mby5wYWRJbmZvLmxlZnQ7XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIiArIHBhZFRvcCArIFwiLCBcIiArIHBhZExlZnQgKyBcIik7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgZDEgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiBkeUNvcm5lciA9IGNvb3Jkcy55eiAtIHBhZHM7XFxuICAgICAgICBpbnQgZHlSQ29ybmVyID0gZHlDb3JuZXIueDtcXG4gICAgICAgIGludCBkeUNDb3JuZXIgPSBkeUNvcm5lci55O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgZHkoPywgPywgZDIpIHdpdGggdyg6LCA6LCBkMSwgZDIpIHRvIGNvbXB1dGUgZHgoeFIsIHhDLCBkMSkuXFxuICAgICAgICAvLyA/ID0gdG8gYmUgZGV0ZXJtaW5lZC4gOiA9IGFjcm9zcyBhbGwgdmFsdWVzIGluIHRoYXQgYXhpcy5cXG4gICAgICAgIGZsb2F0IGRvdFByb2QgPSAwLjA7XFxuICAgICAgICBmb3IgKGludCB3UiA9IDA7IHdSIDwgXCIgKyBmaWx0ZXJIZWlnaHQgKyBcIjsgd1IrKykge1xcbiAgICAgICAgICBmbG9hdCBkeVIgPSBmbG9hdChkeVJDb3JuZXIgKyB3UikgLyBcIiArIHN0cmlkZUhlaWdodCArIFwiLjA7XFxuXFxuICAgICAgICAgIGlmIChkeVIgPCAwLjAgfHwgZHlSID49IFwiICsgY29udkluZm8ub3V0SGVpZ2h0ICsgXCIuMCB8fCBmcmFjdChkeVIpID4gMC4wKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgaW50IGlkeVIgPSBpbnQoZHlSKTtcXG5cXG4gICAgICAgICAgaW50IHdSUGVybSA9IFwiICsgZmlsdGVySGVpZ2h0ICsgXCIgLSAxIC0gd1I7XFxuXFxuICAgICAgICAgIGZvciAoaW50IHdDID0gMDsgd0MgPCBcIiArIGZpbHRlcldpZHRoICsgXCI7IHdDKyspIHtcXG4gICAgICAgICAgICBmbG9hdCBkeUMgPSBmbG9hdChkeUNDb3JuZXIgKyB3QykgLyBcIiArIHN0cmlkZVdpZHRoICsgXCIuMDtcXG5cXG4gICAgICAgICAgICBpZiAoZHlDIDwgMC4wIHx8IGR5QyA+PSBcIiArIGNvbnZJbmZvLm91dFdpZHRoICsgXCIuMCB8fFxcbiAgICAgICAgICAgICAgICBmcmFjdChkeUMpID4gMC4wKSB7XFxuICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaW50IGlkeUMgPSBpbnQoZHlDKTtcXG5cXG4gICAgICAgICAgICBpbnQgd0NQZXJtID0gXCIgKyBmaWx0ZXJXaWR0aCArIFwiIC0gMSAtIHdDO1xcblxcbiAgICAgICAgICAgIGZvciAoaW50IGQyID0gMDsgZDIgPCBcIiArIGNvbnZJbmZvLm91dENoYW5uZWxzICsgXCI7IGQyKyspIHtcXG4gICAgICAgICAgICAgIGZsb2F0IHhWYWx1ZSA9IGdldER5KGJhdGNoLCBpZHlSLCBpZHlDLCBkMik7XFxuICAgICAgICAgICAgICBmbG9hdCB3VmFsdWUgPSBnZXRXKHdSUGVybSwgd0NQZXJtLCBkMSwgZDIpO1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPSB4VmFsdWUgKiB3VmFsdWU7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoZG90UHJvZCk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIENvbnYyRERlcklucHV0UHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkNvbnYyRERlcklucHV0UHJvZ3JhbSA9IENvbnYyRERlcklucHV0UHJvZ3JhbTtcbnZhciBDb252MkREZXJCaWFzUHJvZ3JhbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29udjJERGVyQmlhc1Byb2dyYW0oeVNoYXBlKSB7XG4gICAgICAgIHRoaXMudmFyaWFibGVOYW1lcyA9IFsnZHknXTtcbiAgICAgICAgdmFyIGJhdGNoU2l6ZSA9IHlTaGFwZVswXSwgeU51bVJvd3MgPSB5U2hhcGVbMV0sIHlOdW1Db2xzID0geVNoYXBlWzJdLCBvdXRwdXREZXB0aCA9IHlTaGFwZVszXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtvdXRwdXREZXB0aF07XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGludCBkMiA9IGdldE91dHB1dENvb3JkcygpO1xcblxcbiAgICAgICAgZmxvYXQgZGVyQmlhcyA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IGIgPSAwOyBiIDwgXCIgKyBiYXRjaFNpemUgKyBcIjsgYisrKSB7XFxuICAgICAgICAgIGZvciAoaW50IHlSID0gMDsgeVIgPCBcIiArIHlOdW1Sb3dzICsgXCI7IHlSKyspIHtcXG4gICAgICAgICAgICBmb3IgKGludCB5QyA9IDA7IHlDIDwgXCIgKyB5TnVtQ29scyArIFwiOyB5QysrKSB7XFxuICAgICAgICAgICAgICBkZXJCaWFzICs9IGdldER5KGIsIHlSLCB5QywgZDIpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRlckJpYXMpO1xcbiAgICAgIH1cXG4gICAgXCI7XG4gICAgfVxuICAgIHJldHVybiBDb252MkREZXJCaWFzUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkNvbnYyRERlckJpYXNQcm9ncmFtID0gQ29udjJERGVyQmlhc1Byb2dyYW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/conv_backprop_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DProgram = (function () {\n    function Conv2DProgram(convInfo, hasBias) {\n        this.variableNames = ['x', 'W'];\n        if (hasBias) {\n            this.variableNames.push('bias');\n        }\n        this.outputShape = convInfo.outShape;\n        var biasSnippet = hasBias ? 'dotProd += getBias(d2);' : '';\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC;\\n\\n            if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n              vec4 xValues = vec4(\\n                getX(batch, xR, xC, d1),\\n                getX(batch, xR, xC, d1 + 1),\\n                getX(batch, xR, xC, d1 + 2),\\n                getX(batch, xR, xC, d1 + 3)\\n              );\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              dotProd += dot(xValues, wValues);\\n            }\\n\\n            if (\" + (inputDepthVec4Remainder === 1) + \") {\\n              dotProd +=\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n            } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n              vec2 xValues = vec2(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n              );\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n              vec3 xValues = vec3(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n              );\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            }\\n          }\\n        }\\n        \" + biasSnippet + \"\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DProgram;\n}());\nexports.Conv2DProgram = Conv2DProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb252X2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL2NvbnZfZ3B1LmpzP2U4NjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgQ29udjJEUHJvZ3JhbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29udjJEUHJvZ3JhbShjb252SW5mbywgaGFzQmlhcykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ3gnLCAnVyddO1xuICAgICAgICBpZiAoaGFzQmlhcykge1xuICAgICAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzLnB1c2goJ2JpYXMnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gY29udkluZm8ub3V0U2hhcGU7XG4gICAgICAgIHZhciBiaWFzU25pcHBldCA9IGhhc0JpYXMgPyAnZG90UHJvZCArPSBnZXRCaWFzKGQyKTsnIDogJyc7XG4gICAgICAgIHZhciBwYWRUb3AgPSBjb252SW5mby5wYWRJbmZvLnRvcDtcbiAgICAgICAgdmFyIHBhZExlZnQgPSBjb252SW5mby5wYWRJbmZvLmxlZnQ7XG4gICAgICAgIHZhciBzdHJpZGVIZWlnaHQgPSBjb252SW5mby5zdHJpZGVIZWlnaHQ7XG4gICAgICAgIHZhciBzdHJpZGVXaWR0aCA9IGNvbnZJbmZvLnN0cmlkZVdpZHRoO1xuICAgICAgICB2YXIgZmlsdGVySGVpZ2h0ID0gY29udkluZm8uZmlsdGVySGVpZ2h0O1xuICAgICAgICB2YXIgZmlsdGVyV2lkdGggPSBjb252SW5mby5maWx0ZXJXaWR0aDtcbiAgICAgICAgdmFyIGlucHV0RGVwdGhOZWFyZXN0VmVjNCA9IE1hdGguZmxvb3IoY29udkluZm8uaW5DaGFubmVscyAvIDQpICogNDtcbiAgICAgICAgdmFyIGlucHV0RGVwdGhWZWM0UmVtYWluZGVyID0gY29udkluZm8uaW5DaGFubmVscyAlIDQ7XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIGNvbnN0IGl2ZWMyIHN0cmlkZXMgPSBpdmVjMihcIiArIHN0cmlkZUhlaWdodCArIFwiLCBcIiArIHN0cmlkZVdpZHRoICsgXCIpO1xcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIiArIHBhZFRvcCArIFwiLCBcIiArIHBhZExlZnQgKyBcIik7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgZDIgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiB4UkNDb3JuZXIgPSBjb29yZHMueXogKiBzdHJpZGVzIC0gcGFkcztcXG4gICAgICAgIGludCB4UkNvcm5lciA9IHhSQ0Nvcm5lci54O1xcbiAgICAgICAgaW50IHhDQ29ybmVyID0geFJDQ29ybmVyLnk7XFxuXFxuICAgICAgICAvLyBDb252b2x2ZSB4KD8sID8sIGQxKSB3aXRoIHcoOiwgOiwgZDEsIGQyKSB0byBnZXQgeSh5UiwgeUMsIGQyKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IHdSID0gMDsgd1IgPCBcIiArIGZpbHRlckhlaWdodCArIFwiOyB3UisrKSB7XFxuICAgICAgICAgIGludCB4UiA9IHhSQ29ybmVyICsgd1I7XFxuXFxuICAgICAgICAgIGlmICh4UiA8IDAgfHwgeFIgPj0gXCIgKyBjb252SW5mby5pbkhlaWdodCArIFwiKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgZm9yIChpbnQgd0MgPSAwOyB3QyA8IFwiICsgZmlsdGVyV2lkdGggKyBcIjsgd0MrKykge1xcbiAgICAgICAgICAgIGludCB4QyA9IHhDQ29ybmVyICsgd0M7XFxuXFxuICAgICAgICAgICAgaWYgKHhDIDwgMCB8fCB4QyA+PSBcIiArIGNvbnZJbmZvLmluV2lkdGggKyBcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZvciAoaW50IGQxID0gMDsgZDEgPCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiOyBkMSArPSA0KSB7XFxuICAgICAgICAgICAgICB2ZWM0IHhWYWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIGQxKSxcXG4gICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeFIsIHhDLCBkMSArIDEpLFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIGQxICsgMiksXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgZDEgKyAzKVxcbiAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICAgIHZlYzQgd1ZhbHVlcyA9IHZlYzQoXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBkMSwgZDIpLFxcbiAgICAgICAgICAgICAgICBnZXRXKHdSLCB3QywgZDEgKyAxLCBkMiksXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBkMSArIDIsIGQyKSxcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIGQxICsgMywgZDIpXFxuICAgICAgICAgICAgICApO1xcblxcbiAgICAgICAgICAgICAgZG90UHJvZCArPSBkb3QoeFZhbHVlcywgd1ZhbHVlcyk7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGlmIChcIiArIChpbnB1dERlcHRoVmVjNFJlbWFpbmRlciA9PT0gMSkgKyBcIikge1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPVxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIpICpcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIsIGQyKTtcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKFwiICsgKGlucHV0RGVwdGhWZWM0UmVtYWluZGVyID09PSAyKSArIFwiKSB7XFxuICAgICAgICAgICAgICB2ZWMyIHhWYWx1ZXMgPSB2ZWMyKFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIpLFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIgKyAxKVxcbiAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICAgIHZlYzIgd1ZhbHVlcyA9IHZlYzIoXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiLCBkMiksXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiICsgMSwgZDIpXFxuICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPSBkb3QoeFZhbHVlcywgd1ZhbHVlcyk7XFxuICAgICAgICAgICAgfSBlbHNlIGlmIChcIiArIChpbnB1dERlcHRoVmVjNFJlbWFpbmRlciA9PT0gMykgKyBcIikge1xcbiAgICAgICAgICAgICAgdmVjMyB4VmFsdWVzID0gdmVjMyhcXG4gICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeFIsIHhDLCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiKSxcXG4gICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeFIsIHhDLCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiICsgMSksXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgXCIgKyBpbnB1dERlcHRoTmVhcmVzdFZlYzQgKyBcIiArIDIpXFxuICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgdmVjMyB3VmFsdWVzID0gdmVjMyhcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIsIGQyKSxcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiICsgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgXCIgKyAxLCBkMiksXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBcIiArIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIFwiICsgMiwgZDIpXFxuICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPSBkb3QoeFZhbHVlcywgd1ZhbHVlcyk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBcIiArIGJpYXNTbmlwcGV0ICsgXCJcXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICByZXR1cm4gQ29udjJEUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLkNvbnYyRFByb2dyYW0gPSBDb252MkRQcm9ncmFtO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DProgram = (function () {\n    function DepthwiseConv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + channelMul + \";\\n        int q = d2 - d1 * \" + channelMul + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + xNumRows + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC;\\n\\n            if (xC < 0 || xC >= \" + xNumCols + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DProgram;\n}());\nexports.DepthwiseConv2DProgram = DepthwiseConv2DProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb252X2dwdV9kZXB0aHdpc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb252X2dwdV9kZXB0aHdpc2UuanM/Yzc4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBEZXB0aHdpc2VDb252MkRQcm9ncmFtID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEZXB0aHdpc2VDb252MkRQcm9ncmFtKGNvbnZJbmZvKSB7XG4gICAgICAgIHRoaXMudmFyaWFibGVOYW1lcyA9IFsneCcsICdXJ107XG4gICAgICAgIHRoaXMub3V0cHV0U2hhcGUgPSBjb252SW5mby5vdXRTaGFwZTtcbiAgICAgICAgdmFyIHhOdW1Sb3dzID0gY29udkluZm8uaW5IZWlnaHQ7XG4gICAgICAgIHZhciB4TnVtQ29scyA9IGNvbnZJbmZvLmluV2lkdGg7XG4gICAgICAgIHZhciBwYWRUb3AgPSBjb252SW5mby5wYWRJbmZvLnRvcDtcbiAgICAgICAgdmFyIHBhZExlZnQgPSBjb252SW5mby5wYWRJbmZvLmxlZnQ7XG4gICAgICAgIHZhciBzdHJpZGVIZWlnaHQgPSBjb252SW5mby5zdHJpZGVIZWlnaHQ7XG4gICAgICAgIHZhciBzdHJpZGVXaWR0aCA9IGNvbnZJbmZvLnN0cmlkZVdpZHRoO1xuICAgICAgICB2YXIgZmlsdGVySGVpZ2h0ID0gY29udkluZm8uZmlsdGVySGVpZ2h0O1xuICAgICAgICB2YXIgZmlsdGVyV2lkdGggPSBjb252SW5mby5maWx0ZXJXaWR0aDtcbiAgICAgICAgdmFyIGNoYW5uZWxNdWwgPSBjb252SW5mby5vdXRDaGFubmVscyAvIGNvbnZJbmZvLmluQ2hhbm5lbHM7XG4gICAgICAgIHRoaXMudXNlckNvZGUgPSBcIlxcbiAgICAgIGNvbnN0IGl2ZWMyIHN0cmlkZXMgPSBpdmVjMihcIiArIHN0cmlkZUhlaWdodCArIFwiLCBcIiArIHN0cmlkZVdpZHRoICsgXCIpO1xcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIiArIHBhZFRvcCArIFwiLCBcIiArIHBhZExlZnQgKyBcIik7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHMueDtcXG4gICAgICAgIGl2ZWMyIHhSQ0Nvcm5lciA9IGNvb3Jkcy55eiAqIHN0cmlkZXMgLSBwYWRzO1xcbiAgICAgICAgaW50IGQyID0gY29vcmRzLnc7XFxuICAgICAgICBpbnQgZDEgPSBkMiAvIFwiICsgY2hhbm5lbE11bCArIFwiO1xcbiAgICAgICAgaW50IHEgPSBkMiAtIGQxICogXCIgKyBjaGFubmVsTXVsICsgXCI7XFxuXFxuICAgICAgICBpbnQgeFJDb3JuZXIgPSB4UkNDb3JuZXIueDtcXG4gICAgICAgIGludCB4Q0Nvcm5lciA9IHhSQ0Nvcm5lci55O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgeCg/LCA/LCBkMSkgd2l0aCB3KDosIDosIGQxLCBxKSB0byBnZXQgeSh5UiwgeUMsIGQyKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG4gICAgICAgIC8vIFRPRE8oZHNtaWxrb3YpOiBGbGF0dGVuIHRoZSB0d28gZm9yIGxvb3BzIGFuZCB2ZWM0IHRoZSBvcGVyYXRpb25zLlxcbiAgICAgICAgZm9yIChpbnQgd1IgPSAwOyB3UiA8IFwiICsgZmlsdGVySGVpZ2h0ICsgXCI7IHdSKyspIHtcXG4gICAgICAgICAgaW50IHhSID0geFJDb3JuZXIgKyB3UjtcXG5cXG4gICAgICAgICAgaWYgKHhSIDwgMCB8fCB4UiA+PSBcIiArIHhOdW1Sb3dzICsgXCIpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgfVxcblxcbiAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIgKyBmaWx0ZXJXaWR0aCArIFwiOyB3QysrKSB7XFxuICAgICAgICAgICAgaW50IHhDID0geENDb3JuZXIgKyB3QztcXG5cXG4gICAgICAgICAgICBpZiAoeEMgPCAwIHx8IHhDID49IFwiICsgeE51bUNvbHMgKyBcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZsb2F0IHhWYWwgPSBnZXRYKGJhdGNoLCB4UiwgeEMsIGQxKTtcXG4gICAgICAgICAgICBmbG9hdCB3VmFsID0gZ2V0Vyh3Uiwgd0MsIGQxLCBxKTtcXG4gICAgICAgICAgICBkb3RQcm9kICs9IHhWYWwgKiB3VmFsO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoZG90UHJvZCk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIERlcHRod2lzZUNvbnYyRFByb2dyYW07XG59KCkpO1xuZXhwb3J0cy5EZXB0aHdpc2VDb252MkRQcm9ncmFtID0gRGVwdGh3aXNlQ29udjJEUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/conv_gpu_depthwise.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Copy2DProgram = (function () {\n    function Copy2DProgram(srcNumCols, destNumCols) {\n        this.variableNames = ['source'];\n        this.outputShape = null;\n        this.userCode = \"\\n      uniform ivec2 sourceStart;\\n      uniform ivec2 destStart;\\n\\n      void main() {\\n        ivec2 destCoords = getOutputCoords() - destStart;\\n        int index = destCoords.x * \" + destNumCols + \" + destCoords.y;\\n        int r = index / \" + srcNumCols + \";\\n        ivec2 sourceCoords = sourceStart + ivec2(r, index - r * \" + srcNumCols + \");\\n        setOutput(getSource(sourceCoords.x, sourceCoords.y));\\n      }\\n    \";\n    }\n    Copy2DProgram.prototype.getCustomSetupFunc = function (sourceStart, destStart, destSize) {\n        return function (gpgpu, webGLProgram) {\n            gpgpu.setOutputMatrixWriteRegion(destStart[0], destSize[0], destStart[1], destSize[1]);\n            var sourceStartCRLoc = gpgpu.getUniformLocation(webGLProgram, 'sourceStart');\n            gpgpu.gl.uniform2i(sourceStartCRLoc, sourceStart[0], sourceStart[1]);\n            var destStartCRLoc = gpgpu.getUniformLocation(webGLProgram, 'destStart');\n            gpgpu.gl.uniform2i(destStartCRLoc, destStart[0], destStart[1]);\n        };\n    };\n    return Copy2DProgram;\n}());\nexports.Copy2DProgram = Copy2DProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9jb3B5X2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL2NvcHlfZ3B1LmpzP2ZmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgQ29weTJEUHJvZ3JhbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29weTJEUHJvZ3JhbShzcmNOdW1Db2xzLCBkZXN0TnVtQ29scykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ3NvdXJjZSddO1xuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gbnVsbDtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdW5pZm9ybSBpdmVjMiBzb3VyY2VTdGFydDtcXG4gICAgICB1bmlmb3JtIGl2ZWMyIGRlc3RTdGFydDtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjMiBkZXN0Q29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCkgLSBkZXN0U3RhcnQ7XFxuICAgICAgICBpbnQgaW5kZXggPSBkZXN0Q29vcmRzLnggKiBcIiArIGRlc3ROdW1Db2xzICsgXCIgKyBkZXN0Q29vcmRzLnk7XFxuICAgICAgICBpbnQgciA9IGluZGV4IC8gXCIgKyBzcmNOdW1Db2xzICsgXCI7XFxuICAgICAgICBpdmVjMiBzb3VyY2VDb29yZHMgPSBzb3VyY2VTdGFydCArIGl2ZWMyKHIsIGluZGV4IC0gciAqIFwiICsgc3JjTnVtQ29scyArIFwiKTtcXG4gICAgICAgIHNldE91dHB1dChnZXRTb3VyY2Uoc291cmNlQ29vcmRzLngsIHNvdXJjZUNvb3Jkcy55KSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgQ29weTJEUHJvZ3JhbS5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jID0gZnVuY3Rpb24gKHNvdXJjZVN0YXJ0LCBkZXN0U3RhcnQsIGRlc3RTaXplKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZ3BncHUsIHdlYkdMUHJvZ3JhbSkge1xuICAgICAgICAgICAgZ3BncHUuc2V0T3V0cHV0TWF0cml4V3JpdGVSZWdpb24oZGVzdFN0YXJ0WzBdLCBkZXN0U2l6ZVswXSwgZGVzdFN0YXJ0WzFdLCBkZXN0U2l6ZVsxXSk7XG4gICAgICAgICAgICB2YXIgc291cmNlU3RhcnRDUkxvYyA9IGdwZ3B1LmdldFVuaWZvcm1Mb2NhdGlvbih3ZWJHTFByb2dyYW0sICdzb3VyY2VTdGFydCcpO1xuICAgICAgICAgICAgZ3BncHUuZ2wudW5pZm9ybTJpKHNvdXJjZVN0YXJ0Q1JMb2MsIHNvdXJjZVN0YXJ0WzBdLCBzb3VyY2VTdGFydFsxXSk7XG4gICAgICAgICAgICB2YXIgZGVzdFN0YXJ0Q1JMb2MgPSBncGdwdS5nZXRVbmlmb3JtTG9jYXRpb24od2ViR0xQcm9ncmFtLCAnZGVzdFN0YXJ0Jyk7XG4gICAgICAgICAgICBncGdwdS5nbC51bmlmb3JtMmkoZGVzdFN0YXJ0Q1JMb2MsIGRlc3RTdGFydFswXSwgZGVzdFN0YXJ0WzFdKTtcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBDb3B5MkRQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuQ29weTJEUHJvZ3JhbSA9IENvcHkyRFByb2dyYW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/copy_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar gpgpu_util = __webpack_require__(/*! ./gpgpu_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js\");\nvar tex_util = __webpack_require__(/*! ./tex_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\");\nvar webgl_util = __webpack_require__(/*! ./webgl_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\");\nvar GPGPUContext = (function () {\n    function GPGPUContext(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.autoDebugValidate = false;\n        if (gl != null) {\n            this.gl = gl;\n        }\n        else {\n            this.gl = gpgpu_util.createWebGLContext();\n        }\n        if (environment_1.ENV.get('WEBGL_VERSION') === 1) {\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'OES_texture_float');\n            this.colorBufferFloatExtension =\n                this.gl.getExtension('WEBGL_color_buffer_float');\n        }\n        else {\n            this.colorBufferFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'EXT_color_buffer_float');\n        }\n        this.loseContextExtension =\n            webgl_util.getExtensionOrThrow(this.gl, 'WEBGL_lose_context');\n        if (environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) {\n            this.getBufferSubDataAsyncExtension =\n                this.gl.getExtension('WEBGL_get_buffer_sub_data_async');\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl);\n    }\n    GPGPUContext.prototype.dispose = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        var gl = this.gl;\n        webgl_util.callAndCheck(gl, function () { return gl.finish(); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteFramebuffer(_this.framebuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.vertexBuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.indexBuffer); });\n        this.loseContextExtension.loseContext();\n        this.disposed = true;\n    };\n    GPGPUContext.prototype.enableAutomaticDebugValidation = function (enabled) {\n        this.autoDebugValidate = enabled;\n        webgl_util.enableDebugWebGLErrorChecking(enabled);\n    };\n    GPGPUContext.prototype.createMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.uploadPixelDataToTexture = function (texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    };\n    GPGPUContext.prototype.createPackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.deleteMatrixTexture = function (texture) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteTexture(texture); });\n    };\n    GPGPUContext.prototype.uploadMatrixToTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        var numChannels = 1;\n        return gpgpu_util.uploadMatrixToTexture(this.gl, texture, rows, columns, matrix, numChannels);\n    };\n    GPGPUContext.prototype.uploadMatrixToPackedTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        return gpgpu_util.uploadMatrixToPackedTexture(this.gl, texture, rows, columns, matrix);\n    };\n    GPGPUContext.prototype.downloadMatrixFromTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () {\n            return gpgpu_util.downloadMatrixFromOutputTexture(_this.gl, rows, columns);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromTextureAsync = function (texture, rows, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.getBufferSubDataAsyncExtension == null) {\n                    throw new Error(\"Cannot download matrix from output texture asynchronously, \" +\n                        \"WEBGL_get_buffer_sub_data_async is not enabled.\");\n                }\n                return [2, this.downloadMatrixDriverAsync(texture, function () { return gpgpu_util.downloadMatrixFromOutputTextureAsync(_this.gl, _this.getBufferSubDataAsyncExtension, rows, columns); })];\n            });\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromRGBAColorTexture = function (texture, rows, columns, channels) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromRGBAColorTexture(_this.gl, rows, columns, channels); });\n    };\n    GPGPUContext.prototype.downloadMatrixFromPackedTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this.gl, rows, columns); });\n    };\n    GPGPUContext.prototype.createProgram = function (fragmentShaderSource) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        var fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n        var vertexShader = gpgpu_util.createVertexShader(gl);\n        var program = webgl_util.createProgram(gl);\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, vertexShader); });\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, fragmentShader); });\n        webgl_util.linkProgram(gl, program);\n        if (this.autoDebugValidate) {\n            webgl_util.validateProgram(gl, program);\n        }\n        return program;\n    };\n    GPGPUContext.prototype.deleteProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteProgram(program); });\n        }\n    };\n    GPGPUContext.prototype.setProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.autoDebugValidate) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.useProgram(program); });\n    };\n    GPGPUContext.prototype.getUniformLocation = function (program, uniformName) {\n        this.throwIfDisposed();\n        return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n    };\n    GPGPUContext.prototype.getAttributeLocation = function (program, attribute) {\n        var _this = this;\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, function () { return _this.gl.getAttribLocation(program, attribute); });\n    };\n    GPGPUContext.prototype.getUniformLocationNoThrow = function (program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    };\n    GPGPUContext.prototype.setInputMatrixTexture = function (inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, this.program, inputMatrixTexture, uniformLocation, textureUnit);\n    };\n    GPGPUContext.prototype.setOutputMatrixTexture = function (outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixTexture = function (outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    };\n    GPGPUContext.prototype.debugValidate = function () {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    };\n    GPGPUContext.prototype.executeProgram = function (attribLocations) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        var gl = this.gl;\n        gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer, attribLocations);\n        if (this.autoDebugValidate) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, function () { return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); });\n    };\n    GPGPUContext.prototype.blockUntilAllProgramsCompleted = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.finish(); });\n    };\n    GPGPUContext.prototype.runQuery = function (queryFn) {\n        if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n            return this.runQueryWebGL2(queryFn);\n        }\n        return this.runQueryWebGL1(queryFn);\n    };\n    GPGPUContext.prototype.runQueryWebGL2 = function (benchmark) {\n        var _this = this;\n        var ext = webgl_util.getExtensionOrThrow(this.gl, 'EXT_disjoint_timer_query_webgl2');\n        var query = this.gl.createQuery();\n        this.gl.beginQuery(ext.TIME_ELAPSED_EXT, query);\n        benchmark();\n        this.gl.endQuery(ext.TIME_ELAPSED_EXT);\n        return new Promise(function (resolve, reject) {\n            var queryGPU = function () {\n                var available = _this.gl\n                    .getQueryParameter(query, _this.gl.QUERY_RESULT_AVAILABLE);\n                var disjoint = _this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n                return available && !disjoint;\n            };\n            var getTimeElapsed = function () {\n                var timeElapsedNanos = _this.gl\n                    .getQueryParameter(query, _this.gl.QUERY_RESULT);\n                resolve(timeElapsedNanos / 1000000);\n            };\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            util.repeatedTry(queryGPU).then(getTimeElapsed).catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.runQueryWebGL1 = function (benchmark) {\n        var _this = this;\n        var ext = webgl_util.getExtensionOrThrow(this.gl, 'EXT_disjoint_timer_query');\n        var query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        benchmark();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n        return new Promise(function (resolve, reject) {\n            var queryGPU = function () {\n                var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n                var disjoint = _this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n                return available && !disjoint;\n            };\n            var getTimeElapsed = function () {\n                var timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n                resolve(timeElapsedNanos / 1000000);\n            };\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            util.repeatedTry(queryGPU).then(getTimeElapsed).catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixDriverSetup = function (texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverTeardown = function () {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.autoDebugValidate) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriver = function (texture, downloadAndDecode) {\n        this.downloadMatrixDriverSetup(texture);\n        var result = downloadAndDecode();\n        this.downloadMatrixDriverTeardown();\n        return result;\n    };\n    GPGPUContext.prototype.downloadMatrixDriverAsync = function (texture, downloadAndDecode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.downloadMatrixDriverSetup(texture);\n                        return [4, downloadAndDecode()];\n                    case 1:\n                        result = _a.sent();\n                        this.downloadMatrixDriverTeardown();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    GPGPUContext.prototype.setOutputMatrixTextureDriver = function (outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, function () { return gl.viewport(0, 0, width, height); });\n        webgl_util.callAndCheck(gl, function () { return gl.scissor(0, 0, width, height); });\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegionDriver = function (x, y, width, height) {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.scissor(x, y, width, height); });\n    };\n    GPGPUContext.prototype.throwIfDisposed = function () {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    };\n    GPGPUContext.prototype.throwIfNoProgram = function () {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    };\n    return GPGPUContext;\n}());\nexports.GPGPUContext = GPGPUContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_context.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar shader_compiler = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\");\nvar ATTRIBUTE_NAMES = ['uv', 'clipSpacePos'];\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.array.shape,\n            texShape: input.texData.texShape,\n            textureType: input.texData.textureType\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.array.shape,\n        texShape: output.texData.texShape,\n        textureType: output.texData.textureType\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    var attributeLocations = {};\n    ATTRIBUTE_NAMES.forEach(function (attribute) {\n        attributeLocations[attribute] =\n            gpgpu.getAttributeLocation(webGLProgram, attribute);\n    });\n    if (shouldUploadNaNUniform()) {\n        uniformLocations[NAN_UNIFORM_NAME] =\n            gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        attributeLocations: attributeLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].array.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram(binary.attributeLocations);\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.array.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9ncGdwdV9tYXRoLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvZ3BncHVfbWF0aC5qcz85ODM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGVudmlyb25tZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vZW52aXJvbm1lbnRcIik7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlsXCIpO1xudmFyIHNoYWRlcl9jb21waWxlciA9IHJlcXVpcmUoXCIuL3NoYWRlcl9jb21waWxlclwiKTtcbnZhciBBVFRSSUJVVEVfTkFNRVMgPSBbJ3V2JywgJ2NsaXBTcGFjZVBvcyddO1xudmFyIE5BTl9VTklGT1JNX05BTUUgPSAnTmFOJztcbmZ1bmN0aW9uIHNob3VsZFVwbG9hZE5hTlVuaWZvcm0oKSB7XG4gICAgcmV0dXJuICFlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0ZMT0FUX1RFWFRVUkVfRU5BQkxFRCcpO1xufVxuZnVuY3Rpb24gY29tcGlsZVByb2dyYW0oZ3BncHUsIHByb2dyYW0sIGlucHV0cywgb3V0cHV0KSB7XG4gICAgdmFyIHVzZXJDb2RlID0gcHJvZ3JhbS51c2VyQ29kZTtcbiAgICB2YXIgaW5wdXRJbmZvcyA9IGlucHV0cy5tYXAoZnVuY3Rpb24gKGlucHV0LCBpKSB7XG4gICAgICAgIHZhciBzaGFwZUluZm8gPSB7XG4gICAgICAgICAgICBsb2dpY2FsU2hhcGU6IGlucHV0LmFycmF5LnNoYXBlLFxuICAgICAgICAgICAgdGV4U2hhcGU6IGlucHV0LnRleERhdGEudGV4U2hhcGUsXG4gICAgICAgICAgICB0ZXh0dXJlVHlwZTogaW5wdXQudGV4RGF0YS50ZXh0dXJlVHlwZVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4geyBuYW1lOiBwcm9ncmFtLnZhcmlhYmxlTmFtZXNbaV0sIHNoYXBlSW5mbzogc2hhcGVJbmZvIH07XG4gICAgfSk7XG4gICAgdmFyIGluU2hhcGVJbmZvcyA9IGlucHV0SW5mb3MubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LnNoYXBlSW5mbzsgfSk7XG4gICAgdmFyIG91dFNoYXBlSW5mbyA9IHtcbiAgICAgICAgbG9naWNhbFNoYXBlOiBvdXRwdXQuYXJyYXkuc2hhcGUsXG4gICAgICAgIHRleFNoYXBlOiBvdXRwdXQudGV4RGF0YS50ZXhTaGFwZSxcbiAgICAgICAgdGV4dHVyZVR5cGU6IG91dHB1dC50ZXhEYXRhLnRleHR1cmVUeXBlXG4gICAgfTtcbiAgICB2YXIgc291cmNlID0gc2hhZGVyX2NvbXBpbGVyLm1ha2VTaGFkZXIoaW5wdXRJbmZvcywgb3V0U2hhcGVJbmZvLCB1c2VyQ29kZSwgcHJvZ3JhbS5zdXBwb3J0c0Jyb2FkY2FzdGluZyA9PT0gdHJ1ZSk7XG4gICAgdmFyIHdlYkdMUHJvZ3JhbSA9IGdwZ3B1LmNyZWF0ZVByb2dyYW0oc291cmNlKTtcbiAgICB2YXIgdW5pZm9ybUxvY2F0aW9ucyA9IHt9O1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvZ3JhbS52YXJpYWJsZU5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB1bmlmb3JtTmFtZSA9IHByb2dyYW0udmFyaWFibGVOYW1lc1tpXTtcbiAgICAgICAgdW5pZm9ybUxvY2F0aW9uc1t1bmlmb3JtTmFtZV0gPVxuICAgICAgICAgICAgZ3BncHUuZ2V0VW5pZm9ybUxvY2F0aW9uKHdlYkdMUHJvZ3JhbSwgdW5pZm9ybU5hbWUpO1xuICAgIH1cbiAgICB2YXIgYXR0cmlidXRlTG9jYXRpb25zID0ge307XG4gICAgQVRUUklCVVRFX05BTUVTLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZSkge1xuICAgICAgICBhdHRyaWJ1dGVMb2NhdGlvbnNbYXR0cmlidXRlXSA9XG4gICAgICAgICAgICBncGdwdS5nZXRBdHRyaWJ1dGVMb2NhdGlvbih3ZWJHTFByb2dyYW0sIGF0dHJpYnV0ZSk7XG4gICAgfSk7XG4gICAgaWYgKHNob3VsZFVwbG9hZE5hTlVuaWZvcm0oKSkge1xuICAgICAgICB1bmlmb3JtTG9jYXRpb25zW05BTl9VTklGT1JNX05BTUVdID1cbiAgICAgICAgICAgIGdwZ3B1LmdldFVuaWZvcm1Mb2NhdGlvbih3ZWJHTFByb2dyYW0sIE5BTl9VTklGT1JNX05BTUUpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9ncmFtOiBwcm9ncmFtLFxuICAgICAgICBzb3VyY2U6IHNvdXJjZSxcbiAgICAgICAgd2ViR0xQcm9ncmFtOiB3ZWJHTFByb2dyYW0sXG4gICAgICAgIHVuaWZvcm1Mb2NhdGlvbnM6IHVuaWZvcm1Mb2NhdGlvbnMsXG4gICAgICAgIGF0dHJpYnV0ZUxvY2F0aW9uczogYXR0cmlidXRlTG9jYXRpb25zLFxuICAgICAgICBncGdwdTogZ3BncHUsXG4gICAgICAgIGluU2hhcGVJbmZvczogaW5TaGFwZUluZm9zLFxuICAgICAgICBvdXRTaGFwZUluZm86IG91dFNoYXBlSW5mb1xuICAgIH07XG59XG5leHBvcnRzLmNvbXBpbGVQcm9ncmFtID0gY29tcGlsZVByb2dyYW07XG5mdW5jdGlvbiB2YWxpZGF0ZUJpbmFyeUFuZFByb2dyYW0oc2hhcGVJbmZvcywgaW5wdXRzKSB7XG4gICAgaWYgKHNoYXBlSW5mb3MubGVuZ3RoICE9PSBpbnB1dHMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiQmluYXJ5IHdhcyBjb21waWxlZCB3aXRoIFwiICsgc2hhcGVJbmZvcy5sZW5ndGggKyBcIiBpbnB1dHMsIGJ1dCBcIiArXG4gICAgICAgICAgICAoXCJ3YXMgZXhlY3V0ZWQgd2l0aCBcIiArIGlucHV0cy5sZW5ndGggKyBcIiBpbnB1dHNcIikpO1xuICAgIH1cbiAgICBzaGFwZUluZm9zLmZvckVhY2goZnVuY3Rpb24gKHMsIGkpIHtcbiAgICAgICAgdmFyIHNoYXBlQSA9IHMubG9naWNhbFNoYXBlO1xuICAgICAgICB2YXIgdGV4U2hhcGVBID0gcy50ZXhTaGFwZTtcbiAgICAgICAgdmFyIHNoYXBlQiA9IGlucHV0c1tpXS5hcnJheS5zaGFwZTtcbiAgICAgICAgdmFyIHRleFNoYXBlQiA9IGlucHV0c1tpXS50ZXhEYXRhLnRleFNoYXBlO1xuICAgICAgICBpZiAoIXV0aWwuYXJyYXlzRXF1YWwoc2hhcGVBLCBzaGFwZUIpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkJpbmFyeSB3YXMgY29tcGlsZWQgd2l0aCBkaWZmZXJlbnQgc2hhcGVzIHRoYW4gXCIgK1xuICAgICAgICAgICAgICAgIChcInRoZSBjdXJyZW50IGFyZ3MuIFNoYXBlcyBcIiArIHNoYXBlQSArIFwiIGFuZCBcIiArIHNoYXBlQiArIFwiIG11c3QgbWF0Y2hcIikpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdXRpbC5hcnJheXNFcXVhbCh0ZXhTaGFwZUEsIHRleFNoYXBlQikpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiQmluYXJ5IHdhcyBjb21waWxlZCB3aXRoIGRpZmZlcmVudCB0ZXh0dXJlIHNoYXBlcyB0aGFuIHRoZVwiICtcbiAgICAgICAgICAgICAgICAoXCIgY3VycmVudCBhcmdzLiBTaGFwZSBcIiArIHRleFNoYXBlQSArIFwiIGFuZCBcIiArIHRleFNoYXBlQiArIFwiIG11c3QgbWF0Y2hcIikpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBydW5Qcm9ncmFtKGJpbmFyeSwgaW5wdXRzLCBvdXRwdXQsIGN1c3RvbVNldHVwKSB7XG4gICAgdmFsaWRhdGVCaW5hcnlBbmRQcm9ncmFtKGJpbmFyeS5pblNoYXBlSW5mb3MsIGlucHV0cyk7XG4gICAgdmFsaWRhdGVCaW5hcnlBbmRQcm9ncmFtKFtiaW5hcnkub3V0U2hhcGVJbmZvXSwgW291dHB1dF0pO1xuICAgIHZhciBvdXRUZXggPSBvdXRwdXQudGV4RGF0YS50ZXh0dXJlO1xuICAgIHZhciBvdXRUZXhTaGFwZSA9IG91dHB1dC50ZXhEYXRhLnRleFNoYXBlO1xuICAgIHZhciBncGdwdSA9IGJpbmFyeS5ncGdwdTtcbiAgICBncGdwdS5zZXRPdXRwdXRNYXRyaXhUZXh0dXJlKG91dFRleCwgb3V0VGV4U2hhcGVbMF0sIG91dFRleFNoYXBlWzFdKTtcbiAgICBncGdwdS5zZXRQcm9ncmFtKGJpbmFyeS53ZWJHTFByb2dyYW0pO1xuICAgIGlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uIChpbnB1dCwgaSkge1xuICAgICAgICB2YXIgdGV4ID0gaW5wdXQudGV4RGF0YS50ZXh0dXJlO1xuICAgICAgICB2YXIgdmFyaWFibGVOYW1lID0gYmluYXJ5LnByb2dyYW0udmFyaWFibGVOYW1lc1tpXTtcbiAgICAgICAgdmFyIHZhcmlhYmxlVW5pZm9ybUxvY2F0aW9uID0gYmluYXJ5LnVuaWZvcm1Mb2NhdGlvbnNbdmFyaWFibGVOYW1lXTtcbiAgICAgICAgZ3BncHUuc2V0SW5wdXRNYXRyaXhUZXh0dXJlKHRleCwgdmFyaWFibGVVbmlmb3JtTG9jYXRpb24sIGkpO1xuICAgIH0pO1xuICAgIGlmIChzaG91bGRVcGxvYWROYU5Vbmlmb3JtKCkpIHtcbiAgICAgICAgZ3BncHUuZ2wudW5pZm9ybTFmKGJpbmFyeS51bmlmb3JtTG9jYXRpb25zW05BTl9VTklGT1JNX05BTUVdLCBOYU4pO1xuICAgIH1cbiAgICBpZiAoY3VzdG9tU2V0dXAgIT0gbnVsbCkge1xuICAgICAgICBjdXN0b21TZXR1cChncGdwdSwgYmluYXJ5LndlYkdMUHJvZ3JhbSk7XG4gICAgfVxuICAgIGdwZ3B1LmV4ZWN1dGVQcm9ncmFtKGJpbmFyeS5hdHRyaWJ1dGVMb2NhdGlvbnMpO1xufVxuZXhwb3J0cy5ydW5Qcm9ncmFtID0gcnVuUHJvZ3JhbTtcbmZ1bmN0aW9uIG1ha2VTaGFkZXJLZXkocHJvZ3JhbSwgaW5wdXRzLCBvdXRwdXQpIHtcbiAgICB2YXIga2V5SW5wdXRzID0gJyc7XG4gICAgaW5wdXRzLmNvbmNhdChvdXRwdXQpLmZvckVhY2goZnVuY3Rpb24gKHgpIHtcbiAgICAgICAga2V5SW5wdXRzICs9IHguYXJyYXkuc2hhcGUgKyBcIl9cIiArIHgudGV4RGF0YS50ZXhTaGFwZTtcbiAgICB9KTtcbiAgICB2YXIga2V5VXNlckNvZGUgPSBwcm9ncmFtLnVzZXJDb2RlO1xuICAgIHZhciBrZXlCcm9hZGNhc3QgPSAocHJvZ3JhbS5zdXBwb3J0c0Jyb2FkY2FzdGluZyA9PT0gdHJ1ZSkudG9TdHJpbmcoKTtcbiAgICB2YXIga2V5ID0gcHJvZ3JhbS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIGtleSArPSAnXycgKyBrZXlCcm9hZGNhc3QgKyAnXycgKyBrZXlJbnB1dHMgKyAnXycgKyBrZXlVc2VyQ29kZTtcbiAgICByZXR1cm4ga2V5O1xufVxuZXhwb3J0cy5tYWtlU2hhZGVyS2V5ID0gbWFrZVNoYWRlcktleTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_math.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar tex_util = __webpack_require__(/*! ./tex_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\");\nvar webgl_util = __webpack_require__(/*! ./webgl_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\");\nfunction getWebGLContextAttributes() {\n    return {\n        alpha: false,\n        antialias: false,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false,\n        depth: false,\n        stencil: false,\n        failIfMajorPerformanceCaveat: true\n    };\n}\nexports.getWebGLContextAttributes = getWebGLContextAttributes;\nfunction createWebGLContext(canvas) {\n    var attributes = getWebGLContextAttributes();\n    var gl;\n    if (canvas != null) {\n        gl = webgl_util.createWebGLRenderingContextFromCanvas(canvas, attributes);\n    }\n    else {\n        gl = webgl_util.createWebGLRenderingContext(attributes);\n    }\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DEPTH_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.STENCIL_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.BLEND); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DITHER); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.POLYGON_OFFSET_FILL); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.SAMPLE_COVERAGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.SCISSOR_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.CULL_FACE); });\n    webgl_util.callAndCheck(gl, function () { return gl.cullFace(gl.BACK); });\n    return gl;\n}\nexports.createWebGLContext = createWebGLContext;\nfunction createVertexShader(gl) {\n    var vertexShaderSource = \"\\n    precision highp float;\\n    attribute vec3 clipSpacePos;\\n    attribute vec2 uv;\\n    varying vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexports.createVertexShader = createVertexShader;\nfunction createVertexBuffer(gl) {\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexports.createVertexBuffer = createVertexBuffer;\nfunction createIndexBuffer(gl) {\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nexports.createIndexBuffer = createIndexBuffer;\nfunction getTextureInternalFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA32F;\n        }\n        return gl.R32F;\n    }\n    return gl.RGBA;\n}\nfunction getTextureFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA;\n        }\n        return gl.RED;\n    }\n    return gl.RGBA;\n}\nfunction getTextureType(gl) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.UNSIGNED_BYTE;\n    }\n    return gl.FLOAT;\n}\nfunction createAndConfigureTexture(gl, width, height, numChannels) {\n    webgl_util.validateTextureSize(gl, width, height);\n    var texture = webgl_util.createTexture(gl);\n    var tex2d = gl.TEXTURE_2D;\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\n    var format = getTextureFormat(gl, numChannels);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), null); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n    return texture;\n}\nfunction createMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 1;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createMatrixTexture = createMatrixTexture;\nfunction createColorMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getColorMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createColorMatrixTexture = createColorMatrixTexture;\nfunction createPackedMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createPackedMatrixTexture = createPackedMatrixTexture;\nfunction bindVertexProgramAttributeStreams(gl, program, vertexBuffer, attribLocations) {\n    var posOffset = 0;\n    var uvOffset = 3 * 4;\n    var stride = (3 * 4) + (2 * 4);\n    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\n    webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset, attribLocations);\n    webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset, attribLocations);\n}\nexports.bindVertexProgramAttributeStreams = bindVertexProgramAttributeStreams;\nfunction uploadPixelDataToTexture(gl, texture, pixels) {\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadPixelDataToTexture = uploadPixelDataToTexture;\nfunction uploadDataToTexture(gl, texture, width, height, data, numChannels) {\n    var textureFormat = getTextureFormat(gl, numChannels);\n    webgl_util.validateTextureSize(gl, width, height);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, textureFormat, getTextureType(gl), data); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nfunction uploadMatrixToTexture(gl, texture, rows, columns, matrix, numChannels) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var unpackedArray;\n    if (environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        var channelsPerTexture = numChannels === 1 ? webgl_util.getChannelsPerTexture() : numChannels;\n        if (channelsPerTexture === 1) {\n            unpackedArray = matrix;\n        }\n        else {\n            unpackedArray =\n                new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture));\n            tex_util.encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture);\n        }\n    }\n    else {\n        unpackedArray = tex_util.encodeFloatArray(matrix);\n    }\n    uploadDataToTexture(gl, texture, w, h, unpackedArray, numChannels);\n}\nexports.uploadMatrixToTexture = uploadMatrixToTexture;\nfunction uploadMatrixToPackedTexture(gl, texture, rows, columns, matrix) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    tex_util.encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA);\n    var numChannels = 4;\n    uploadDataToTexture(gl, texture, w, h, packedRGBA, numChannels);\n}\nexports.uploadMatrixToPackedTexture = uploadMatrixToPackedTexture;\nfunction getDownloadTargetArrayBuffer(rows, columns, channelsPerTexture) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    var downloadTarget;\n    if (isFloatTexture) {\n        downloadTarget =\n            new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, channelsPerTexture));\n    }\n    else {\n        downloadTarget = new Uint8Array(rows * columns * channelsPerTexture);\n    }\n    return downloadTarget;\n}\nfunction decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    if (isFloatTexture) {\n        var matrix = new Float32Array(rows * columns);\n        tex_util.decodeMatrixFromUnpackedArray(downloadTarget, matrix, channelsPerPixel);\n        return matrix;\n    }\n    else {\n        return tex_util.decodeToFloatArray(downloadTarget);\n    }\n}\nfunction downloadMatrixFromOutputTextureAsync(gl, getBufferSubDataAsyncExtension, rows, columns) {\n    return __awaiter(this, void 0, void 0, function () {\n        var gl2, channelsPerPixel, downloadTarget, bufferSizeBytes, buffer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    gl2 = gl;\n                    channelsPerPixel = 4;\n                    downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n                    bufferSizeBytes = downloadTarget instanceof Float32Array ?\n                        downloadTarget.length * 4 :\n                        downloadTarget;\n                    buffer = gl.createBuffer();\n                    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\n                    webgl_util.callAndCheck(gl, function () { return gl.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl.STATIC_DRAW); });\n                    webgl_util.callAndCheck(gl, function () {\n                        return gl2.readPixels(0, 0, columns, rows, gl.RGBA, getTextureType(gl), 0);\n                    });\n                    return [4, getBufferSubDataAsyncExtension.getBufferSubDataAsync(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget)];\n                case 1:\n                    _a.sent();\n                    return [2, decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel)];\n            }\n        });\n    });\n}\nexports.downloadMatrixFromOutputTextureAsync = downloadMatrixFromOutputTextureAsync;\nfunction downloadMatrixFromOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var channelsPerPixel = 4;\n    var downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), downloadTarget); });\n    return decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel);\n}\nexports.downloadMatrixFromOutputTexture = downloadMatrixFromOutputTexture;\nfunction downloadMatrixFromRGBAColorTexture(gl, rows, columns, channels) {\n    var size = rows * columns * 4;\n    var downloadTarget = new Uint8Array(size);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, columns, rows, gl.RGBA, gl.UNSIGNED_BYTE, downloadTarget); });\n    var packedRGBA = new Float32Array(size);\n    for (var i = 0; i < downloadTarget.length; i++) {\n        packedRGBA[i] = downloadTarget[i];\n    }\n    var matrix = new Float32Array(rows * columns * channels);\n    tex_util.decodeMatrixFromUnpackedColorRGBAArray(packedRGBA, matrix, channels);\n    return matrix;\n}\nexports.downloadMatrixFromRGBAColorTexture = downloadMatrixFromRGBAColorTexture;\nfunction downloadMatrixFromPackedOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), packedRGBA); });\n    var matrix = new Float32Array(rows * columns);\n    return tex_util.decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix);\n}\nexports.downloadMatrixFromPackedOutputTexture = downloadMatrixFromPackedOutputTexture;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9ncGdwdV91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvZ3BncHVfdXRpbC5qcz84MTUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0geVtvcFswXSAmIDIgPyBcInJldHVyblwiIDogb3BbMF0gPyBcInRocm93XCIgOiBcIm5leHRcIl0pICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFswLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZW52aXJvbm1lbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9lbnZpcm9ubWVudFwiKTtcbnZhciB0ZXhfdXRpbCA9IHJlcXVpcmUoXCIuL3RleF91dGlsXCIpO1xudmFyIHdlYmdsX3V0aWwgPSByZXF1aXJlKFwiLi93ZWJnbF91dGlsXCIpO1xuZnVuY3Rpb24gZ2V0V2ViR0xDb250ZXh0QXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbHBoYTogZmFsc2UsXG4gICAgICAgIGFudGlhbGlhczogZmFsc2UsXG4gICAgICAgIHByZW11bHRpcGxpZWRBbHBoYTogZmFsc2UsXG4gICAgICAgIHByZXNlcnZlRHJhd2luZ0J1ZmZlcjogZmFsc2UsXG4gICAgICAgIGRlcHRoOiBmYWxzZSxcbiAgICAgICAgc3RlbmNpbDogZmFsc2UsXG4gICAgICAgIGZhaWxJZk1ham9yUGVyZm9ybWFuY2VDYXZlYXQ6IHRydWVcbiAgICB9O1xufVxuZXhwb3J0cy5nZXRXZWJHTENvbnRleHRBdHRyaWJ1dGVzID0gZ2V0V2ViR0xDb250ZXh0QXR0cmlidXRlcztcbmZ1bmN0aW9uIGNyZWF0ZVdlYkdMQ29udGV4dChjYW52YXMpIHtcbiAgICB2YXIgYXR0cmlidXRlcyA9IGdldFdlYkdMQ29udGV4dEF0dHJpYnV0ZXMoKTtcbiAgICB2YXIgZ2w7XG4gICAgaWYgKGNhbnZhcyAhPSBudWxsKSB7XG4gICAgICAgIGdsID0gd2ViZ2xfdXRpbC5jcmVhdGVXZWJHTFJlbmRlcmluZ0NvbnRleHRGcm9tQ2FudmFzKGNhbnZhcywgYXR0cmlidXRlcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBnbCA9IHdlYmdsX3V0aWwuY3JlYXRlV2ViR0xSZW5kZXJpbmdDb250ZXh0KGF0dHJpYnV0ZXMpO1xuICAgIH1cbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuZGlzYWJsZShnbC5ERVBUSF9URVNUKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmRpc2FibGUoZ2wuU1RFTkNJTF9URVNUKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmRpc2FibGUoZ2wuQkxFTkQpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuZGlzYWJsZShnbC5ESVRIRVIpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuZGlzYWJsZShnbC5QT0xZR09OX09GRlNFVF9GSUxMKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmRpc2FibGUoZ2wuU0FNUExFX0NPVkVSQUdFKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmVuYWJsZShnbC5TQ0lTU09SX1RFU1QpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuZW5hYmxlKGdsLkNVTExfRkFDRSk7IH0pO1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5jdWxsRmFjZShnbC5CQUNLKTsgfSk7XG4gICAgcmV0dXJuIGdsO1xufVxuZXhwb3J0cy5jcmVhdGVXZWJHTENvbnRleHQgPSBjcmVhdGVXZWJHTENvbnRleHQ7XG5mdW5jdGlvbiBjcmVhdGVWZXJ0ZXhTaGFkZXIoZ2wpIHtcbiAgICB2YXIgdmVydGV4U2hhZGVyU291cmNlID0gXCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICBhdHRyaWJ1dGUgdmVjMyBjbGlwU3BhY2VQb3M7XFxuICAgIGF0dHJpYnV0ZSB2ZWMyIHV2O1xcbiAgICB2YXJ5aW5nIHZlYzIgcmVzdWx0VVY7XFxuXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoY2xpcFNwYWNlUG9zLCAxKTtcXG4gICAgICByZXN1bHRVViA9IHV2O1xcbiAgICB9XCI7XG4gICAgcmV0dXJuIHdlYmdsX3V0aWwuY3JlYXRlVmVydGV4U2hhZGVyKGdsLCB2ZXJ0ZXhTaGFkZXJTb3VyY2UpO1xufVxuZXhwb3J0cy5jcmVhdGVWZXJ0ZXhTaGFkZXIgPSBjcmVhdGVWZXJ0ZXhTaGFkZXI7XG5mdW5jdGlvbiBjcmVhdGVWZXJ0ZXhCdWZmZXIoZ2wpIHtcbiAgICB2YXIgdmVydGV4QXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KFstMSwgMSwgMCwgMCwgMSwgLTEsIC0xLCAwLCAwLCAwLCAxLCAxLCAwLCAxLCAxLCAxLCAtMSwgMCwgMSwgMF0pO1xuICAgIHJldHVybiB3ZWJnbF91dGlsLmNyZWF0ZVN0YXRpY1ZlcnRleEJ1ZmZlcihnbCwgdmVydGV4QXJyYXkpO1xufVxuZXhwb3J0cy5jcmVhdGVWZXJ0ZXhCdWZmZXIgPSBjcmVhdGVWZXJ0ZXhCdWZmZXI7XG5mdW5jdGlvbiBjcmVhdGVJbmRleEJ1ZmZlcihnbCkge1xuICAgIHZhciB0cmlhbmdsZVZlcnRleEluZGljZXMgPSBuZXcgVWludDE2QXJyYXkoWzAsIDEsIDIsIDIsIDEsIDNdKTtcbiAgICByZXR1cm4gd2ViZ2xfdXRpbC5jcmVhdGVTdGF0aWNJbmRleEJ1ZmZlcihnbCwgdHJpYW5nbGVWZXJ0ZXhJbmRpY2VzKTtcbn1cbmV4cG9ydHMuY3JlYXRlSW5kZXhCdWZmZXIgPSBjcmVhdGVJbmRleEJ1ZmZlcjtcbmZ1bmN0aW9uIGdldFRleHR1cmVJbnRlcm5hbEZvcm1hdChnbCwgbnVtQ2hhbm5lbHMpIHtcbiAgICBpZiAoIWVudmlyb25tZW50XzEuRU5WLmdldCgnV0VCR0xfRkxPQVRfVEVYVFVSRV9FTkFCTEVEJykpIHtcbiAgICAgICAgcmV0dXJuIGdsLlJHQkE7XG4gICAgfVxuICAgIGlmIChlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX1ZFUlNJT04nKSA9PT0gMikge1xuICAgICAgICBpZiAobnVtQ2hhbm5lbHMgPT09IDQpIHtcbiAgICAgICAgICAgIHJldHVybiBnbC5SR0JBMzJGO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnbC5SMzJGO1xuICAgIH1cbiAgICByZXR1cm4gZ2wuUkdCQTtcbn1cbmZ1bmN0aW9uIGdldFRleHR1cmVGb3JtYXQoZ2wsIG51bUNoYW5uZWxzKSB7XG4gICAgaWYgKCFlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0ZMT0FUX1RFWFRVUkVfRU5BQkxFRCcpKSB7XG4gICAgICAgIHJldHVybiBnbC5SR0JBO1xuICAgIH1cbiAgICBpZiAoZW52aXJvbm1lbnRfMS5FTlYuZ2V0KCdXRUJHTF9WRVJTSU9OJykgPT09IDIpIHtcbiAgICAgICAgaWYgKG51bUNoYW5uZWxzID09PSA0KSB7XG4gICAgICAgICAgICByZXR1cm4gZ2wuUkdCQTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2wuUkVEO1xuICAgIH1cbiAgICByZXR1cm4gZ2wuUkdCQTtcbn1cbmZ1bmN0aW9uIGdldFRleHR1cmVUeXBlKGdsKSB7XG4gICAgaWYgKCFlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0ZMT0FUX1RFWFRVUkVfRU5BQkxFRCcpKSB7XG4gICAgICAgIHJldHVybiBnbC5VTlNJR05FRF9CWVRFO1xuICAgIH1cbiAgICByZXR1cm4gZ2wuRkxPQVQ7XG59XG5mdW5jdGlvbiBjcmVhdGVBbmRDb25maWd1cmVUZXh0dXJlKGdsLCB3aWR0aCwgaGVpZ2h0LCBudW1DaGFubmVscykge1xuICAgIHdlYmdsX3V0aWwudmFsaWRhdGVUZXh0dXJlU2l6ZShnbCwgd2lkdGgsIGhlaWdodCk7XG4gICAgdmFyIHRleHR1cmUgPSB3ZWJnbF91dGlsLmNyZWF0ZVRleHR1cmUoZ2wpO1xuICAgIHZhciB0ZXgyZCA9IGdsLlRFWFRVUkVfMkQ7XG4gICAgdmFyIGludGVybmFsRm9ybWF0ID0gZ2V0VGV4dHVyZUludGVybmFsRm9ybWF0KGdsLCBudW1DaGFubmVscyk7XG4gICAgdmFyIGZvcm1hdCA9IGdldFRleHR1cmVGb3JtYXQoZ2wsIG51bUNoYW5uZWxzKTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYmluZFRleHR1cmUodGV4MmQsIHRleHR1cmUpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wudGV4UGFyYW1ldGVyaSh0ZXgyZCwgZ2wuVEVYVFVSRV9XUkFQX1MsIGdsLkNMQU1QX1RPX0VER0UpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wudGV4UGFyYW1ldGVyaSh0ZXgyZCwgZ2wuVEVYVFVSRV9XUkFQX1QsIGdsLkNMQU1QX1RPX0VER0UpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wudGV4UGFyYW1ldGVyaSh0ZXgyZCwgZ2wuVEVYVFVSRV9NSU5fRklMVEVSLCBnbC5ORUFSRVNUKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLnRleFBhcmFtZXRlcmkodGV4MmQsIGdsLlRFWFRVUkVfTUFHX0ZJTFRFUiwgZ2wuTkVBUkVTVCk7IH0pO1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC50ZXhJbWFnZTJEKHRleDJkLCAwLCBpbnRlcm5hbEZvcm1hdCwgd2lkdGgsIGhlaWdodCwgMCwgZm9ybWF0LCBnZXRUZXh0dXJlVHlwZShnbCksIG51bGwpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgbnVsbCk7IH0pO1xuICAgIHJldHVybiB0ZXh0dXJlO1xufVxuZnVuY3Rpb24gY3JlYXRlTWF0cml4VGV4dHVyZShnbCwgcm93cywgY29sdW1ucykge1xuICAgIHZhciBfYSA9IHRleF91dGlsLmdldFVucGFja2VkTWF0cml4VGV4dHVyZVNoYXBlV2lkdGhIZWlnaHQocm93cywgY29sdW1ucyksIHdpZHRoID0gX2FbMF0sIGhlaWdodCA9IF9hWzFdO1xuICAgIHZhciBudW1DaGFubmVscyA9IDE7XG4gICAgcmV0dXJuIGNyZWF0ZUFuZENvbmZpZ3VyZVRleHR1cmUoZ2wsIHdpZHRoLCBoZWlnaHQsIG51bUNoYW5uZWxzKTtcbn1cbmV4cG9ydHMuY3JlYXRlTWF0cml4VGV4dHVyZSA9IGNyZWF0ZU1hdHJpeFRleHR1cmU7XG5mdW5jdGlvbiBjcmVhdGVDb2xvck1hdHJpeFRleHR1cmUoZ2wsIHJvd3MsIGNvbHVtbnMpIHtcbiAgICB2YXIgX2EgPSB0ZXhfdXRpbC5nZXRDb2xvck1hdHJpeFRleHR1cmVTaGFwZVdpZHRoSGVpZ2h0KHJvd3MsIGNvbHVtbnMpLCB3aWR0aCA9IF9hWzBdLCBoZWlnaHQgPSBfYVsxXTtcbiAgICB2YXIgbnVtQ2hhbm5lbHMgPSA0O1xuICAgIHJldHVybiBjcmVhdGVBbmRDb25maWd1cmVUZXh0dXJlKGdsLCB3aWR0aCwgaGVpZ2h0LCBudW1DaGFubmVscyk7XG59XG5leHBvcnRzLmNyZWF0ZUNvbG9yTWF0cml4VGV4dHVyZSA9IGNyZWF0ZUNvbG9yTWF0cml4VGV4dHVyZTtcbmZ1bmN0aW9uIGNyZWF0ZVBhY2tlZE1hdHJpeFRleHR1cmUoZ2wsIHJvd3MsIGNvbHVtbnMpIHtcbiAgICB2YXIgX2EgPSB0ZXhfdXRpbC5nZXRQYWNrZWRNYXRyaXhUZXh0dXJlU2hhcGVXaWR0aEhlaWdodChyb3dzLCBjb2x1bW5zKSwgd2lkdGggPSBfYVswXSwgaGVpZ2h0ID0gX2FbMV07XG4gICAgdmFyIG51bUNoYW5uZWxzID0gNDtcbiAgICByZXR1cm4gY3JlYXRlQW5kQ29uZmlndXJlVGV4dHVyZShnbCwgd2lkdGgsIGhlaWdodCwgbnVtQ2hhbm5lbHMpO1xufVxuZXhwb3J0cy5jcmVhdGVQYWNrZWRNYXRyaXhUZXh0dXJlID0gY3JlYXRlUGFja2VkTWF0cml4VGV4dHVyZTtcbmZ1bmN0aW9uIGJpbmRWZXJ0ZXhQcm9ncmFtQXR0cmlidXRlU3RyZWFtcyhnbCwgcHJvZ3JhbSwgdmVydGV4QnVmZmVyLCBhdHRyaWJMb2NhdGlvbnMpIHtcbiAgICB2YXIgcG9zT2Zmc2V0ID0gMDtcbiAgICB2YXIgdXZPZmZzZXQgPSAzICogNDtcbiAgICB2YXIgc3RyaWRlID0gKDMgKiA0KSArICgyICogNCk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCB2ZXJ0ZXhCdWZmZXIpOyB9KTtcbiAgICB3ZWJnbF91dGlsLmJpbmRWZXJ0ZXhCdWZmZXJUb1Byb2dyYW1BdHRyaWJ1dGUoZ2wsIHByb2dyYW0sICdjbGlwU3BhY2VQb3MnLCB2ZXJ0ZXhCdWZmZXIsIDMsIHN0cmlkZSwgcG9zT2Zmc2V0LCBhdHRyaWJMb2NhdGlvbnMpO1xuICAgIHdlYmdsX3V0aWwuYmluZFZlcnRleEJ1ZmZlclRvUHJvZ3JhbUF0dHJpYnV0ZShnbCwgcHJvZ3JhbSwgJ3V2JywgdmVydGV4QnVmZmVyLCAyLCBzdHJpZGUsIHV2T2Zmc2V0LCBhdHRyaWJMb2NhdGlvbnMpO1xufVxuZXhwb3J0cy5iaW5kVmVydGV4UHJvZ3JhbUF0dHJpYnV0ZVN0cmVhbXMgPSBiaW5kVmVydGV4UHJvZ3JhbUF0dHJpYnV0ZVN0cmVhbXM7XG5mdW5jdGlvbiB1cGxvYWRQaXhlbERhdGFUb1RleHR1cmUoZ2wsIHRleHR1cmUsIHBpeGVscykge1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCB0ZXh0dXJlKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgcGl4ZWxzKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIG51bGwpOyB9KTtcbn1cbmV4cG9ydHMudXBsb2FkUGl4ZWxEYXRhVG9UZXh0dXJlID0gdXBsb2FkUGl4ZWxEYXRhVG9UZXh0dXJlO1xuZnVuY3Rpb24gdXBsb2FkRGF0YVRvVGV4dHVyZShnbCwgdGV4dHVyZSwgd2lkdGgsIGhlaWdodCwgZGF0YSwgbnVtQ2hhbm5lbHMpIHtcbiAgICB2YXIgdGV4dHVyZUZvcm1hdCA9IGdldFRleHR1cmVGb3JtYXQoZ2wsIG51bUNoYW5uZWxzKTtcbiAgICB3ZWJnbF91dGlsLnZhbGlkYXRlVGV4dHVyZVNpemUoZ2wsIHdpZHRoLCBoZWlnaHQpO1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCB0ZXh0dXJlKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLnRleFN1YkltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgMCwgMCwgd2lkdGgsIGhlaWdodCwgdGV4dHVyZUZvcm1hdCwgZ2V0VGV4dHVyZVR5cGUoZ2wpLCBkYXRhKTsgfSk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIG51bGwpOyB9KTtcbn1cbmZ1bmN0aW9uIHVwbG9hZE1hdHJpeFRvVGV4dHVyZShnbCwgdGV4dHVyZSwgcm93cywgY29sdW1ucywgbWF0cml4LCBudW1DaGFubmVscykge1xuICAgIHZhciBfYSA9IHRleF91dGlsLmdldFVucGFja2VkTWF0cml4VGV4dHVyZVNoYXBlV2lkdGhIZWlnaHQocm93cywgY29sdW1ucyksIHcgPSBfYVswXSwgaCA9IF9hWzFdO1xuICAgIHZhciB1bnBhY2tlZEFycmF5O1xuICAgIGlmIChlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0ZMT0FUX1RFWFRVUkVfRU5BQkxFRCcpKSB7XG4gICAgICAgIHZhciBjaGFubmVsc1BlclRleHR1cmUgPSBudW1DaGFubmVscyA9PT0gMSA/IHdlYmdsX3V0aWwuZ2V0Q2hhbm5lbHNQZXJUZXh0dXJlKCkgOiBudW1DaGFubmVscztcbiAgICAgICAgaWYgKGNoYW5uZWxzUGVyVGV4dHVyZSA9PT0gMSkge1xuICAgICAgICAgICAgdW5wYWNrZWRBcnJheSA9IG1hdHJpeDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVucGFja2VkQXJyYXkgPVxuICAgICAgICAgICAgICAgIG5ldyBGbG9hdDMyQXJyYXkodGV4X3V0aWwuZ2V0VW5wYWNrZWRBcnJheVNpemVGcm9tTWF0cml4U2l6ZShtYXRyaXgubGVuZ3RoLCBjaGFubmVsc1BlclRleHR1cmUpKTtcbiAgICAgICAgICAgIHRleF91dGlsLmVuY29kZU1hdHJpeFRvVW5wYWNrZWRBcnJheShtYXRyaXgsIHVucGFja2VkQXJyYXksIGNoYW5uZWxzUGVyVGV4dHVyZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHVucGFja2VkQXJyYXkgPSB0ZXhfdXRpbC5lbmNvZGVGbG9hdEFycmF5KG1hdHJpeCk7XG4gICAgfVxuICAgIHVwbG9hZERhdGFUb1RleHR1cmUoZ2wsIHRleHR1cmUsIHcsIGgsIHVucGFja2VkQXJyYXksIG51bUNoYW5uZWxzKTtcbn1cbmV4cG9ydHMudXBsb2FkTWF0cml4VG9UZXh0dXJlID0gdXBsb2FkTWF0cml4VG9UZXh0dXJlO1xuZnVuY3Rpb24gdXBsb2FkTWF0cml4VG9QYWNrZWRUZXh0dXJlKGdsLCB0ZXh0dXJlLCByb3dzLCBjb2x1bW5zLCBtYXRyaXgpIHtcbiAgICB2YXIgX2EgPSB0ZXhfdXRpbC5nZXRQYWNrZWRNYXRyaXhUZXh0dXJlU2hhcGVXaWR0aEhlaWdodChyb3dzLCBjb2x1bW5zKSwgdyA9IF9hWzBdLCBoID0gX2FbMV07XG4gICAgdmFyIHBhY2tlZFJHQkEgPSBuZXcgRmxvYXQzMkFycmF5KHRleF91dGlsLmdldFBhY2tlZFJHQkFBcnJheVNpemVGcm9tTWF0cml4U2hhcGUocm93cywgY29sdW1ucykpO1xuICAgIHRleF91dGlsLmVuY29kZU1hdHJpeFRvUGFja2VkUkdCQShtYXRyaXgsIHJvd3MsIGNvbHVtbnMsIHBhY2tlZFJHQkEpO1xuICAgIHZhciBudW1DaGFubmVscyA9IDQ7XG4gICAgdXBsb2FkRGF0YVRvVGV4dHVyZShnbCwgdGV4dHVyZSwgdywgaCwgcGFja2VkUkdCQSwgbnVtQ2hhbm5lbHMpO1xufVxuZXhwb3J0cy51cGxvYWRNYXRyaXhUb1BhY2tlZFRleHR1cmUgPSB1cGxvYWRNYXRyaXhUb1BhY2tlZFRleHR1cmU7XG5mdW5jdGlvbiBnZXREb3dubG9hZFRhcmdldEFycmF5QnVmZmVyKHJvd3MsIGNvbHVtbnMsIGNoYW5uZWxzUGVyVGV4dHVyZSkge1xuICAgIHZhciBpc0Zsb2F0VGV4dHVyZSA9IGVudmlyb25tZW50XzEuRU5WLmdldCgnV0VCR0xfRkxPQVRfVEVYVFVSRV9FTkFCTEVEJyk7XG4gICAgdmFyIGRvd25sb2FkVGFyZ2V0O1xuICAgIGlmIChpc0Zsb2F0VGV4dHVyZSkge1xuICAgICAgICBkb3dubG9hZFRhcmdldCA9XG4gICAgICAgICAgICBuZXcgRmxvYXQzMkFycmF5KHRleF91dGlsLmdldFVucGFja2VkQXJyYXlTaXplRnJvbU1hdHJpeFNpemUocm93cyAqIGNvbHVtbnMsIGNoYW5uZWxzUGVyVGV4dHVyZSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZG93bmxvYWRUYXJnZXQgPSBuZXcgVWludDhBcnJheShyb3dzICogY29sdW1ucyAqIGNoYW5uZWxzUGVyVGV4dHVyZSk7XG4gICAgfVxuICAgIHJldHVybiBkb3dubG9hZFRhcmdldDtcbn1cbmZ1bmN0aW9uIGRlY29kZURvd25sb2FkVGFyZ2V0QXJyYXlCdWZmZXIoZG93bmxvYWRUYXJnZXQsIHJvd3MsIGNvbHVtbnMsIGNoYW5uZWxzUGVyUGl4ZWwpIHtcbiAgICB2YXIgaXNGbG9hdFRleHR1cmUgPSBlbnZpcm9ubWVudF8xLkVOVi5nZXQoJ1dFQkdMX0ZMT0FUX1RFWFRVUkVfRU5BQkxFRCcpO1xuICAgIGlmIChpc0Zsb2F0VGV4dHVyZSkge1xuICAgICAgICB2YXIgbWF0cml4ID0gbmV3IEZsb2F0MzJBcnJheShyb3dzICogY29sdW1ucyk7XG4gICAgICAgIHRleF91dGlsLmRlY29kZU1hdHJpeEZyb21VbnBhY2tlZEFycmF5KGRvd25sb2FkVGFyZ2V0LCBtYXRyaXgsIGNoYW5uZWxzUGVyUGl4ZWwpO1xuICAgICAgICByZXR1cm4gbWF0cml4O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRleF91dGlsLmRlY29kZVRvRmxvYXRBcnJheShkb3dubG9hZFRhcmdldCk7XG4gICAgfVxufVxuZnVuY3Rpb24gZG93bmxvYWRNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZUFzeW5jKGdsLCBnZXRCdWZmZXJTdWJEYXRhQXN5bmNFeHRlbnNpb24sIHJvd3MsIGNvbHVtbnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBnbDIsIGNoYW5uZWxzUGVyUGl4ZWwsIGRvd25sb2FkVGFyZ2V0LCBidWZmZXJTaXplQnl0ZXMsIGJ1ZmZlcjtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgZ2wyID0gZ2w7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxzUGVyUGl4ZWwgPSA0O1xuICAgICAgICAgICAgICAgICAgICBkb3dubG9hZFRhcmdldCA9IGdldERvd25sb2FkVGFyZ2V0QXJyYXlCdWZmZXIocm93cywgY29sdW1ucywgY2hhbm5lbHNQZXJQaXhlbCk7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlclNpemVCeXRlcyA9IGRvd25sb2FkVGFyZ2V0IGluc3RhbmNlb2YgRmxvYXQzMkFycmF5ID9cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvd25sb2FkVGFyZ2V0Lmxlbmd0aCAqIDQgOlxuICAgICAgICAgICAgICAgICAgICAgICAgZG93bmxvYWRUYXJnZXQ7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGdsLmNyZWF0ZUJ1ZmZlcigpO1xuICAgICAgICAgICAgICAgICAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYmluZEJ1ZmZlcihnbDIuUElYRUxfUEFDS19CVUZGRVIsIGJ1ZmZlcik7IH0pO1xuICAgICAgICAgICAgICAgICAgICB3ZWJnbF91dGlsLmNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYnVmZmVyRGF0YShnbDIuUElYRUxfUEFDS19CVUZGRVIsIGJ1ZmZlclNpemVCeXRlcywgZ2wuU1RBVElDX0RSQVcpOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnbDIucmVhZFBpeGVscygwLCAwLCBjb2x1bW5zLCByb3dzLCBnbC5SR0JBLCBnZXRUZXh0dXJlVHlwZShnbCksIDApO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0LCBnZXRCdWZmZXJTdWJEYXRhQXN5bmNFeHRlbnNpb24uZ2V0QnVmZmVyU3ViRGF0YUFzeW5jKGdsMi5QSVhFTF9QQUNLX0JVRkZFUiwgMCwgZG93bmxvYWRUYXJnZXQpXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyLCBkZWNvZGVEb3dubG9hZFRhcmdldEFycmF5QnVmZmVyKGRvd25sb2FkVGFyZ2V0LCByb3dzLCBjb2x1bW5zLCBjaGFubmVsc1BlclBpeGVsKV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0cy5kb3dubG9hZE1hdHJpeEZyb21PdXRwdXRUZXh0dXJlQXN5bmMgPSBkb3dubG9hZE1hdHJpeEZyb21PdXRwdXRUZXh0dXJlQXN5bmM7XG5mdW5jdGlvbiBkb3dubG9hZE1hdHJpeEZyb21PdXRwdXRUZXh0dXJlKGdsLCByb3dzLCBjb2x1bW5zKSB7XG4gICAgdmFyIF9hID0gdGV4X3V0aWwuZ2V0VW5wYWNrZWRNYXRyaXhUZXh0dXJlU2hhcGVXaWR0aEhlaWdodChyb3dzLCBjb2x1bW5zKSwgdyA9IF9hWzBdLCBoID0gX2FbMV07XG4gICAgdmFyIGNoYW5uZWxzUGVyUGl4ZWwgPSA0O1xuICAgIHZhciBkb3dubG9hZFRhcmdldCA9IGdldERvd25sb2FkVGFyZ2V0QXJyYXlCdWZmZXIocm93cywgY29sdW1ucywgY2hhbm5lbHNQZXJQaXhlbCk7XG4gICAgd2ViZ2xfdXRpbC5jYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLnJlYWRQaXhlbHMoMCwgMCwgdywgaCwgZ2wuUkdCQSwgZ2V0VGV4dHVyZVR5cGUoZ2wpLCBkb3dubG9hZFRhcmdldCk7IH0pO1xuICAgIHJldHVybiBkZWNvZGVEb3dubG9hZFRhcmdldEFycmF5QnVmZmVyKGRvd25sb2FkVGFyZ2V0LCByb3dzLCBjb2x1bW5zLCBjaGFubmVsc1BlclBpeGVsKTtcbn1cbmV4cG9ydHMuZG93bmxvYWRNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZSA9IGRvd25sb2FkTWF0cml4RnJvbU91dHB1dFRleHR1cmU7XG5mdW5jdGlvbiBkb3dubG9hZE1hdHJpeEZyb21SR0JBQ29sb3JUZXh0dXJlKGdsLCByb3dzLCBjb2x1bW5zLCBjaGFubmVscykge1xuICAgIHZhciBzaXplID0gcm93cyAqIGNvbHVtbnMgKiA0O1xuICAgIHZhciBkb3dubG9hZFRhcmdldCA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5yZWFkUGl4ZWxzKDAsIDAsIGNvbHVtbnMsIHJvd3MsIGdsLlJHQkEsIGdsLlVOU0lHTkVEX0JZVEUsIGRvd25sb2FkVGFyZ2V0KTsgfSk7XG4gICAgdmFyIHBhY2tlZFJHQkEgPSBuZXcgRmxvYXQzMkFycmF5KHNpemUpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZG93bmxvYWRUYXJnZXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcGFja2VkUkdCQVtpXSA9IGRvd25sb2FkVGFyZ2V0W2ldO1xuICAgIH1cbiAgICB2YXIgbWF0cml4ID0gbmV3IEZsb2F0MzJBcnJheShyb3dzICogY29sdW1ucyAqIGNoYW5uZWxzKTtcbiAgICB0ZXhfdXRpbC5kZWNvZGVNYXRyaXhGcm9tVW5wYWNrZWRDb2xvclJHQkFBcnJheShwYWNrZWRSR0JBLCBtYXRyaXgsIGNoYW5uZWxzKTtcbiAgICByZXR1cm4gbWF0cml4O1xufVxuZXhwb3J0cy5kb3dubG9hZE1hdHJpeEZyb21SR0JBQ29sb3JUZXh0dXJlID0gZG93bmxvYWRNYXRyaXhGcm9tUkdCQUNvbG9yVGV4dHVyZTtcbmZ1bmN0aW9uIGRvd25sb2FkTWF0cml4RnJvbVBhY2tlZE91dHB1dFRleHR1cmUoZ2wsIHJvd3MsIGNvbHVtbnMpIHtcbiAgICB2YXIgX2EgPSB0ZXhfdXRpbC5nZXRQYWNrZWRNYXRyaXhUZXh0dXJlU2hhcGVXaWR0aEhlaWdodChyb3dzLCBjb2x1bW5zKSwgdyA9IF9hWzBdLCBoID0gX2FbMV07XG4gICAgdmFyIHBhY2tlZFJHQkEgPSBuZXcgRmxvYXQzMkFycmF5KHRleF91dGlsLmdldFBhY2tlZFJHQkFBcnJheVNpemVGcm9tTWF0cml4U2hhcGUocm93cywgY29sdW1ucykpO1xuICAgIHdlYmdsX3V0aWwuY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5yZWFkUGl4ZWxzKDAsIDAsIHcsIGgsIGdsLlJHQkEsIGdldFRleHR1cmVUeXBlKGdsKSwgcGFja2VkUkdCQSk7IH0pO1xuICAgIHZhciBtYXRyaXggPSBuZXcgRmxvYXQzMkFycmF5KHJvd3MgKiBjb2x1bW5zKTtcbiAgICByZXR1cm4gdGV4X3V0aWwuZGVjb2RlTWF0cml4RnJvbVBhY2tlZFJHQkEocGFja2VkUkdCQSwgcm93cywgY29sdW1ucywgbWF0cml4KTtcbn1cbmV4cG9ydHMuZG93bmxvYWRNYXRyaXhGcm9tUGFja2VkT3V0cHV0VGV4dHVyZSA9IGRvd25sb2FkTWF0cml4RnJvbVBhY2tlZE91dHB1dFRleHR1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/gpgpu_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MaxPool2DBackpropProgram = (function () {\n    function MaxPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = filterHeight * filterWidth - 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + lastIndex + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + filterWidth + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool2DBackpropProgram;\n}());\nexports.MaxPool2DBackpropProgram = MaxPool2DBackpropProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9tYXhfcG9vbF9iYWNrcHJvcF9ncHUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9tYXhfcG9vbF9iYWNrcHJvcF9ncHUuanM/M2Q3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBNYXhQb29sMkRCYWNrcHJvcFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1heFBvb2wyREJhY2twcm9wUHJvZ3JhbShjb252SW5mbykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ2R5JywgJ21heFBvcyddO1xuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gY29udkluZm8uaW5TaGFwZTtcbiAgICAgICAgdmFyIGZpbHRlckhlaWdodCA9IGNvbnZJbmZvLmZpbHRlckhlaWdodDtcbiAgICAgICAgdmFyIGZpbHRlcldpZHRoID0gY29udkluZm8uZmlsdGVyV2lkdGg7XG4gICAgICAgIHZhciBzdHJpZGVIZWlnaHQgPSBjb252SW5mby5zdHJpZGVIZWlnaHQ7XG4gICAgICAgIHZhciBzdHJpZGVXaWR0aCA9IGNvbnZJbmZvLnN0cmlkZVdpZHRoO1xuICAgICAgICB2YXIgcGFkVG9wID0gZmlsdGVySGVpZ2h0IC0gMSAtIGNvbnZJbmZvLnBhZEluZm8udG9wO1xuICAgICAgICB2YXIgcGFkTGVmdCA9IGZpbHRlcldpZHRoIC0gMSAtIGNvbnZJbmZvLnBhZEluZm8ubGVmdDtcbiAgICAgICAgdmFyIGxhc3RJbmRleCA9IGZpbHRlckhlaWdodCAqIGZpbHRlcldpZHRoIC0gMTtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiICsgcGFkVG9wICsgXCIsIFwiICsgcGFkTGVmdCArIFwiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiBkeVJDQ29ybmVyID0gY29vcmRzLnl6IC0gcGFkcztcXG4gICAgICAgIGludCBkeVJDb3JuZXIgPSBkeVJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlSQ0Nvcm5lci55O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgZHkoPywgPywgZCkgd2l0aCBwb3MgbWFzayg6LCA6LCBkKSB0byBnZXQgZHgoeFIsIHhDLCBkKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IHdSID0gMDsgd1IgPCBcIiArIGZpbHRlckhlaWdodCArIFwiOyB3UisrKSB7XFxuICAgICAgICAgIGZsb2F0IGR5UiA9IGZsb2F0KGR5UkNvcm5lciArIHdSKSAvIFwiICsgc3RyaWRlSGVpZ2h0ICsgXCIuMDtcXG5cXG4gICAgICAgICAgaWYgKGR5UiA8IDAuMCB8fCBkeVIgPj0gXCIgKyBjb252SW5mby5vdXRIZWlnaHQgKyBcIi4wIHx8IGZyYWN0KGR5UikgPiAwLjApIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBpbnQgaWR5UiA9IGludChkeVIpO1xcblxcbiAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIgKyBmaWx0ZXJXaWR0aCArIFwiOyB3QysrKSB7XFxuICAgICAgICAgICAgZmxvYXQgZHlDID0gZmxvYXQoZHlDQ29ybmVyICsgd0MpIC8gXCIgKyBzdHJpZGVXaWR0aCArIFwiLjA7XFxuXFxuICAgICAgICAgICAgaWYgKGR5QyA8IDAuMCB8fCBkeUMgPj0gXCIgKyBjb252SW5mby5vdXRXaWR0aCArIFwiLjAgfHxcXG4gICAgICAgICAgICAgICAgZnJhY3QoZHlDKSA+IDAuMCkge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGludCBpZHlDID0gaW50KGR5Qyk7XFxuXFxuICAgICAgICAgICAgZmxvYXQgZHlWYWx1ZSA9IGdldER5KGIsIGlkeVIsIGlkeUMsIGQpO1xcbiAgICAgICAgICAgIGludCBtYXhQb3NWYWx1ZSA9IFwiICsgbGFzdEluZGV4ICsgXCIgLSBpbnQoZ2V0TWF4UG9zKGIsIGlkeVIsIGlkeUMsIGQpKTtcXG5cXG4gICAgICAgICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdmFsdWUsIGNoZWNrIGl0IGFnYWluc3QgdGhlIHZhbHVlIGZyb20gdGhlXFxuICAgICAgICAgICAgLy8gcG9zaXRpb24gbWF0cml4LlxcbiAgICAgICAgICAgIGludCBjdXJQb3NWYWx1ZSA9IHdSICogXCIgKyBmaWx0ZXJXaWR0aCArIFwiICsgd0M7XFxuICAgICAgICAgICAgZmxvYXQgbWFzayA9IGZsb2F0KG1heFBvc1ZhbHVlID09IGN1clBvc1ZhbHVlID8gMS4wIDogMC4wKTtcXG5cXG4gICAgICAgICAgICBkb3RQcm9kICs9IGR5VmFsdWUgKiBtYXNrO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoZG90UHJvZCk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIE1heFBvb2wyREJhY2twcm9wUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLk1heFBvb2wyREJhY2twcm9wUHJvZ3JhbSA9IE1heFBvb2wyREJhY2twcm9wUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/max_pool_backprop_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matmul_1 = __webpack_require__(/*! ../types/matmul */ \"./node_modules/deeplearn/dist/math/backends/types/matmul.js\");\nvar MatMulProgram = (function () {\n    function MatMulProgram(aShape, bShape, aOrient, bOrient) {\n        if (aOrient === void 0) { aOrient = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrient === void 0) { bOrient = matmul_1.MatrixOrientation.REGULAR; }\n        this.variableNames = ['matrixA', 'matrixB'];\n        var outerShapeA = (aOrient === matmul_1.MatrixOrientation.REGULAR) ? aShape[0] : aShape[1];\n        var outerShapeB = (bOrient === matmul_1.MatrixOrientation.REGULAR) ? bShape[1] : bShape[0];\n        this.outputShape = [outerShapeA, outerShapeB];\n        var sharedDim = (aOrient === matmul_1.MatrixOrientation.REGULAR ? aShape[1] : aShape[0]);\n        var aSnippetFromOffset = function (vec4Offset, indexVar) {\n            return (aOrient === matmul_1.MatrixOrientation.REGULAR) ?\n                \"aRow, \" + indexVar + \" + \" + vec4Offset :\n                indexVar + \" + \" + vec4Offset + \", aRow\";\n        };\n        var bSnippetFromOffset = function (vec4Offset, indexVar) {\n            return (bOrient === matmul_1.MatrixOrientation.REGULAR) ?\n                indexVar + \" + \" + vec4Offset + \", bCol\" :\n                \"bCol, \" + indexVar + \" + \" + vec4Offset;\n        };\n        var sharedDimNearestVec4 = Math.floor(sharedDim / 4) * 4;\n        var sharedDimVec4Remainder = sharedDim % 4;\n        this.userCode = \" float dotARowBCol(int aRow, int bCol) {\\n      float result = 0.0;\\n      for (int i = 0; i < \" + sharedDimNearestVec4 + \"; i += 4) {\\n        vec4 a = vec4(\\n          getMatrixA(\" + aSnippetFromOffset(0, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(3, 'i') + \")\\n        );\\n        vec4 b = vec4(\\n          getMatrixB(\" + bSnippetFromOffset(0, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(3, 'i') + \")\\n        );\\n\\n        result += dot(a, b);\\n      }\\n\\n      if (\" + (sharedDimVec4Remainder === 1) + \") {\\n        result += getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \") *\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \");\\n      } else if (\" + (sharedDimVec4Remainder === 2) + \") {\\n        vec2 a = vec2(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        vec2 b = vec2(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      } else if (\" + (sharedDimVec4Remainder === 3) + \") {\\n        vec3 a = vec3(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        vec3 b = vec3(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      }\\n\\n      return result;\\n    }\\n\\n    void main() {\\n      ivec2 resRC = getOutputCoords();\\n      setOutput(dotARowBCol(resRC.x, resRC.y));\\n    }\\n    \";\n    }\n    return MatMulProgram;\n}());\nexports.MatMulProgram = MatMulProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9tdWxtYXRfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvbXVsbWF0X2dwdS5qcz85N2UwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG1hdG11bF8xID0gcmVxdWlyZShcIi4uL3R5cGVzL21hdG11bFwiKTtcbnZhciBNYXRNdWxQcm9ncmFtID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNYXRNdWxQcm9ncmFtKGFTaGFwZSwgYlNoYXBlLCBhT3JpZW50LCBiT3JpZW50KSB7XG4gICAgICAgIGlmIChhT3JpZW50ID09PSB2b2lkIDApIHsgYU9yaWVudCA9IG1hdG11bF8xLk1hdHJpeE9yaWVudGF0aW9uLlJFR1VMQVI7IH1cbiAgICAgICAgaWYgKGJPcmllbnQgPT09IHZvaWQgMCkgeyBiT3JpZW50ID0gbWF0bXVsXzEuTWF0cml4T3JpZW50YXRpb24uUkVHVUxBUjsgfVxuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ21hdHJpeEEnLCAnbWF0cml4QiddO1xuICAgICAgICB2YXIgb3V0ZXJTaGFwZUEgPSAoYU9yaWVudCA9PT0gbWF0bXVsXzEuTWF0cml4T3JpZW50YXRpb24uUkVHVUxBUikgPyBhU2hhcGVbMF0gOiBhU2hhcGVbMV07XG4gICAgICAgIHZhciBvdXRlclNoYXBlQiA9IChiT3JpZW50ID09PSBtYXRtdWxfMS5NYXRyaXhPcmllbnRhdGlvbi5SRUdVTEFSKSA/IGJTaGFwZVsxXSA6IGJTaGFwZVswXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtvdXRlclNoYXBlQSwgb3V0ZXJTaGFwZUJdO1xuICAgICAgICB2YXIgc2hhcmVkRGltID0gKGFPcmllbnQgPT09IG1hdG11bF8xLk1hdHJpeE9yaWVudGF0aW9uLlJFR1VMQVIgPyBhU2hhcGVbMV0gOiBhU2hhcGVbMF0pO1xuICAgICAgICB2YXIgYVNuaXBwZXRGcm9tT2Zmc2V0ID0gZnVuY3Rpb24gKHZlYzRPZmZzZXQsIGluZGV4VmFyKSB7XG4gICAgICAgICAgICByZXR1cm4gKGFPcmllbnQgPT09IG1hdG11bF8xLk1hdHJpeE9yaWVudGF0aW9uLlJFR1VMQVIpID9cbiAgICAgICAgICAgICAgICBcImFSb3csIFwiICsgaW5kZXhWYXIgKyBcIiArIFwiICsgdmVjNE9mZnNldCA6XG4gICAgICAgICAgICAgICAgaW5kZXhWYXIgKyBcIiArIFwiICsgdmVjNE9mZnNldCArIFwiLCBhUm93XCI7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBiU25pcHBldEZyb21PZmZzZXQgPSBmdW5jdGlvbiAodmVjNE9mZnNldCwgaW5kZXhWYXIpIHtcbiAgICAgICAgICAgIHJldHVybiAoYk9yaWVudCA9PT0gbWF0bXVsXzEuTWF0cml4T3JpZW50YXRpb24uUkVHVUxBUikgP1xuICAgICAgICAgICAgICAgIGluZGV4VmFyICsgXCIgKyBcIiArIHZlYzRPZmZzZXQgKyBcIiwgYkNvbFwiIDpcbiAgICAgICAgICAgICAgICBcImJDb2wsIFwiICsgaW5kZXhWYXIgKyBcIiArIFwiICsgdmVjNE9mZnNldDtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHNoYXJlZERpbU5lYXJlc3RWZWM0ID0gTWF0aC5mbG9vcihzaGFyZWREaW0gLyA0KSAqIDQ7XG4gICAgICAgIHZhciBzaGFyZWREaW1WZWM0UmVtYWluZGVyID0gc2hhcmVkRGltICUgNDtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiIGZsb2F0IGRvdEFSb3dCQ29sKGludCBhUm93LCBpbnQgYkNvbCkge1xcbiAgICAgIGZsb2F0IHJlc3VsdCA9IDAuMDtcXG4gICAgICBmb3IgKGludCBpID0gMDsgaSA8IFwiICsgc2hhcmVkRGltTmVhcmVzdFZlYzQgKyBcIjsgaSArPSA0KSB7XFxuICAgICAgICB2ZWM0IGEgPSB2ZWM0KFxcbiAgICAgICAgICBnZXRNYXRyaXhBKFwiICsgYVNuaXBwZXRGcm9tT2Zmc2V0KDAsICdpJykgKyBcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEEoXCIgKyBhU25pcHBldEZyb21PZmZzZXQoMSwgJ2knKSArIFwiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIiArIGFTbmlwcGV0RnJvbU9mZnNldCgyLCAnaScpICsgXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhBKFwiICsgYVNuaXBwZXRGcm9tT2Zmc2V0KDMsICdpJykgKyBcIilcXG4gICAgICAgICk7XFxuICAgICAgICB2ZWM0IGIgPSB2ZWM0KFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiICsgYlNuaXBwZXRGcm9tT2Zmc2V0KDAsICdpJykgKyBcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIgKyBiU25pcHBldEZyb21PZmZzZXQoMSwgJ2knKSArIFwiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIiArIGJTbmlwcGV0RnJvbU9mZnNldCgyLCAnaScpICsgXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiICsgYlNuaXBwZXRGcm9tT2Zmc2V0KDMsICdpJykgKyBcIilcXG4gICAgICAgICk7XFxuXFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH1cXG5cXG4gICAgICBpZiAoXCIgKyAoc2hhcmVkRGltVmVjNFJlbWFpbmRlciA9PT0gMSkgKyBcIikge1xcbiAgICAgICAgcmVzdWx0ICs9IGdldE1hdHJpeEEoXCIgKyBhU25pcHBldEZyb21PZmZzZXQoMCwgc2hhcmVkRGltTmVhcmVzdFZlYzQpICsgXCIpICpcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIiArIGJTbmlwcGV0RnJvbU9mZnNldCgwLCBzaGFyZWREaW1OZWFyZXN0VmVjNCkgKyBcIik7XFxuICAgICAgfSBlbHNlIGlmIChcIiArIChzaGFyZWREaW1WZWM0UmVtYWluZGVyID09PSAyKSArIFwiKSB7XFxuICAgICAgICB2ZWMyIGEgPSB2ZWMyKFxcbiAgICAgICAgICBnZXRNYXRyaXhBKFwiICsgYVNuaXBwZXRGcm9tT2Zmc2V0KDAsIHNoYXJlZERpbU5lYXJlc3RWZWM0KSArIFwiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIiArIGFTbmlwcGV0RnJvbU9mZnNldCgxLCBzaGFyZWREaW1OZWFyZXN0VmVjNCkgKyBcIilcXG4gICAgICAgICk7XFxuICAgICAgICB2ZWMyIGIgPSB2ZWMyKFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiICsgYlNuaXBwZXRGcm9tT2Zmc2V0KDAsIHNoYXJlZERpbU5lYXJlc3RWZWM0KSArIFwiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIiArIGJTbmlwcGV0RnJvbU9mZnNldCgxLCBzaGFyZWREaW1OZWFyZXN0VmVjNCkgKyBcIilcXG4gICAgICAgICk7XFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH0gZWxzZSBpZiAoXCIgKyAoc2hhcmVkRGltVmVjNFJlbWFpbmRlciA9PT0gMykgKyBcIikge1xcbiAgICAgICAgdmVjMyBhID0gdmVjMyhcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIiArIGFTbmlwcGV0RnJvbU9mZnNldCgwLCBzaGFyZWREaW1OZWFyZXN0VmVjNCkgKyBcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEEoXCIgKyBhU25pcHBldEZyb21PZmZzZXQoMSwgc2hhcmVkRGltTmVhcmVzdFZlYzQpICsgXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhBKFwiICsgYVNuaXBwZXRGcm9tT2Zmc2V0KDIsIHNoYXJlZERpbU5lYXJlc3RWZWM0KSArIFwiKVxcbiAgICAgICAgKTtcXG4gICAgICAgIHZlYzMgYiA9IHZlYzMoXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIgKyBiU25pcHBldEZyb21PZmZzZXQoMCwgc2hhcmVkRGltTmVhcmVzdFZlYzQpICsgXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiICsgYlNuaXBwZXRGcm9tT2Zmc2V0KDEsIHNoYXJlZERpbU5lYXJlc3RWZWM0KSArIFwiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIiArIGJTbmlwcGV0RnJvbU9mZnNldCgyLCBzaGFyZWREaW1OZWFyZXN0VmVjNCkgKyBcIilcXG4gICAgICAgICk7XFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH1cXG5cXG4gICAgICByZXR1cm4gcmVzdWx0O1xcbiAgICB9XFxuXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBpdmVjMiByZXNSQyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgIHNldE91dHB1dChkb3RBUm93QkNvbChyZXNSQy54LCByZXNSQy55KSk7XFxuICAgIH1cXG4gICAgXCI7XG4gICAgfVxuICAgIHJldHVybiBNYXRNdWxQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuTWF0TXVsUHJvZ3JhbSA9IE1hdE11bFByb2dyYW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/mulmat_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js":
/*!****************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MultinomialProgram = (function () {\n    function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (numOutcomes - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (numOutcomes - 1) + \"));\\n      }\\n    \";\n    }\n    MultinomialProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return MultinomialProgram;\n}());\nexports.MultinomialProgram = MultinomialProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9tdWx0aW5vbWlhbF9ncHUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9tdWx0aW5vbWlhbF9ncHUuanM/MDdlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBNdWx0aW5vbWlhbFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE11bHRpbm9taWFsUHJvZ3JhbShiYXRjaFNpemUsIG51bU91dGNvbWVzLCBudW1TYW1wbGVzKSB7XG4gICAgICAgIHRoaXMudmFyaWFibGVOYW1lcyA9IFsncHJvYnMnXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtiYXRjaFNpemUsIG51bVNhbXBsZXNdO1xuICAgICAgICB0aGlzLnVzZXJDb2RlID0gXCJcXG4gICAgICB1bmlmb3JtIGZsb2F0IHNlZWQ7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuXFxuICAgICAgICBmbG9hdCByID0gcmFuZG9tKHNlZWQpO1xcbiAgICAgICAgZmxvYXQgY2RmID0gMC4wO1xcblxcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBcIiArIChudW1PdXRjb21lcyAtIDEpICsgXCI7IGkrKykge1xcbiAgICAgICAgICBjZGYgKz0gZ2V0UHJvYnMoYmF0Y2gsIGkpO1xcblxcbiAgICAgICAgICBpZiAociA8IGNkZikge1xcbiAgICAgICAgICAgIHNldE91dHB1dChmbG9hdChpKSk7XFxuICAgICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICAvLyBJZiBubyBvdGhlciBldmVudCBoYXBwZW5lZCwgbGFzdCBldmVudCBoYXBwZW5lZC5cXG4gICAgICAgIHNldE91dHB1dChmbG9hdChcIiArIChudW1PdXRjb21lcyAtIDEpICsgXCIpKTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICBNdWx0aW5vbWlhbFByb2dyYW0ucHJvdG90eXBlLmdldEN1c3RvbVNldHVwRnVuYyA9IGZ1bmN0aW9uIChzZWVkKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZ3BncHUsIHdlYkdMUHJvZ3JhbSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnNlZWRMb2MgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNlZWRMb2MgPSBncGdwdS5nZXRVbmlmb3JtTG9jYXRpb24od2ViR0xQcm9ncmFtLCAnc2VlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZ3BncHUuZ2wudW5pZm9ybTFmKF90aGlzLnNlZWRMb2MsIHNlZWQpO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIE11bHRpbm9taWFsUHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLk11bHRpbm9taWFsUHJvZ3JhbSA9IE11bHRpbm9taWFsUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/multinomial_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneHotProgram = (function () {\n    function OneHotProgram(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + offValue + \"), float(\" + onValue + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n    }\n    OneHotProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return OneHotProgram;\n}());\nexports.OneHotProgram = OneHotProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9vbmVob3RfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvb25laG90X2dwdS5qcz85NWFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE9uZUhvdFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9uZUhvdFByb2dyYW0obnVtSW5kaWNlcywgZGVwdGgsIG9uVmFsdWUsIG9mZlZhbHVlKSB7XG4gICAgICAgIHRoaXMudmFyaWFibGVOYW1lcyA9IFsnaW5kaWNlcyddO1xuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gW251bUluZGljZXMsIGRlcHRoXTtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgaW5kZXggPSByb3VuZChnZXRJbmRpY2VzKGNvb3Jkcy54KSk7XFxuICAgICAgICBzZXRPdXRwdXQobWl4KGZsb2F0KFwiICsgb2ZmVmFsdWUgKyBcIiksIGZsb2F0KFwiICsgb25WYWx1ZSArIFwiKSxcXG4gICAgICAgICAgICAgICAgICAgICAgZmxvYXQoaW5kZXggPT0gY29vcmRzLnkpKSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgT25lSG90UHJvZ3JhbS5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jID0gZnVuY3Rpb24gKHNlZWQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChncGdwdSwgd2ViR0xQcm9ncmFtKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMuc2VlZExvYyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2VlZExvYyA9IGdwZ3B1LmdldFVuaWZvcm1Mb2NhdGlvbih3ZWJHTFByb2dyYW0sICdzZWVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBncGdwdS5nbC51bmlmb3JtMWYoX3RoaXMuc2VlZExvYywgc2VlZCk7XG4gICAgICAgIH07XG4gICAgfTtcbiAgICByZXR1cm4gT25lSG90UHJvZ3JhbTtcbn0oKSk7XG5leHBvcnRzLk9uZUhvdFByb2dyYW0gPSBPbmVIb3RQcm9ncmFtO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/onehot_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = (function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            if (poolType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        if (computePositions) {\n            var compareOp_1 = poolType === 'min' ? '<=' : '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              if (isNaN(value)) {\\n                setOutput(value);\\n                return;\\n              }\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + filterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = poolType === 'min' ? 'min' : 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / \" + filterHeight * filterWidth + \".0\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (hasNaN(values)) {\\n        setOutput(getNaN(values));\\n        return;\\n      }\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC;\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              getValue(batch, xR, xC + 3, d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}());\nexports.Pool2DProgram = Pool2DProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/pool_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReduceProgram = (function () {\n    function ReduceProgram(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var isReduceSum = reduceType === 'sum';\n        var initializationValue = '0.0';\n        if (!isReduceSum) {\n            if (reduceType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        var compareOp = reduceType === 'min' ? 'min' : 'max';\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = \"sumValue\";\n        }\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n      if (\" + isReduceSum + \") {\\n        sumValue += dot(values, ones);\\n      } else {\\n        if (hasNaN(values)) {\\n          setOutput(getNaN(values));\\n          return;\\n        }\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        var checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return ReduceProgram;\n}());\nexports.ReduceProgram = ReduceProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9yZWR1Y2VfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvcmVkdWNlX2dwdS5qcz85ZDc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFJlZHVjZVByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlZHVjZVByb2dyYW0ocmVkdWNlSW5mbywgcmVkdWNlVHlwZSkge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ3gnXTtcbiAgICAgICAgdmFyIHdpbmRvd1NpemUgPSByZWR1Y2VJbmZvLndpbmRvd1NpemU7XG4gICAgICAgIHZhciBiYXRjaFNpemUgPSByZWR1Y2VJbmZvLmJhdGNoU2l6ZTtcbiAgICAgICAgdmFyIGluU2l6ZSA9IHJlZHVjZUluZm8uaW5TaXplO1xuICAgICAgICB2YXIgb3V0U2l6ZSA9IE1hdGguY2VpbChpblNpemUgLyB3aW5kb3dTaXplKTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtiYXRjaFNpemUsIG91dFNpemVdO1xuICAgICAgICB2YXIgaXNSZWR1Y2VTdW0gPSByZWR1Y2VUeXBlID09PSAnc3VtJztcbiAgICAgICAgdmFyIGluaXRpYWxpemF0aW9uVmFsdWUgPSAnMC4wJztcbiAgICAgICAgaWYgKCFpc1JlZHVjZVN1bSkge1xuICAgICAgICAgICAgaWYgKHJlZHVjZVR5cGUgPT09ICdtaW4nKSB7XG4gICAgICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSA9ICcxLjAgLyAwLjAnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSA9ICctMS4wIC8gMC4wJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgY29tcGFyZU9wID0gcmVkdWNlVHlwZSA9PT0gJ21pbicgPyAnbWluJyA6ICdtYXgnO1xuICAgICAgICB2YXIgcmV0dXJuVmFsdWUgPSByZWR1Y2VUeXBlICsgXCIoXCIgKyByZWR1Y2VUeXBlICsgXCIoXCIgKyByZWR1Y2VUeXBlICsgXCIoXCIgK1xuICAgICAgICAgICAgJ21pbk1heFZhbHVlWzBdLCBtaW5NYXhWYWx1ZVsxXSksIG1pbk1heFZhbHVlWzJdKSwgbWluTWF4VmFsdWVbM10pJztcbiAgICAgICAgaWYgKHJlZHVjZVR5cGUgPT09ICdzdW0nKSB7XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSA9IFwic3VtVmFsdWVcIjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgd2luZG93U2l6ZU5lYXJlc3RWZWM0ID0gTWF0aC5mbG9vcih3aW5kb3dTaXplIC8gNCkgKiA0O1xuICAgICAgICB2YXIgd2luZG93U2l6ZVZlYzRSZW1haW5kZXIgPSB3aW5kb3dTaXplICUgNDtcbiAgICAgICAgdmFyIHVwZGF0ZVNuaXBwZXQgPSBcIlxcbiAgICAgIGlmIChcIiArIGlzUmVkdWNlU3VtICsgXCIpIHtcXG4gICAgICAgIHN1bVZhbHVlICs9IGRvdCh2YWx1ZXMsIG9uZXMpO1xcbiAgICAgIH0gZWxzZSB7XFxuICAgICAgICBpZiAoaGFzTmFOKHZhbHVlcykpIHtcXG4gICAgICAgICAgc2V0T3V0cHV0KGdldE5hTih2YWx1ZXMpKTtcXG4gICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgfVxcbiAgICAgICAgbWluTWF4VmFsdWUgPSBcIiArIGNvbXBhcmVPcCArIFwiKHZhbHVlcywgbWluTWF4VmFsdWUpO1xcbiAgICAgIH1cXG4gICAgXCI7XG4gICAgICAgIHZhciBjaGVja091dE9mQm91bmRzID0gJyc7XG4gICAgICAgIGlmIChpblNpemUgJSB3aW5kb3dTaXplID4gMCkge1xuICAgICAgICAgICAgY2hlY2tPdXRPZkJvdW5kcyA9IFwiXFxuICAgICAgICBpZiAoaW5JZHggPCAwIHx8IGluSWR4ID49IFwiICsgaW5TaXplICsgXCIpIHtcXG4gICAgICAgICAgcmV0dXJuIGluaXRpYWxpemF0aW9uVmFsdWU7XFxuICAgICAgICB9XFxuICAgICAgXCI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgY29uc3QgZmxvYXQgaW5pdGlhbGl6YXRpb25WYWx1ZSA9IFwiICsgaW5pdGlhbGl6YXRpb25WYWx1ZSArIFwiO1xcbiAgICAgIGNvbnN0IHZlYzQgb25lcyA9IHZlYzQoMS4wLCAxLjAsIDEuMCwgMS4wKTtcXG5cXG4gICAgICBmbG9hdCBnZXRWYWx1ZShpbnQgYmF0Y2gsIGludCBpbklkeCkge1xcbiAgICAgICAgXCIgKyBjaGVja091dE9mQm91bmRzICsgXCJcXG4gICAgICAgIHJldHVybiBnZXRYKGJhdGNoLCBpbklkeCk7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IG91dElkeCA9IGNvb3Jkc1sxXTtcXG4gICAgICAgIGludCBpbk9mZnNldCA9IG91dElkeCAqIFwiICsgd2luZG93U2l6ZSArIFwiO1xcblxcbiAgICAgICAgdmVjNCBtaW5NYXhWYWx1ZSA9IHZlYzQoXCIgKyBpbml0aWFsaXphdGlvblZhbHVlICsgXCIpO1xcbiAgICAgICAgZmxvYXQgc3VtVmFsdWUgPSAwLjA7XFxuXFxuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IFwiICsgd2luZG93U2l6ZU5lYXJlc3RWZWM0ICsgXCI7IGkgKz0gNCkge1xcbiAgICAgICAgICBpbnQgaW5JZHggPSBpbk9mZnNldCArIGk7XFxuICAgICAgICAgIHZlYzQgdmFsdWVzID0gdmVjNChcXG4gICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgaW5JZHgpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDEpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDIpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDMpXFxuICAgICAgICAgICk7XFxuXFxuICAgICAgICAgIFwiICsgdXBkYXRlU25pcHBldCArIFwiXFxuICAgICAgICB9XFxuXFxuICAgICAgICBpbnQgaW5JZHggPSBpbk9mZnNldCArIFwiICsgd2luZG93U2l6ZU5lYXJlc3RWZWM0ICsgXCI7XFxuICAgICAgICBpZiAoXCIgKyAod2luZG93U2l6ZVZlYzRSZW1haW5kZXIgPT09IDEpICsgXCIpIHtcXG4gICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSxcXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlLFxcbiAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWVcXG4gICAgICAgICAgKTtcXG4gICAgICAgICAgXCIgKyB1cGRhdGVTbmlwcGV0ICsgXCJcXG4gICAgICAgIH0gZWxzZSBpZiAoXCIgKyAod2luZG93U2l6ZVZlYzRSZW1haW5kZXIgPT09IDIpICsgXCIpIHtcXG4gICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSxcXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlXFxuICAgICAgICAgICk7XFxuICAgICAgICAgIFwiICsgdXBkYXRlU25pcHBldCArIFwiXFxuICAgICAgICB9IGVsc2UgaWYgKFwiICsgKHdpbmRvd1NpemVWZWM0UmVtYWluZGVyID09PSAzKSArIFwiKSB7XFxuICAgICAgICAgIHZlYzQgdmFsdWVzID0gdmVjNChcXG4gICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgaW5JZHgpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDEpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDIpLFxcbiAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWVcXG4gICAgICAgICAgKTtcXG4gICAgICAgICAgXCIgKyB1cGRhdGVTbmlwcGV0ICsgXCJcXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChcIiArIHJldHVyblZhbHVlICsgXCIpO1xcbiAgICAgIH1cXG4gICAgXCI7XG4gICAgfVxuICAgIHJldHVybiBSZWR1Y2VQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuUmVkdWNlUHJvZ3JhbSA9IFJlZHVjZVByb2dyYW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/reduce_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js":
/*!************************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webgl_util = __webpack_require__(/*! ./webgl_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\");\nfunction getRenderRGBShader(gpgpu, destinationWidth) {\n    var fragmentShaderSource = \"\\n    precision highp float;\\n    uniform sampler2D source;\\n    varying vec2 resultUV;\\n\\n    const float destinationWidth = \" + destinationWidth + \".0;\\n    const float a = 1.0;\\n\\n    void main() {\\n      float xr = floor(resultUV.s * destinationWidth) * 3.0;\\n      vec3 x = xr + vec3(0, 1, 2);\\n\\n      float sourceWidth = destinationWidth * 3.0;\\n      vec3 u = (x + 0.5) / sourceWidth;\\n      float v = 1.0 - resultUV.t;\\n\\n      float r = texture2D(source, vec2(u[0], v)).r;\\n      float g = texture2D(source, vec2(u[1], v)).r;\\n      float b = texture2D(source, vec2(u[2], v)).r;\\n\\n      gl_FragColor = vec4(r, g, b, a);\\n    }\";\n    return gpgpu.createProgram(fragmentShaderSource);\n}\nexports.getRenderRGBShader = getRenderRGBShader;\nfunction renderToCanvas(gpgpu, renderShader, sourceTex) {\n    webgl_util.bindCanvasToFramebuffer(gpgpu.gl);\n    renderToFramebuffer(gpgpu, renderShader, sourceTex);\n}\nexports.renderToCanvas = renderToCanvas;\nfunction renderToFramebuffer(gpgpu, renderShader, sourceTex) {\n    gpgpu.setProgram(renderShader);\n    var sourceSamplerLocation = webgl_util.getProgramUniformLocationOrThrow(gpgpu.gl, renderShader, 'source');\n    gpgpu.setInputMatrixTexture(sourceTex, sourceSamplerLocation, 0);\n    gpgpu.executeProgram();\n}\nexports.renderToFramebuffer = renderToFramebuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9yZW5kZXJfbmRhcnJheV9ncHVfdXRpbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL3JlbmRlcl9uZGFycmF5X2dwdV91dGlsLmpzPzc2NDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgd2ViZ2xfdXRpbCA9IHJlcXVpcmUoXCIuL3dlYmdsX3V0aWxcIik7XG5mdW5jdGlvbiBnZXRSZW5kZXJSR0JTaGFkZXIoZ3BncHUsIGRlc3RpbmF0aW9uV2lkdGgpIHtcbiAgICB2YXIgZnJhZ21lbnRTaGFkZXJTb3VyY2UgPSBcIlxcbiAgICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuICAgIHVuaWZvcm0gc2FtcGxlcjJEIHNvdXJjZTtcXG4gICAgdmFyeWluZyB2ZWMyIHJlc3VsdFVWO1xcblxcbiAgICBjb25zdCBmbG9hdCBkZXN0aW5hdGlvbldpZHRoID0gXCIgKyBkZXN0aW5hdGlvbldpZHRoICsgXCIuMDtcXG4gICAgY29uc3QgZmxvYXQgYSA9IDEuMDtcXG5cXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIGZsb2F0IHhyID0gZmxvb3IocmVzdWx0VVYucyAqIGRlc3RpbmF0aW9uV2lkdGgpICogMy4wO1xcbiAgICAgIHZlYzMgeCA9IHhyICsgdmVjMygwLCAxLCAyKTtcXG5cXG4gICAgICBmbG9hdCBzb3VyY2VXaWR0aCA9IGRlc3RpbmF0aW9uV2lkdGggKiAzLjA7XFxuICAgICAgdmVjMyB1ID0gKHggKyAwLjUpIC8gc291cmNlV2lkdGg7XFxuICAgICAgZmxvYXQgdiA9IDEuMCAtIHJlc3VsdFVWLnQ7XFxuXFxuICAgICAgZmxvYXQgciA9IHRleHR1cmUyRChzb3VyY2UsIHZlYzIodVswXSwgdikpLnI7XFxuICAgICAgZmxvYXQgZyA9IHRleHR1cmUyRChzb3VyY2UsIHZlYzIodVsxXSwgdikpLnI7XFxuICAgICAgZmxvYXQgYiA9IHRleHR1cmUyRChzb3VyY2UsIHZlYzIodVsyXSwgdikpLnI7XFxuXFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChyLCBnLCBiLCBhKTtcXG4gICAgfVwiO1xuICAgIHJldHVybiBncGdwdS5jcmVhdGVQcm9ncmFtKGZyYWdtZW50U2hhZGVyU291cmNlKTtcbn1cbmV4cG9ydHMuZ2V0UmVuZGVyUkdCU2hhZGVyID0gZ2V0UmVuZGVyUkdCU2hhZGVyO1xuZnVuY3Rpb24gcmVuZGVyVG9DYW52YXMoZ3BncHUsIHJlbmRlclNoYWRlciwgc291cmNlVGV4KSB7XG4gICAgd2ViZ2xfdXRpbC5iaW5kQ2FudmFzVG9GcmFtZWJ1ZmZlcihncGdwdS5nbCk7XG4gICAgcmVuZGVyVG9GcmFtZWJ1ZmZlcihncGdwdSwgcmVuZGVyU2hhZGVyLCBzb3VyY2VUZXgpO1xufVxuZXhwb3J0cy5yZW5kZXJUb0NhbnZhcyA9IHJlbmRlclRvQ2FudmFzO1xuZnVuY3Rpb24gcmVuZGVyVG9GcmFtZWJ1ZmZlcihncGdwdSwgcmVuZGVyU2hhZGVyLCBzb3VyY2VUZXgpIHtcbiAgICBncGdwdS5zZXRQcm9ncmFtKHJlbmRlclNoYWRlcik7XG4gICAgdmFyIHNvdXJjZVNhbXBsZXJMb2NhdGlvbiA9IHdlYmdsX3V0aWwuZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbk9yVGhyb3coZ3BncHUuZ2wsIHJlbmRlclNoYWRlciwgJ3NvdXJjZScpO1xuICAgIGdwZ3B1LnNldElucHV0TWF0cml4VGV4dHVyZShzb3VyY2VUZXgsIHNvdXJjZVNhbXBsZXJMb2NhdGlvbiwgMCk7XG4gICAgZ3BncHUuZXhlY3V0ZVByb2dyYW0oKTtcbn1cbmV4cG9ydHMucmVuZGVyVG9GcmFtZWJ1ZmZlciA9IHJlbmRlclRvRnJhbWVidWZmZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/render_ndarray_gpu_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinear3DProgram = (function () {\n    function ResizeBilinear3DProgram(inputShape, outputDimensionsRowCol, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var depth = inputShape[2];\n        this.outputShape =\n            [outputDimensionsRowCol[0], outputDimensionsRowCol[1], depth];\n        var effectiveInputShape = alignCorners ?\n            [inputShape[0] - 1, inputShape[1] - 1, depth] :\n            inputShape;\n        var effectiveOutputShape = alignCorners ?\n            [this.outputShape[0] - 1, this.outputShape[1] - 1, depth] :\n            this.outputShape;\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInputShape[0] / effectiveOutputShape[0] + \",\\n          \" + effectiveInputShape[1] / effectiveOutputShape[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + inputShape[0] + \".0, \" + inputShape[1] + \".0);\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        ivec2 yRC = coords.xy;\\n        int d = coords.z;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinear3DProgram;\n}());\nexports.ResizeBilinear3DProgram = ResizeBilinear3DProgram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9yZXNpemVfYmlsaW5lYXJfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvcmVzaXplX2JpbGluZWFyX2dwdS5qcz81MDk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFJlc2l6ZUJpbGluZWFyM0RQcm9ncmFtID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXNpemVCaWxpbmVhcjNEUHJvZ3JhbShpbnB1dFNoYXBlLCBvdXRwdXREaW1lbnNpb25zUm93Q29sLCBhbGlnbkNvcm5lcnMpIHtcbiAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWydBJ107XG4gICAgICAgIHRoaXMub3V0cHV0U2hhcGUgPSBbXTtcbiAgICAgICAgdmFyIGRlcHRoID0gaW5wdXRTaGFwZVsyXTtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9XG4gICAgICAgICAgICBbb3V0cHV0RGltZW5zaW9uc1Jvd0NvbFswXSwgb3V0cHV0RGltZW5zaW9uc1Jvd0NvbFsxXSwgZGVwdGhdO1xuICAgICAgICB2YXIgZWZmZWN0aXZlSW5wdXRTaGFwZSA9IGFsaWduQ29ybmVycyA/XG4gICAgICAgICAgICBbaW5wdXRTaGFwZVswXSAtIDEsIGlucHV0U2hhcGVbMV0gLSAxLCBkZXB0aF0gOlxuICAgICAgICAgICAgaW5wdXRTaGFwZTtcbiAgICAgICAgdmFyIGVmZmVjdGl2ZU91dHB1dFNoYXBlID0gYWxpZ25Db3JuZXJzID9cbiAgICAgICAgICAgIFt0aGlzLm91dHB1dFNoYXBlWzBdIC0gMSwgdGhpcy5vdXRwdXRTaGFwZVsxXSAtIDEsIGRlcHRoXSA6XG4gICAgICAgICAgICB0aGlzLm91dHB1dFNoYXBlO1xuICAgICAgICB0aGlzLnVzZXJDb2RlID0gXCJcXG4gICAgICBjb25zdCB2ZWMyIGVmZmVjdGl2ZUlucHV0T3Zlck91dHB1dFJhdGlvUkMgPSB2ZWMyKFxcbiAgICAgICAgICBcIiArIGVmZmVjdGl2ZUlucHV0U2hhcGVbMF0gLyBlZmZlY3RpdmVPdXRwdXRTaGFwZVswXSArIFwiLFxcbiAgICAgICAgICBcIiArIGVmZmVjdGl2ZUlucHV0U2hhcGVbMV0gLyBlZmZlY3RpdmVPdXRwdXRTaGFwZVsxXSArIFwiKTtcXG4gICAgICBjb25zdCB2ZWMyIGlucHV0U2hhcGVSQyA9IHZlYzIoXCIgKyBpbnB1dFNoYXBlWzBdICsgXCIuMCwgXCIgKyBpbnB1dFNoYXBlWzFdICsgXCIuMCk7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzMgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpdmVjMiB5UkMgPSBjb29yZHMueHk7XFxuICAgICAgICBpbnQgZCA9IGNvb3Jkcy56O1xcblxcbiAgICAgICAgLy8gRnJhY3Rpb25hbCBzb3VyY2UgaW5kZXguXFxuICAgICAgICB2ZWMyIHNvdXJjZUZyYWNJbmRleFJDID0gdmVjMih5UkMpICogZWZmZWN0aXZlSW5wdXRPdmVyT3V0cHV0UmF0aW9SQztcXG5cXG4gICAgICAgIC8vIENvbXB1dGUgdGhlIGZvdXIgaW50ZWdlciBpbmRpY2VzLlxcbiAgICAgICAgaXZlYzIgc291cmNlRmxvb3JSQyA9IGl2ZWMyKHNvdXJjZUZyYWNJbmRleFJDKTtcXG4gICAgICAgIGl2ZWMyIHNvdXJjZUNlaWxSQyA9IGl2ZWMyKFxcbiAgICAgICAgICBtaW4oaW5wdXRTaGFwZVJDIC0gMS4wLCBjZWlsKHNvdXJjZUZyYWNJbmRleFJDKSkpO1xcblxcbiAgICAgICAgZmxvYXQgdG9wTGVmdCA9IGdldEEoc291cmNlRmxvb3JSQy54LCBzb3VyY2VGbG9vclJDLnksIGQpO1xcbiAgICAgICAgZmxvYXQgYm90dG9tTGVmdCA9IGdldEEoc291cmNlQ2VpbFJDLngsIHNvdXJjZUZsb29yUkMueSwgZCk7XFxuICAgICAgICBmbG9hdCB0b3BSaWdodCA9IGdldEEoc291cmNlRmxvb3JSQy54LCBzb3VyY2VDZWlsUkMueSwgZCk7XFxuICAgICAgICBmbG9hdCBib3R0b21SaWdodCA9IGdldEEoc291cmNlQ2VpbFJDLngsIHNvdXJjZUNlaWxSQy55LCBkKTtcXG5cXG4gICAgICAgIHZlYzIgZnJhY1JDID0gc291cmNlRnJhY0luZGV4UkMgLSB2ZWMyKHNvdXJjZUZsb29yUkMpO1xcblxcbiAgICAgICAgZmxvYXQgdG9wID0gdG9wTGVmdCArICh0b3BSaWdodCAtIHRvcExlZnQpICogZnJhY1JDLnk7XFxuICAgICAgICBmbG9hdCBib3R0b20gPSBib3R0b21MZWZ0ICsgKGJvdHRvbVJpZ2h0IC0gYm90dG9tTGVmdCkgKiBmcmFjUkMueTtcXG4gICAgICAgIGZsb2F0IG5ld1ZhbHVlID0gdG9wICsgKGJvdHRvbSAtIHRvcCkgKiBmcmFjUkMueDtcXG5cXG4gICAgICAgIHNldE91dHB1dChuZXdWYWx1ZSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIFJlc2l6ZUJpbGluZWFyM0RQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuUmVzaXplQmlsaW5lYXIzRFByb2dyYW0gPSBSZXNpemVCaWxpbmVhcjNEUHJvZ3JhbTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/resize_bilinear_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js":
/*!****************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar broadcast_util = __webpack_require__(/*! ../../broadcast_util */ \"./node_modules/deeplearn/dist/math/broadcast_util.js\");\nvar tex_util = __webpack_require__(/*! ./tex_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\");\nvar tex_util_1 = __webpack_require__(/*! ./tex_util */ \"./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\");\nfunction makeShader(inputsInfo, outputShape, userCode, broadcast) {\n    var sampleSnippet = getSampleSnippet();\n    var setOutputSnippet = getSetOutputSnippet();\n    var inputPrefixSnippet = inputsInfo.map(function (x) { return \"uniform sampler2D \" + x.name + \";\"; }).join('\\n');\n    var inputSamplingSnippet = inputsInfo.map(function (x) { return getInputSamplingSnippet(x, outputShape, broadcast); })\n        .join('\\n');\n    var outTexShape = outputShape.texShape;\n    var outputSamplingSnippet = getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    var source = [\n        SHADER_PREFIX, sampleSnippet, setOutputSnippet, inputPrefixSnippet,\n        outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nexports.makeShader = makeShader;\nfunction getSampleSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SAMPLE_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET;\n}\nfunction getSetOutputSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SETOUTPUT_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        default:\n            throw new Error(shape.length + \"-D input sampling\" +\n                \" is not yet supported\");\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, broadcast) {\n    var res = getSamplerFlat(inInfo);\n    res += getSamplerFromInInfo(inInfo);\n    if (broadcast ||\n        util.arraysEqual(inInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape)) {\n        res += getSamplerAtOutputCoords(inInfo, outShapeInfo, broadcast);\n    }\n    return res;\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        default:\n            throw new Error(outShape.length + \"-D output sampling is not yet supported\");\n    }\n}\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 UVfrom1D(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 UVfrom2D(int texNumR, int texNumC, int numC, int row, int col) {\\n  int index = row * numC + col;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 UVfrom3D(int texNumR, int texNumC, int stride0,\\n    int stride1, int row, int col, int depth) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_4D_SNIPPET = \"\\nvec2 UVfrom4D(int texNumR, int texNumC, int stride0,\\n    int stride1, int stride2, int row, int col, int depth,\\n    int depth2) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET = \"\\n  uniform float NaN;\\n\\n  const vec4 floatDeltas = vec4(\\n      1.0,\\n      1.0 / 255.0,\\n      1.0 / (255.0 * 255.0),\\n      1.0 / (255.0 * 255.0 * 255.0)\\n  );\\n  const float minValue = \" + tex_util.FLOAT_MIN + \".0;\\n  const float maxValue = \" + tex_util.FLOAT_MAX + \".0;\\n  const float range = (maxValue - minValue) / 255.0;\\n  const vec2 dotRange = vec2(1.0, range);\\n\\n  float sample(sampler2D texture, vec2 uv) {\\n    vec4 sampleValue = texture2D(texture, uv);\\n    if (all(equal(sampleValue, vec4(\" + tex_util.BYTE_NAN_VALUE + \")))) {\\n      return NaN;\\n    }\\n\\n    vec4 encValue = floor(sampleValue * 255.0 + 0.5);\\n    float decodedValue = dot(encValue, floatDeltas);\\n    return dot(vec2(minValue, decodedValue), dotRange);\\n  }\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  const vec4 floatPowers = vec4(\\n    1.0,\\n    255.0,\\n    255.0 * 255.0,\\n    255.0 * 255.0 * 255.0\\n  );\\n  const vec2 recipRange = vec2(1.0/range);\\n  const vec2 recipRange255 = vec2(1.0/(maxValue - minValue));\\n\\n  void setOutput(float decodedValue) {\\n    if (isNaN(decodedValue)) {\\n      gl_FragColor = vec4(\" + tex_util.BYTE_NAN_VALUE + \");\\n      return;\\n    }\\n\\n    float a = dot(vec2(decodedValue, -minValue), recipRange);\\n    float b = fract(a) * 255.0;\\n    float c = fract(b) * 255.0;\\n    float d = fract(c) * 255.0;\\n    gl_FragColor = floor(vec4(a, b, c, d)) / 255.0;\\n\\n    // TODO(dsmilkov): Version above gets better accuracy but probably slower\\n    // than the version below. Benchmark to determine if the accuracy is worth\\n    // the cost.\\n\\n    // float normValue = dot(vec2(decodedValue, -minValue), recipRange255);\\n    // vec4 f = normValue * floatPowers;\\n    // gl_FragColor = floor(fract(f) * 255.0) / 255.0;\\n  }\\n\";\nvar FLOAT_TEXTURE_SAMPLE_SNIPPET = \"\\n  float sample(sampler2D texture, vec2 uv) {\\n    return texture2D(texture, uv).r;\\n  }\\n\";\nvar FLOAT_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  void setOutput(float val) {\\n    gl_FragColor = vec4(val, 0, 0, 0);\\n  }\\n\";\nvar SHADER_PREFIX = \"\\n  precision highp float;\\n  precision highp int;\\n  varying vec2 resultUV;\\n  const vec2 halfCR = vec2(0.5, 0.5);\\n\\n  bool isNaN(float val) {\\n    float v1 = val * val;\\n    float v2 = val * val;\\n    return v1 == v2 ? false : true;\\n  }\\n\\n  bool hasNaN(vec4 values) {\\n    vec4 v1 = values * values;\\n    vec4 v2 = values * values;\\n    return any(notEqual(v1, v2));\\n  }\\n\\n  float getNaN(vec4 values) {\\n    return dot(vec4(1), values);\\n  }\\n\\n  int round(float value) {\\n    return int(floor(value + 0.5));\\n  }\\n\\n  int imod(int x, int y) {\\n    return x - y * (x / y);\\n  }\\n\\n  const vec2 randomConst = vec2(\\n    23.14069263277926, // e^pi (Gelfond's constant)\\n     2.665144142690225 // 2^sqrt(2) (Gelfond\\u2013Schneider constant)\\n  );\\n\\n  float random(float seed) {\\n      return fract(cos(dot(resultUV * seed, randomConst)) * 12345.6789);\\n  }\\n\\n  float sampleUVAndDepth(sampler2D texture, vec2 uv, int depth) {\\n    float value;\\n    if (depth == 0) {\\n      value = texture2D(texture, uv).r;\\n    } else if (depth == 1) {\\n      value = texture2D(texture, uv).g;\\n    } else if (depth == 2) {\\n      value = texture2D(texture, uv).b;\\n    } else if (depth == 3) {\\n      value = texture2D(texture, uv).a;\\n    }\\n    return floor(value * 255.0 + 0.5);\\n  }\\n\\n  \" + SAMPLE_1D_SNIPPET + \"\\n  \" + SAMPLE_2D_SNIPPET + \"\\n  \" + SAMPLE_3D_SNIPPET + \"\\n  \" + SAMPLE_4D_SNIPPET + \"\\n\";\nfunction getOutputScalarCoords() {\n    return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + texShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (texShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + texShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      return resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n    }\\n  \";\n}\nfunction getOutput3DCoords(shape, texShape) {\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n      int c = index / \" + stride1 + \";\\n      int d = index - c * \" + stride1 + \";\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\nfunction getOutput4DCoords(shape, texShape) {\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n\\n      int c = index / \" + stride1 + \";\\n      index -= c * \" + stride1 + \";\\n\\n      int d = index / \" + stride2 + \";\\n      int d2 = index - d * \" + stride2 + \";\\n\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      }\\n    \";\n    }\n    if (shape[1] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n    }\n    if (shape[0] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n    }\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + shape[1] + \";\\n      int c = index - r * \" + shape[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"() {\\n      return sample(\" + texName + \", halfCR);\\n    }\\n  \";\n}\nfunction getSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"(int index) {\\n      return \" + funcName + \"Flat(index);\\n    }\\n  \";\n}\nfunction getSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texNumR === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2((float(index) + 0.5) / \" + texNumC + \".0, 0.5);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n  float \" + funcName + \"(int row, int col) {\\n    vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n    return sample(\" + texName + \", uv);\\n  }\\n\";\n}\nfunction getSampler3D(inputInfo) {\n    var texShape = inputInfo.shapeInfo.texShape;\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    var texType = inputInfo.shapeInfo.textureType;\n    if (texType === tex_util_1.TextureType.DEFAULT) {\n        var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n        var squeezedShape = newShape;\n        if (squeezedShape.length < shape.length) {\n            var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n            var params = ['row', 'col', 'depth'];\n            return \"\\n        \" + getSamplerFromInInfo(newInputInfo) + \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n        }\n    }\n    if (texNumC === stride0) {\n        if (texType === tex_util_1.TextureType.DEFAULT) {\n            return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          int texR = row;\\n          int texC = col * \" + stride1 + \" + depth;\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sample(\" + texName + \", uv);\\n        }\\n      \";\n        }\n        else if (texType === tex_util_1.TextureType.RGBA_COLOR) {\n            return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          vec2 uv = (vec2(col, row) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sampleUVAndDepth(\" + texName + \", uv, depth);\\n        }\\n      \";\n        }\n        else {\n            throw new Error(\"Unknown TextureType \" + texType + \".\");\n        }\n    }\n    if (texNumC === stride1 && texType === tex_util_1.TextureType.DEFAULT) {\n        return \"\\n    float \" + funcName + \"(int row, int col, int depth) {\\n      int texR = row * \" + shape[1] + \" + col;\\n      int texC = depth;\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texType === tex_util_1.TextureType.DEFAULT) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom3D(\\n            \" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \", row, col, depth);\\n        return sample(\" + texName + \", uv);\\n      }\\n  \";\n    }\n    else if (texType === tex_util_1.TextureType.RGBA_COLOR) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n        return sampleUVAndDepth(\" + texName + \", uv, depth);\\n      }\\n    \";\n    }\n    else {\n        throw new Error(\"Unknown TextureType \" + texType + \".\");\n    }\n}\nfunction getSampler4D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row;\\n        int texC = col * \" + stride1 + \" + depth * \" + stride2 + \" + depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride2) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row * \" + shape[1] * shape[2] + \" + col * \" + shape[2] + \" + depth;\\n        int texC = depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n      vec2 uv = UVfrom4D(\" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \",\\n          \" + stride2 + \", row, col, depth, depth2);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSamplerFlat(inputInfo) {\n    var texName = inputInfo.name;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1) + 'Flat';\n    var tNumR = texShape[0];\n    var tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        return sample(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    if (tNumC === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + tNumR + \".0);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2((float(index) + 0.5) / \" + tNumC + \".0, 0.5);\\n        return sample(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int index) {\\n      vec2 uv = UVfrom1D(\" + tNumR + \", \" + tNumC + \", index);\\n      return sample(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName) {\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var type = 'int';\n    if (outRank === 2) {\n        type = 'ivec2';\n    }\n    else if (outRank === 3) {\n        type = 'ivec3';\n    }\n    else if (outRank === 4) {\n        type = 'ivec4';\n    }\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords[\" + (d + rankDiff) + \"] = 0;\"; }).join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords[\" + (i + rankDiff) + \"]\"; })\n            .join(', ');\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      return get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n    }\\n  \";\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo, supportsBroadcasting) {\n    var inTexShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var isRGBAColorTexture = inputInfo.shapeInfo.textureType === tex_util_1.TextureType.RGBA_COLOR;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var doBroadcast = supportsBroadcasting && ((outRank > inRank) || broadcastDims.length > 0);\n    var broadcastOverOuter = broadcast_util.broadcastDimsAreOuter(broadcastDims);\n    if (doBroadcast && !broadcastOverOuter) {\n        return getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName);\n    }\n    var outTexShape = outShapeInfo.texShape;\n    if (util.arraysEqual(inTexShape, outTexShape) && !isRGBAColorTexture) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sample(\" + texName + \", resultUV);\\n      }\\n    \";\n    }\n    var inTexExpandedShape = isRGBAColorTexture ?\n        [inTexShape[0], inTexShape[1] * inputInfo.shapeInfo.logicalShape[2]] :\n        inTexShape;\n    var sampleSnippet = \"return sample(\" + texName + \", uv);\";\n    var rgbaColorSnippet = '';\n    if (isRGBAColorTexture) {\n        rgbaColorSnippet = \"\\n      int col = texC / \" + inputInfo.shapeInfo.logicalShape[2] + \";\\n      int texD = texC - col * \" + inputInfo.shapeInfo.logicalShape[2] + \";\\n      texC = col;\\n    \";\n        sampleSnippet = \"return sampleUVAndDepth(\" + texName + \", uv, texD);\";\n    }\n    var inSize = util.sizeFromShape(inTexExpandedShape);\n    var broadcastSnippet = '';\n    if (doBroadcast && broadcastOverOuter) {\n        broadcastSnippet = \"\\n        int mainPart = index / \" + inSize + \";\\n        index -= mainPart * \" + inSize + \";\\n      \";\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + outTexShape[0] + \", \" + outTexShape[1] + \"));\\n      int index = resTexRC.x * \" + outTexShape[1] + \" + resTexRC.y;\\n      \" + broadcastSnippet + \"\\n      int texR = index / \" + inTexExpandedShape[1] + \";\\n      int texC = index - texR * \" + inTexExpandedShape[1] + \";\\n\\n      \" + rgbaColorSnippet + \"\\n\\n      vec2 uv = (vec2(texC, texR) + halfCR) /\\n                 vec2(\" + inTexShape[1] + \".0, \" + inTexShape[0] + \".0);\\n\\n      \" + sampleSnippet + \"\\n    }\\n  \";\n}\nfunction getCoordsDataType(rank) {\n    if (rank === 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else {\n        throw Error(\"GPU for rank \" + rank + \" is not yet supported\");\n    }\n}\nexports.getCoordsDataType = getCoordsDataType;\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(function (d) { return params[d]; }).join(', ');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\");\nvar SliceProgram = (function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getCoords(this.rank);\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            if (_this.rank === 1) {\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n            }\n            else if (_this.rank === 2) {\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n            }\n            else if (_this.rank === 3) {\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n            }\n            else if (_this.rank === 4) {\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n            }\n            else {\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n            }\n        };\n    };\n    return SliceProgram;\n}());\nexports.SliceProgram = SliceProgram;\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank === 2) {\n        return 'sourceLoc.x, sourceLoc.y';\n    }\n    else if (rank === 3) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n    }\n    else if (rank === 4) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n    }\n    else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9zbGljZV9ncHUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC9zbGljZV9ncHUuanM/NDVmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBzaGFkZXJfY29tcGlsZXJfMSA9IHJlcXVpcmUoXCIuL3NoYWRlcl9jb21waWxlclwiKTtcbnZhciBTbGljZVByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNsaWNlUHJvZ3JhbShkZXN0U2l6ZSkge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ3NvdXJjZSddO1xuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gZGVzdFNpemU7XG4gICAgICAgIHRoaXMucmFuayA9IGRlc3RTaXplLmxlbmd0aDtcbiAgICAgICAgdmFyIGR0eXBlID0gc2hhZGVyX2NvbXBpbGVyXzEuZ2V0Q29vcmRzRGF0YVR5cGUodGhpcy5yYW5rKTtcbiAgICAgICAgdmFyIHNvdXJjZUNvb3JkcyA9IGdldENvb3Jkcyh0aGlzLnJhbmspO1xuICAgICAgICB0aGlzLnVzZXJDb2RlID0gXCJcXG4gICAgICB1bmlmb3JtIFwiICsgZHR5cGUgKyBcIiBzdGFydDtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBcIiArIGR0eXBlICsgXCIgc291cmNlTG9jID0gc3RhcnQgKyBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIHNldE91dHB1dChnZXRTb3VyY2UoXCIgKyBzb3VyY2VDb29yZHMgKyBcIikpO1xcbiAgICAgIH1cXG4gICAgXCI7XG4gICAgfVxuICAgIFNsaWNlUHJvZ3JhbS5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jID0gZnVuY3Rpb24gKHN0YXJ0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmIChzdGFydC5sZW5ndGggIT09IHRoaXMucmFuaykge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJUaGUgcmFuayAoXCIgKyB0aGlzLnJhbmsgKyBcIikgb2YgdGhlIHByb2dyYW0gbXVzdCBtYXRjaCB0aGUgXCIgK1xuICAgICAgICAgICAgICAgIChcImxlbmd0aCBvZiBzdGFydCAoXCIgKyBzdGFydC5sZW5ndGggKyBcIilcIikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZ3BncHUsIHdlYkdMUHJvZ3JhbSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnN0YXJ0TG9jID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zdGFydExvYyA9IGdwZ3B1LmdldFVuaWZvcm1Mb2NhdGlvbk5vVGhyb3cod2ViR0xQcm9ncmFtLCAnc3RhcnQnKTtcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuc3RhcnRMb2MgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF90aGlzLnJhbmsgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBncGdwdS5nbC51bmlmb3JtMWkoX3RoaXMuc3RhcnRMb2MsIHN0YXJ0WzBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKF90aGlzLnJhbmsgPT09IDIpIHtcbiAgICAgICAgICAgICAgICBncGdwdS5nbC51bmlmb3JtMmkoX3RoaXMuc3RhcnRMb2MsIHN0YXJ0WzBdLCBzdGFydFsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChfdGhpcy5yYW5rID09PSAzKSB7XG4gICAgICAgICAgICAgICAgZ3BncHUuZ2wudW5pZm9ybTNpKF90aGlzLnN0YXJ0TG9jLCBzdGFydFswXSwgc3RhcnRbMV0sIHN0YXJ0WzJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKF90aGlzLnJhbmsgPT09IDQpIHtcbiAgICAgICAgICAgICAgICBncGdwdS5nbC51bmlmb3JtNGkoX3RoaXMuc3RhcnRMb2MsIHN0YXJ0WzBdLCBzdGFydFsxXSwgc3RhcnRbMl0sIHN0YXJ0WzNdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKFwiU2xpY2luZyBmb3IgcmFuayBcIiArIF90aGlzLnJhbmsgKyBcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBTbGljZVByb2dyYW07XG59KCkpO1xuZXhwb3J0cy5TbGljZVByb2dyYW0gPSBTbGljZVByb2dyYW07XG5mdW5jdGlvbiBnZXRDb29yZHMocmFuaykge1xuICAgIGlmIChyYW5rID09PSAxKSB7XG4gICAgICAgIHJldHVybiAnc291cmNlTG9jJztcbiAgICB9XG4gICAgZWxzZSBpZiAocmFuayA9PT0gMikge1xuICAgICAgICByZXR1cm4gJ3NvdXJjZUxvYy54LCBzb3VyY2VMb2MueSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJhbmsgPT09IDMpIHtcbiAgICAgICAgcmV0dXJuICdzb3VyY2VMb2MueCwgc291cmNlTG9jLnksIHNvdXJjZUxvYy56JztcbiAgICB9XG4gICAgZWxzZSBpZiAocmFuayA9PT0gNCkge1xuICAgICAgICByZXR1cm4gJ3NvdXJjZUxvYy54LCBzb3VyY2VMb2MueSwgc291cmNlTG9jLnosIHNvdXJjZUxvYy53JztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiU2xpY2luZyBmb3IgcmFuayBcIiArIHJhbmsgKyBcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/slice_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    TextureType[TextureType[\"RGBA_COLOR\"] = 1] = \"RGBA_COLOR\";\n})(TextureType = exports.TextureType || (exports.TextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexports.getUnpackedMatrixTextureShapeWidthHeight = getUnpackedMatrixTextureShapeWidthHeight;\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexports.getUnpackedArraySizeFromMatrixSize = getUnpackedArraySizeFromMatrixSize;\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\nexports.getColorMatrixTextureShapeWidthHeight = getColorMatrixTextureShapeWidthHeight;\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(\"unpackedSize (\" + unpackedSize + \") must be a multiple of \" +\n            (\"\" + channelsPerTexture));\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexports.getMatrixSizeFromUnpackedArraySize = getMatrixSizeFromUnpackedArraySize;\nfunction encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture) {\n    var requiredSize = getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture);\n    if (unpackedArray.length < requiredSize) {\n        throw new Error(\"unpackedArray length (\" + unpackedArray.length + \") must be >= \" +\n            (\"\" + requiredSize));\n    }\n    var dst = 0;\n    for (var src = 0; src < matrix.length; ++src) {\n        unpackedArray[dst] = matrix[src];\n        dst += channelsPerTexture;\n    }\n}\nexports.encodeMatrixToUnpackedArray = encodeMatrixToUnpackedArray;\nexports.FLOAT_MAX = 20000;\nexports.FLOAT_MIN = -exports.FLOAT_MAX;\nvar FLOAT_RANGE = (exports.FLOAT_MAX - exports.FLOAT_MIN) / 255;\nvar FLOAT_DELTAS = [1, 1 / 255, 1 / (255 * 255), 1 / (255 * 255 * 255)];\nvar FLOAT_POWERS = [1, 255, 255 * 255];\nexports.BYTE_NAN_VALUE = 0;\nfunction encodeFloatArray(floatArray) {\n    var uintArray = new Uint8Array(floatArray.length * 4);\n    var _loop_1 = function (i) {\n        var value = floatArray[i / 4];\n        if (isNaN(value)) {\n            uintArray[i] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 1] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 2] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 3] = exports.BYTE_NAN_VALUE;\n            return \"continue\";\n        }\n        var normalizedValue = (value - exports.FLOAT_MIN) / FLOAT_RANGE;\n        var enc = FLOAT_POWERS.map(function (pow) { return pow * normalizedValue; });\n        var buckets = enc.map(function (value) { return Math.floor((value % 1) * 255); });\n        uintArray[i] = Math.floor(normalizedValue);\n        uintArray[i + 1] = buckets[0];\n        uintArray[i + 2] = buckets[1];\n        uintArray[i + 3] = buckets[2];\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_1(i);\n    }\n    return uintArray;\n}\nexports.encodeFloatArray = encodeFloatArray;\nfunction decodeToFloatArray(uintArray) {\n    var floatArray = new Float32Array(uintArray.length / 4);\n    var _loop_2 = function (i) {\n        if (uintArray[i] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 1] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 2] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 3] === exports.BYTE_NAN_VALUE) {\n            floatArray[i / 4] = NaN;\n            return \"continue\";\n        }\n        var dot = 0;\n        FLOAT_DELTAS.forEach(function (delta, j) {\n            dot += delta * uintArray[i + j];\n        });\n        var value = dot * FLOAT_RANGE + exports.FLOAT_MIN;\n        floatArray[i / 4] = value;\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_2(i);\n    }\n    return floatArray;\n}\nexports.decodeToFloatArray = decodeToFloatArray;\nfunction decodeMatrixFromUnpackedArray(unpackedArray, matrix, channelsPerTexture) {\n    var requiredSize = getMatrixSizeFromUnpackedArraySize(unpackedArray.length, channelsPerTexture);\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += channelsPerTexture) {\n        matrix[dst++] = unpackedArray[src];\n    }\n}\nexports.decodeMatrixFromUnpackedArray = decodeMatrixFromUnpackedArray;\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    var requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += 4) {\n        for (var c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexports.decodeMatrixFromUnpackedColorRGBAArray = decodeMatrixFromUnpackedColorRGBAArray;\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [Math.ceil(columns / 2), Math.ceil(rows / 2)];\n}\nexports.getPackedMatrixTextureShapeWidthHeight = getPackedMatrixTextureShapeWidthHeight;\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    return w * h * 4;\n}\nexports.getPackedRGBAArraySizeFromMatrixShape = getPackedRGBAArraySizeFromMatrixShape;\nfunction encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA) {\n    var requiredSize = getPackedRGBAArraySizeFromMatrixShape(rows, columns);\n    if (packedRGBA.length < requiredSize) {\n        throw new Error(\"packedRGBA length (\" + packedRGBA.length + \") must be >= \" + requiredSize);\n    }\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    {\n        var dstStride = (oddWidth ? 4 : 0);\n        var oneRow = columns;\n        var dst = 0;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            var matrixSrcRow = (blockY * 2 * columns);\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                var matrixSrcCol = blockX * 2;\n                var src = matrixSrcRow + matrixSrcCol;\n                packedRGBA[dst] = matrix[src];\n                packedRGBA[dst + 1] = matrix[src + 1];\n                packedRGBA[dst + 2] = matrix[src + oneRow];\n                packedRGBA[dst + 3] = matrix[src + oneRow + 1];\n                dst += 4;\n            }\n            dst += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = columns - 1;\n        var dst = (textureWidth - 1) * 4;\n        var srcStride = 2 * columns;\n        var dstStride = textureWidth * 4;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            packedRGBA[dst] = matrix[src];\n            packedRGBA[dst + 2] = matrix[src + columns];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (rows - 1) * columns;\n        var dst = (textureHeight - 1) * textureWidth * 4;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            packedRGBA[dst++] = matrix[src++];\n            packedRGBA[dst++] = matrix[src++];\n            dst += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        packedRGBA[packedRGBA.length - 4] = matrix[matrix.length - 1];\n    }\n    return packedRGBA;\n}\nexports.encodeMatrixToPackedRGBA = encodeMatrixToPackedRGBA;\nfunction decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix) {\n    var requiredSize = rows * columns;\n    if (requiredSize < matrix.length) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    {\n        var srcStride = oddWidth ? 4 : 0;\n        var dstStride = columns + (oddWidth ? 1 : 0);\n        var src = 0;\n        var dstRow1 = 0;\n        var dstRow2 = columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n            }\n            src += srcStride;\n            dstRow1 += dstStride;\n            dstRow2 += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = (textureWidth - 1) * 4;\n        var dst = columns - 1;\n        var srcStride = textureWidth * 4;\n        var dstStride = 2 * columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            matrix[dst] = packedRGBA[src];\n            matrix[dst + columns] = packedRGBA[src + 2];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (textureHeight - 1) * textureWidth * 4;\n        var dst = (rows - 1) * columns;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            matrix[dst++] = packedRGBA[src++];\n            matrix[dst++] = packedRGBA[src++];\n            src += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        matrix[matrix.length - 1] = packedRGBA[packedRGBA.length - 4];\n    }\n    return matrix;\n}\nexports.decodeMatrixFromPackedRGBA = decodeMatrixFromPackedRGBA;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/tex_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js":
/*!****************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC) {\n        var shapeKey = getKeyFromTextureShape(shapeRC);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        return this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape) {\n        var shapeKey = getKeyFromTextureShape(shape);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        for (var shape in this.freeTextures) {\n            if (this.freeTextures.hasOwnProperty(shape)) {\n                for (var i = 0; i < this.freeTextures[shape].length; i++) {\n                    this.gpgpu.deleteMatrixTexture(this.freeTextures[shape][i]);\n                }\n            }\n        }\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC90ZXh0dXJlX21hbmFnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC90ZXh0dXJlX21hbmFnZXIuanM/ODJiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBUZXh0dXJlTWFuYWdlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGV4dHVyZU1hbmFnZXIoZ3BncHUpIHtcbiAgICAgICAgdGhpcy5ncGdwdSA9IGdwZ3B1O1xuICAgICAgICB0aGlzLm51bVVzZWRUZXh0dXJlcyA9IDA7XG4gICAgICAgIHRoaXMubnVtRnJlZVRleHR1cmVzID0gMDtcbiAgICAgICAgdGhpcy5mcmVlVGV4dHVyZXMgPSB7fTtcbiAgICAgICAgdGhpcy5sb2dFbmFibGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMudXNlZFRleHR1cmVDb3VudCA9IHt9O1xuICAgIH1cbiAgICBUZXh0dXJlTWFuYWdlci5wcm90b3R5cGUuYWNxdWlyZVRleHR1cmUgPSBmdW5jdGlvbiAoc2hhcGVSQykge1xuICAgICAgICB2YXIgc2hhcGVLZXkgPSBnZXRLZXlGcm9tVGV4dHVyZVNoYXBlKHNoYXBlUkMpO1xuICAgICAgICBpZiAoIShzaGFwZUtleSBpbiB0aGlzLmZyZWVUZXh0dXJlcykpIHtcbiAgICAgICAgICAgIHRoaXMuZnJlZVRleHR1cmVzW3NoYXBlS2V5XSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghKHNoYXBlS2V5IGluIHRoaXMudXNlZFRleHR1cmVDb3VudCkpIHtcbiAgICAgICAgICAgIHRoaXMudXNlZFRleHR1cmVDb3VudFtzaGFwZUtleV0gPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXNlZFRleHR1cmVDb3VudFtzaGFwZUtleV0rKztcbiAgICAgICAgaWYgKHRoaXMuZnJlZVRleHR1cmVzW3NoYXBlS2V5XS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLm51bUZyZWVUZXh0dXJlcy0tO1xuICAgICAgICAgICAgdGhpcy5udW1Vc2VkVGV4dHVyZXMrKztcbiAgICAgICAgICAgIHRoaXMubG9nKCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5mcmVlVGV4dHVyZXNbc2hhcGVLZXldLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5udW1Vc2VkVGV4dHVyZXMrKztcbiAgICAgICAgdGhpcy5sb2coKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3BncHUuY3JlYXRlTWF0cml4VGV4dHVyZShzaGFwZVJDWzBdLCBzaGFwZVJDWzFdKTtcbiAgICB9O1xuICAgIFRleHR1cmVNYW5hZ2VyLnByb3RvdHlwZS5yZWxlYXNlVGV4dHVyZSA9IGZ1bmN0aW9uICh0ZXh0dXJlLCBzaGFwZSkge1xuICAgICAgICB2YXIgc2hhcGVLZXkgPSBnZXRLZXlGcm9tVGV4dHVyZVNoYXBlKHNoYXBlKTtcbiAgICAgICAgaWYgKCEoc2hhcGVLZXkgaW4gdGhpcy5mcmVlVGV4dHVyZXMpKSB7XG4gICAgICAgICAgICB0aGlzLmZyZWVUZXh0dXJlc1tzaGFwZUtleV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZyZWVUZXh0dXJlc1tzaGFwZUtleV0ucHVzaCh0ZXh0dXJlKTtcbiAgICAgICAgdGhpcy5udW1GcmVlVGV4dHVyZXMrKztcbiAgICAgICAgdGhpcy5udW1Vc2VkVGV4dHVyZXMtLTtcbiAgICAgICAgdGhpcy51c2VkVGV4dHVyZUNvdW50W3NoYXBlS2V5XS0tO1xuICAgICAgICB0aGlzLmxvZygpO1xuICAgIH07XG4gICAgVGV4dHVyZU1hbmFnZXIucHJvdG90eXBlLmxvZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmxvZ0VuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG90YWwgPSB0aGlzLm51bUZyZWVUZXh0dXJlcyArIHRoaXMubnVtVXNlZFRleHR1cmVzO1xuICAgICAgICBjb25zb2xlLmxvZygnRnJlZS9Vc2VkJywgdGhpcy5udW1GcmVlVGV4dHVyZXMgKyBcIiAvIFwiICsgdGhpcy5udW1Vc2VkVGV4dHVyZXMsIFwiKFwiICsgdG90YWwgKyBcIilcIik7XG4gICAgfTtcbiAgICBUZXh0dXJlTWFuYWdlci5wcm90b3R5cGUuZ2V0TnVtVXNlZFRleHR1cmVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5udW1Vc2VkVGV4dHVyZXM7XG4gICAgfTtcbiAgICBUZXh0dXJlTWFuYWdlci5wcm90b3R5cGUuZ2V0TnVtRnJlZVRleHR1cmVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5udW1GcmVlVGV4dHVyZXM7XG4gICAgfTtcbiAgICBUZXh0dXJlTWFuYWdlci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZm9yICh2YXIgc2hhcGUgaW4gdGhpcy5mcmVlVGV4dHVyZXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmZyZWVUZXh0dXJlcy5oYXNPd25Qcm9wZXJ0eShzaGFwZSkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZnJlZVRleHR1cmVzW3NoYXBlXS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdwZ3B1LmRlbGV0ZU1hdHJpeFRleHR1cmUodGhpcy5mcmVlVGV4dHVyZXNbc2hhcGVdW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBUZXh0dXJlTWFuYWdlcjtcbn0oKSk7XG5leHBvcnRzLlRleHR1cmVNYW5hZ2VyID0gVGV4dHVyZU1hbmFnZXI7XG5mdW5jdGlvbiBnZXRLZXlGcm9tVGV4dHVyZVNoYXBlKHNoYXBlUm93c0NvbCkge1xuICAgIHJldHVybiBzaGFwZVJvd3NDb2xbMF0gKyBcIl9cIiArIHNoYXBlUm93c0NvbFsxXTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/texture_manager.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\");\nvar TileProgram = (function () {\n    function TileProgram(aShape, reps) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return TileProgram;\n}());\nexports.TileProgram = TileProgram;\nfunction getSourceCoords(aShape) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"imod(resRC, \" + aShape[0] + \")\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n    }\n    return sourceCoords.join();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC90aWxlX2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL3RpbGVfZ3B1LmpzP2NmY2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgc2hhZGVyX2NvbXBpbGVyXzEgPSByZXF1aXJlKFwiLi9zaGFkZXJfY29tcGlsZXJcIik7XG52YXIgVGlsZVByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRpbGVQcm9ncmFtKGFTaGFwZSwgcmVwcykge1xuICAgICAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBbJ0EnXTtcbiAgICAgICAgdmFyIG91dHB1dFNoYXBlID0gbmV3IEFycmF5KGFTaGFwZS5sZW5ndGgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG91dHB1dFNoYXBlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBvdXRwdXRTaGFwZVtpXSA9IGFTaGFwZVtpXSAqIHJlcHNbaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZSA9IG91dHB1dFNoYXBlO1xuICAgICAgICB0aGlzLnJhbmsgPSBvdXRwdXRTaGFwZS5sZW5ndGg7XG4gICAgICAgIHZhciBkdHlwZSA9IHNoYWRlcl9jb21waWxlcl8xLmdldENvb3Jkc0RhdGFUeXBlKHRoaXMucmFuayk7XG4gICAgICAgIHZhciBzb3VyY2VDb29yZHMgPSBnZXRTb3VyY2VDb29yZHMoYVNoYXBlKTtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgXCIgKyBkdHlwZSArIFwiIHJlc1JDID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBzZXRPdXRwdXQoZ2V0QShcIiArIHNvdXJjZUNvb3JkcyArIFwiKSk7XFxuICAgICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIFRpbGVQcm9ncmFtO1xufSgpKTtcbmV4cG9ydHMuVGlsZVByb2dyYW0gPSBUaWxlUHJvZ3JhbTtcbmZ1bmN0aW9uIGdldFNvdXJjZUNvb3JkcyhhU2hhcGUpIHtcbiAgICB2YXIgcmFuayA9IGFTaGFwZS5sZW5ndGg7XG4gICAgaWYgKHJhbmsgPiA0KSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiVGlsZSBmb3IgcmFuayBcIiArIHJhbmsgKyBcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKTtcbiAgICB9XG4gICAgaWYgKHJhbmsgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIFwiaW1vZChyZXNSQywgXCIgKyBhU2hhcGVbMF0gKyBcIilcIjtcbiAgICB9XG4gICAgdmFyIGN1cnJlbnRDb29yZHMgPSBbJ3Jlc1JDLngnLCAncmVzUkMueScsICdyZXNSQy56JywgJ3Jlc1JDLncnXTtcbiAgICB2YXIgc291cmNlQ29vcmRzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhU2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgc291cmNlQ29vcmRzLnB1c2goXCJpbW9kKFwiICsgY3VycmVudENvb3Jkc1tpXSArIFwiLCBcIiArIGFTaGFwZVtpXSArIFwiKVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvdXJjZUNvb3Jkcy5qb2luKCk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/tile_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/deeplearn/dist/math/backends/webgl/shader_compiler.js\");\nvar TransposeProgram = (function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}());\nexports.TransposeProgram = TransposeProgram;\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 4) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC90cmFuc3Bvc2VfZ3B1LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvdHJhbnNwb3NlX2dwdS5qcz85M2MyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNoYWRlcl9jb21waWxlcl8xID0gcmVxdWlyZShcIi4vc2hhZGVyX2NvbXBpbGVyXCIpO1xudmFyIFRyYW5zcG9zZVByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRyYW5zcG9zZVByb2dyYW0oYVNoYXBlLCBuZXdEaW0pIHtcbiAgICAgICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWydBJ107XG4gICAgICAgIHZhciBvdXRwdXRTaGFwZSA9IG5ldyBBcnJheShhU2hhcGUubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvdXRwdXRTaGFwZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgb3V0cHV0U2hhcGVbaV0gPSBhU2hhcGVbbmV3RGltW2ldXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0cHV0U2hhcGU7XG4gICAgICAgIHRoaXMucmFuayA9IG91dHB1dFNoYXBlLmxlbmd0aDtcbiAgICAgICAgdmFyIGR0eXBlID0gc2hhZGVyX2NvbXBpbGVyXzEuZ2V0Q29vcmRzRGF0YVR5cGUodGhpcy5yYW5rKTtcbiAgICAgICAgdmFyIHN3aXRjaGVkID0gZ2V0U3dpdGNoZWRDb29yZHMobmV3RGltKTtcbiAgICAgICAgdGhpcy51c2VyQ29kZSA9IFwiXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBcIiArIGR0eXBlICsgXCIgcmVzUkMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICBzZXRPdXRwdXQoZ2V0QShcIiArIHN3aXRjaGVkICsgXCIpKTtcXG4gICAgfVxcbiAgICBcIjtcbiAgICB9XG4gICAgcmV0dXJuIFRyYW5zcG9zZVByb2dyYW07XG59KCkpO1xuZXhwb3J0cy5UcmFuc3Bvc2VQcm9ncmFtID0gVHJhbnNwb3NlUHJvZ3JhbTtcbmZ1bmN0aW9uIGdldFN3aXRjaGVkQ29vcmRzKG5ld0RpbSkge1xuICAgIHZhciByYW5rID0gbmV3RGltLmxlbmd0aDtcbiAgICBpZiAocmFuayA+IDQpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJUcmFuc3Bvc2UgZm9yIHJhbmsgXCIgKyByYW5rICsgXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7XG4gICAgfVxuICAgIHZhciBvcmlnaW5hbE9yZGVyID0gWydyZXNSQy54JywgJ3Jlc1JDLnknLCAncmVzUkMueicsICdyZXNSQy53J107XG4gICAgdmFyIHN3aXRjaGVkQ29vcmRzID0gbmV3IEFycmF5KHJhbmspO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3RGltLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHN3aXRjaGVkQ29vcmRzW25ld0RpbVtpXV0gPSBvcmlnaW5hbE9yZGVyW2ldO1xuICAgIH1cbiAgICByZXR1cm4gc3dpdGNoZWRDb29yZHMuam9pbigpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/transpose_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnaryOpProgram = (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nexports.CHECK_NAN_SNIPPET = \"\\n  if (isNaN(x)) {\\n    return x;\\n  }\\n\";\nexports.ABS = \"\\n  return abs(x);\\n\";\nexports.RELU = exports.CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexports.ELU = \"\\n  return (x >= 0.0) ? x : (exp(x) - 1.0);\\n\";\nexports.ELU_DER = \"\\n  return (x >= 0.0) ? 1.0 : exp(x);\\n\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = 1.7580993408473768599402175208123;\\n  float scale = 1.0507009873554804934193349852946;\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction LEAKY_RELU(alpha) {\n    return \"\\n    return (x >= 0.0) ? x : \" + alpha + \" * x;\\n  \";\n}\nexports.LEAKY_RELU = LEAKY_RELU;\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return exports.CHECK_NAN_SNIPPET + (\"\\n    return (x == x) ? (x > 0.0 ? 1.0 : float(\" + alpha + \")) : x;\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"\\n  return -x;\\n\";\nexports.CEIL = \"\\n  return ceil(x);\\n\";\nexports.FLOOR = \"\\n  return floor(x);\\n\";\nexports.EXP = \"\\n  return exp(x);\\n\";\nexports.LOG = \"\\n  return log(x);\\n\";\nexports.SQRT = exports.CHECK_NAN_SNIPPET + \"\\n  return sqrt(x);\\n\";\nexports.SIGMOID = \"\\n  return 1.0 / (1.0 + exp(-1.0 * x));\\n\";\nexports.SIN = exports.CHECK_NAN_SNIPPET + \"\\n  return sin(x);\\n\";\nexports.COS = exports.CHECK_NAN_SNIPPET + \"\\n  return cos(x);\\n\";\nexports.TAN = \"\\n  return tan(x);\\n\";\nexports.ASIN = exports.CHECK_NAN_SNIPPET + \"\\n  return asin(x);\\n\";\nexports.ACOS = exports.CHECK_NAN_SNIPPET + \"\\n  return acos(x);\\n\";\nexports.ATAN = exports.CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.SQUARE = \"\\n  return x * x;\\n\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC91bmFyeW9wX2dwdS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2JhY2tlbmRzL3dlYmdsL3VuYXJ5b3BfZ3B1LmpzP2VmNDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgVW5hcnlPcFByb2dyYW0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVuYXJ5T3BQcm9ncmFtKGFTaGFwZSwgb3BTbmlwcGV0KSB7XG4gICAgICAgIHRoaXMudmFyaWFibGVOYW1lcyA9IFsnQSddO1xuICAgICAgICB0aGlzLm91dHB1dFNoYXBlID0gYVNoYXBlO1xuICAgICAgICB0aGlzLnVzZXJDb2RlID0gXCJcXG4gICAgICBmbG9hdCB1bmFyeU9wZXJhdGlvbihmbG9hdCB4KSB7XFxuICAgICAgICBcIiArIG9wU25pcHBldCArIFwiXFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGZsb2F0IHggPSBnZXRBQXRPdXRDb29yZHMoKTtcXG4gICAgICAgIGZsb2F0IHkgPSB1bmFyeU9wZXJhdGlvbih4KTtcXG5cXG4gICAgICAgIHNldE91dHB1dCh5KTtcXG4gICAgICB9XFxuICAgIFwiO1xuICAgIH1cbiAgICByZXR1cm4gVW5hcnlPcFByb2dyYW07XG59KCkpO1xuZXhwb3J0cy5VbmFyeU9wUHJvZ3JhbSA9IFVuYXJ5T3BQcm9ncmFtO1xuZXhwb3J0cy5DSEVDS19OQU5fU05JUFBFVCA9IFwiXFxuICBpZiAoaXNOYU4oeCkpIHtcXG4gICAgcmV0dXJuIHg7XFxuICB9XFxuXCI7XG5leHBvcnRzLkFCUyA9IFwiXFxuICByZXR1cm4gYWJzKHgpO1xcblwiO1xuZXhwb3J0cy5SRUxVID0gZXhwb3J0cy5DSEVDS19OQU5fU05JUFBFVCArIFwiXFxuICByZXR1cm4gKHggPCAwLjApID8gMC4wIDogeDtcXG5cIjtcbmV4cG9ydHMuRUxVID0gXCJcXG4gIHJldHVybiAoeCA+PSAwLjApID8geCA6IChleHAoeCkgLSAxLjApO1xcblwiO1xuZXhwb3J0cy5FTFVfREVSID0gXCJcXG4gIHJldHVybiAoeCA+PSAwLjApID8gMS4wIDogZXhwKHgpO1xcblwiO1xuZXhwb3J0cy5TRUxVID0gXCJcXG4gIC8vIFN0YWJsZSBhbmQgQXR0cmFjdGluZyBGaXhlZCBQb2ludCAoMCwgMSkgZm9yIE5vcm1hbGl6ZWQgV2VpZ2h0cy5cXG4gIC8vIHNlZTogaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDI1MTVcXG4gIGZsb2F0IHNjYWxlQWxwaGEgPSAxLjc1ODA5OTM0MDg0NzM3Njg1OTk0MDIxNzUyMDgxMjM7XFxuICBmbG9hdCBzY2FsZSA9IDEuMDUwNzAwOTg3MzU1NDgwNDkzNDE5MzM0OTg1Mjk0NjtcXG4gIHJldHVybiAoeCA+PSAwLjApID8gc2NhbGUgKiB4IDogc2NhbGVBbHBoYSAqIChleHAoeCkgLSAxLjApO1xcblwiO1xuZnVuY3Rpb24gTEVBS1lfUkVMVShhbHBoYSkge1xuICAgIHJldHVybiBcIlxcbiAgICByZXR1cm4gKHggPj0gMC4wKSA/IHggOiBcIiArIGFscGhhICsgXCIgKiB4O1xcbiAgXCI7XG59XG5leHBvcnRzLkxFQUtZX1JFTFUgPSBMRUFLWV9SRUxVO1xuZnVuY3Rpb24gU1RFUChhbHBoYSkge1xuICAgIGlmIChhbHBoYSA9PT0gdm9pZCAwKSB7IGFscGhhID0gMC4wOyB9XG4gICAgcmV0dXJuIGV4cG9ydHMuQ0hFQ0tfTkFOX1NOSVBQRVQgKyAoXCJcXG4gICAgcmV0dXJuICh4ID09IHgpID8gKHggPiAwLjAgPyAxLjAgOiBmbG9hdChcIiArIGFscGhhICsgXCIpKSA6IHg7XFxuICBcIik7XG59XG5leHBvcnRzLlNURVAgPSBTVEVQO1xuZXhwb3J0cy5ORUcgPSBcIlxcbiAgcmV0dXJuIC14O1xcblwiO1xuZXhwb3J0cy5DRUlMID0gXCJcXG4gIHJldHVybiBjZWlsKHgpO1xcblwiO1xuZXhwb3J0cy5GTE9PUiA9IFwiXFxuICByZXR1cm4gZmxvb3IoeCk7XFxuXCI7XG5leHBvcnRzLkVYUCA9IFwiXFxuICByZXR1cm4gZXhwKHgpO1xcblwiO1xuZXhwb3J0cy5MT0cgPSBcIlxcbiAgcmV0dXJuIGxvZyh4KTtcXG5cIjtcbmV4cG9ydHMuU1FSVCA9IGV4cG9ydHMuQ0hFQ0tfTkFOX1NOSVBQRVQgKyBcIlxcbiAgcmV0dXJuIHNxcnQoeCk7XFxuXCI7XG5leHBvcnRzLlNJR01PSUQgPSBcIlxcbiAgcmV0dXJuIDEuMCAvICgxLjAgKyBleHAoLTEuMCAqIHgpKTtcXG5cIjtcbmV4cG9ydHMuU0lOID0gZXhwb3J0cy5DSEVDS19OQU5fU05JUFBFVCArIFwiXFxuICByZXR1cm4gc2luKHgpO1xcblwiO1xuZXhwb3J0cy5DT1MgPSBleHBvcnRzLkNIRUNLX05BTl9TTklQUEVUICsgXCJcXG4gIHJldHVybiBjb3MoeCk7XFxuXCI7XG5leHBvcnRzLlRBTiA9IFwiXFxuICByZXR1cm4gdGFuKHgpO1xcblwiO1xuZXhwb3J0cy5BU0lOID0gZXhwb3J0cy5DSEVDS19OQU5fU05JUFBFVCArIFwiXFxuICByZXR1cm4gYXNpbih4KTtcXG5cIjtcbmV4cG9ydHMuQUNPUyA9IGV4cG9ydHMuQ0hFQ0tfTkFOX1NOSVBQRVQgKyBcIlxcbiAgcmV0dXJuIGFjb3MoeCk7XFxuXCI7XG5leHBvcnRzLkFUQU4gPSBleHBvcnRzLkNIRUNLX05BTl9TTklQUEVUICsgXCJcXG4gIHJldHVybiBhdGFuKHgpO1xcblwiO1xuZXhwb3J0cy5TSU5IID0gXCJcXG4gIGZsb2F0IGUyeCA9IGV4cCh4KTtcXG4gIHJldHVybiAoZTJ4IC0gMS4wIC8gZTJ4KSAvIDIuMDtcXG5cIjtcbmV4cG9ydHMuQ09TSCA9IFwiXFxuICBmbG9hdCBlMnggPSBleHAoLXgpO1xcbiAgcmV0dXJuIChlMnggKyAxLjAgLyBlMngpIC8gMi4wO1xcblwiO1xuZXhwb3J0cy5UQU5IID0gXCJcXG4gIGZsb2F0IGUyeCA9IGV4cCgtMi4wICogYWJzKHgpKTtcXG4gIHJldHVybiBzaWduKHgpICogKDEuMCAtIGUyeCkgLyAoMS4wICsgZTJ4KTtcXG5cIjtcbmV4cG9ydHMuU1FVQVJFID0gXCJcXG4gIHJldHVybiB4ICogeDtcXG5cIjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/unaryop_gpu.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = __webpack_require__(/*! ../../../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar environment_1 = __webpack_require__(/*! ../../../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes, attribLocations) {\n    var loc = -1;\n    if ((attribLocations != null) && (attribute in attribLocations)) {\n        loc = attribLocations[attribute];\n    }\n    else {\n        loc = gl.getAttribLocation(program, attribute);\n    }\n    if (loc === -1) {\n        return;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9iYWNrZW5kcy93ZWJnbC93ZWJnbF91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvYmFja2VuZHMvd2ViZ2wvd2ViZ2xfdXRpbC5qcz9lMzU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE1BWF9URVhUVVJFX1NJWkUgPSBudWxsO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vLi4vLi4vdXRpbFwiKTtcbnZhciBlbnZpcm9ubWVudF8xID0gcmVxdWlyZShcIi4uLy4uLy4uL2Vudmlyb25tZW50XCIpO1xuZnVuY3Rpb24gY3JlYXRlV2ViR0xSZW5kZXJpbmdDb250ZXh0KGF0dHJpYnV0ZXMpIHtcbiAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgY2FudmFzLndpZHRoID0gMTtcbiAgICBjYW52YXMuaGVpZ2h0ID0gMTtcbiAgICByZXR1cm4gY3JlYXRlV2ViR0xSZW5kZXJpbmdDb250ZXh0RnJvbUNhbnZhcyhjYW52YXMsIGF0dHJpYnV0ZXMpO1xufVxuZXhwb3J0cy5jcmVhdGVXZWJHTFJlbmRlcmluZ0NvbnRleHQgPSBjcmVhdGVXZWJHTFJlbmRlcmluZ0NvbnRleHQ7XG5mdW5jdGlvbiBjcmVhdGVXZWJHTFJlbmRlcmluZ0NvbnRleHRGcm9tQ2FudmFzKGNhbnZhcywgYXR0cmlidXRlcykge1xuICAgIHZhciBnbDtcbiAgICB2YXIgd2ViZ2xWZXJzaW9uID0gZW52aXJvbm1lbnRfMS5FTlYuZ2V0KCdXRUJHTF9WRVJTSU9OJyk7XG4gICAgaWYgKHdlYmdsVmVyc2lvbiA9PT0gMikge1xuICAgICAgICBnbCA9IGNhbnZhcy5nZXRDb250ZXh0KCd3ZWJnbDInLCBhdHRyaWJ1dGVzKTtcbiAgICB9XG4gICAgZWxzZSBpZiAod2ViZ2xWZXJzaW9uID09PSAxKSB7XG4gICAgICAgIGdsID0gKGNhbnZhcy5nZXRDb250ZXh0KCd3ZWJnbCcsIGF0dHJpYnV0ZXMpIHx8XG4gICAgICAgICAgICBjYW52YXMuZ2V0Q29udGV4dCgnZXhwZXJpbWVudGFsLXdlYmdsJywgYXR0cmlidXRlcykpO1xuICAgIH1cbiAgICBpZiAod2ViZ2xWZXJzaW9uID09PSAwIHx8IGdsID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBXZWJHTC4nKTtcbiAgICB9XG4gICAgcmV0dXJuIGdsO1xufVxuZXhwb3J0cy5jcmVhdGVXZWJHTFJlbmRlcmluZ0NvbnRleHRGcm9tQ2FudmFzID0gY3JlYXRlV2ViR0xSZW5kZXJpbmdDb250ZXh0RnJvbUNhbnZhcztcbmZ1bmN0aW9uIGNhbGxBbmRDaGVjayhnbCwgZnVuYykge1xuICAgIHZhciByZXR1cm5WYWx1ZSA9IGZ1bmMoKTtcbiAgICBjaGVja1dlYkdMRXJyb3IoZ2wpO1xuICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbn1cbmV4cG9ydHMuY2FsbEFuZENoZWNrID0gY2FsbEFuZENoZWNrO1xudmFyIHdlYkdMRGVidWdFcnJvckNoZWNraW5nRW5hYmxlZCA9IGZhbHNlO1xuZnVuY3Rpb24gZW5hYmxlRGVidWdXZWJHTEVycm9yQ2hlY2tpbmcoZW5hYmxlZCkge1xuICAgIHdlYkdMRGVidWdFcnJvckNoZWNraW5nRW5hYmxlZCA9IGVuYWJsZWQ7XG59XG5leHBvcnRzLmVuYWJsZURlYnVnV2ViR0xFcnJvckNoZWNraW5nID0gZW5hYmxlRGVidWdXZWJHTEVycm9yQ2hlY2tpbmc7XG5mdW5jdGlvbiBjaGVja1dlYkdMRXJyb3IoZ2wpIHtcbiAgICBpZiAod2ViR0xEZWJ1Z0Vycm9yQ2hlY2tpbmdFbmFibGVkKSB7XG4gICAgICAgIHZhciBlcnJvciA9IGdsLmdldEVycm9yKCk7XG4gICAgICAgIGlmIChlcnJvciAhPT0gZ2wuTk9fRVJST1IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignV2ViR0wgRXJyb3I6ICcgKyBnZXRXZWJHTEVycm9yTWVzc2FnZShnbCwgZXJyb3IpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuY2hlY2tXZWJHTEVycm9yID0gY2hlY2tXZWJHTEVycm9yO1xuZnVuY3Rpb24gZ2V0V2ViR0xFcnJvck1lc3NhZ2UoZ2wsIHN0YXR1cykge1xuICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICAgIGNhc2UgZ2wuTk9fRVJST1I6XG4gICAgICAgICAgICByZXR1cm4gJ05PX0VSUk9SJztcbiAgICAgICAgY2FzZSBnbC5JTlZBTElEX0VOVU06XG4gICAgICAgICAgICByZXR1cm4gJ0lOVkFMSURfRU5VTSc7XG4gICAgICAgIGNhc2UgZ2wuSU5WQUxJRF9WQUxVRTpcbiAgICAgICAgICAgIHJldHVybiAnSU5WQUxJRF9WQUxVRSc7XG4gICAgICAgIGNhc2UgZ2wuSU5WQUxJRF9PUEVSQVRJT046XG4gICAgICAgICAgICByZXR1cm4gJ0lOVkFMSURfT1BFUkFUSU9OJztcbiAgICAgICAgY2FzZSBnbC5JTlZBTElEX0ZSQU1FQlVGRkVSX09QRVJBVElPTjpcbiAgICAgICAgICAgIHJldHVybiAnSU5WQUxJRF9GUkFNRUJVRkZFUl9PUEVSQVRJT04nO1xuICAgICAgICBjYXNlIGdsLk9VVF9PRl9NRU1PUlk6XG4gICAgICAgICAgICByZXR1cm4gJ09VVF9PRl9NRU1PUlknO1xuICAgICAgICBjYXNlIGdsLkNPTlRFWFRfTE9TVF9XRUJHTDpcbiAgICAgICAgICAgIHJldHVybiAnQ09OVEVYVF9MT1NUX1dFQkdMJztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBcIlVua25vd24gZXJyb3IgY29kZSBcIiArIHN0YXR1cztcbiAgICB9XG59XG5leHBvcnRzLmdldFdlYkdMRXJyb3JNZXNzYWdlID0gZ2V0V2ViR0xFcnJvck1lc3NhZ2U7XG5mdW5jdGlvbiBnZXRFeHRlbnNpb25PclRocm93KGdsLCBleHRlbnNpb25OYW1lKSB7XG4gICAgcmV0dXJuIHRocm93SWZOdWxsKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5nZXRFeHRlbnNpb24oZXh0ZW5zaW9uTmFtZSk7IH0sICdFeHRlbnNpb24gXCInICsgZXh0ZW5zaW9uTmFtZSArICdcIiBub3Qgc3VwcG9ydGVkIG9uIHRoaXMgYnJvd3Nlci4nKTtcbn1cbmV4cG9ydHMuZ2V0RXh0ZW5zaW9uT3JUaHJvdyA9IGdldEV4dGVuc2lvbk9yVGhyb3c7XG5mdW5jdGlvbiBjcmVhdGVWZXJ0ZXhTaGFkZXIoZ2wsIHZlcnRleFNoYWRlclNvdXJjZSkge1xuICAgIHZhciB2ZXJ0ZXhTaGFkZXIgPSB0aHJvd0lmTnVsbChnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuY3JlYXRlU2hhZGVyKGdsLlZFUlRFWF9TSEFERVIpOyB9LCAnVW5hYmxlIHRvIGNyZWF0ZSB2ZXJ0ZXggV2ViR0xTaGFkZXIuJyk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5zaGFkZXJTb3VyY2UodmVydGV4U2hhZGVyLCB2ZXJ0ZXhTaGFkZXJTb3VyY2UpOyB9KTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmNvbXBpbGVTaGFkZXIodmVydGV4U2hhZGVyKTsgfSk7XG4gICAgaWYgKGdsLmdldFNoYWRlclBhcmFtZXRlcih2ZXJ0ZXhTaGFkZXIsIGdsLkNPTVBJTEVfU1RBVFVTKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2coZ2wuZ2V0U2hhZGVySW5mb0xvZyh2ZXJ0ZXhTaGFkZXIpKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY29tcGlsZSB2ZXJ0ZXggc2hhZGVyLicpO1xuICAgIH1cbiAgICByZXR1cm4gdmVydGV4U2hhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVWZXJ0ZXhTaGFkZXIgPSBjcmVhdGVWZXJ0ZXhTaGFkZXI7XG5mdW5jdGlvbiBjcmVhdGVGcmFnbWVudFNoYWRlcihnbCwgZnJhZ21lbnRTaGFkZXJTb3VyY2UpIHtcbiAgICB2YXIgZnJhZ21lbnRTaGFkZXIgPSB0aHJvd0lmTnVsbChnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuY3JlYXRlU2hhZGVyKGdsLkZSQUdNRU5UX1NIQURFUik7IH0sICdVbmFibGUgdG8gY3JlYXRlIGZyYWdtZW50IFdlYkdMU2hhZGVyLicpO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuc2hhZGVyU291cmNlKGZyYWdtZW50U2hhZGVyLCBmcmFnbWVudFNoYWRlclNvdXJjZSk7IH0pO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuY29tcGlsZVNoYWRlcihmcmFnbWVudFNoYWRlcik7IH0pO1xuICAgIGlmIChnbC5nZXRTaGFkZXJQYXJhbWV0ZXIoZnJhZ21lbnRTaGFkZXIsIGdsLkNPTVBJTEVfU1RBVFVTKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgbG9nU2hhZGVyU291cmNlQW5kSW5mb0xvZyhmcmFnbWVudFNoYWRlclNvdXJjZSwgZ2wuZ2V0U2hhZGVySW5mb0xvZyhmcmFnbWVudFNoYWRlcikpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjb21waWxlIGZyYWdtZW50IHNoYWRlci4nKTtcbiAgICB9XG4gICAgcmV0dXJuIGZyYWdtZW50U2hhZGVyO1xufVxuZXhwb3J0cy5jcmVhdGVGcmFnbWVudFNoYWRlciA9IGNyZWF0ZUZyYWdtZW50U2hhZGVyO1xudmFyIGxpbmVOdW1iZXJSZWdleCA9IC9FUlJPUjogWzAtOV0rOihbMC05XSspOi9nO1xuZnVuY3Rpb24gbG9nU2hhZGVyU291cmNlQW5kSW5mb0xvZyhzaGFkZXJTb3VyY2UsIHNoYWRlckluZm9Mb2cpIHtcbiAgICB2YXIgbGluZU51bWJlclJlZ2V4UmVzdWx0ID0gbGluZU51bWJlclJlZ2V4LmV4ZWMoc2hhZGVySW5mb0xvZyk7XG4gICAgaWYgKGxpbmVOdW1iZXJSZWdleFJlc3VsdCA9PSBudWxsKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ291bGRuJ3QgcGFyc2UgbGluZSBudW1iZXIgaW4gZXJyb3I6IFwiICsgc2hhZGVySW5mb0xvZyk7XG4gICAgICAgIGNvbnNvbGUubG9nKHNoYWRlclNvdXJjZSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGxpbmVOdW1iZXIgPSArbGluZU51bWJlclJlZ2V4UmVzdWx0WzFdO1xuICAgIHZhciBzaGFkZXJMaW5lcyA9IHNoYWRlclNvdXJjZS5zcGxpdCgnXFxuJyk7XG4gICAgdmFyIHBhZCA9IHNoYWRlckxpbmVzLmxlbmd0aC50b1N0cmluZygpLmxlbmd0aCArIDI7XG4gICAgdmFyIGxpbmVzV2l0aExpbmVOdW1iZXJzID0gc2hhZGVyTGluZXMubWFwKGZ1bmN0aW9uIChsaW5lLCBsaW5lTnVtYmVyKSB7XG4gICAgICAgIHJldHVybiB1dGlsLnJpZ2h0UGFkKChsaW5lTnVtYmVyICsgMSkudG9TdHJpbmcoKSwgcGFkKSArIGxpbmU7XG4gICAgfSk7XG4gICAgdmFyIG1heExpbmVMZW5ndGggPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXNXaXRoTGluZU51bWJlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbWF4TGluZUxlbmd0aCA9IE1hdGgubWF4KGxpbmVzV2l0aExpbmVOdW1iZXJzW2ldLmxlbmd0aCwgbWF4TGluZUxlbmd0aCk7XG4gICAgfVxuICAgIHZhciBiZWZvcmVFcnJvckxpbmVzID0gbGluZXNXaXRoTGluZU51bWJlcnMuc2xpY2UoMCwgbGluZU51bWJlciAtIDEpO1xuICAgIHZhciBlcnJvckxpbmUgPSBsaW5lc1dpdGhMaW5lTnVtYmVycy5zbGljZShsaW5lTnVtYmVyIC0gMSwgbGluZU51bWJlcik7XG4gICAgdmFyIGFmdGVyRXJyb3JMaW5lcyA9IGxpbmVzV2l0aExpbmVOdW1iZXJzLnNsaWNlKGxpbmVOdW1iZXIpO1xuICAgIGNvbnNvbGUubG9nKGJlZm9yZUVycm9yTGluZXMuam9pbignXFxuJykpO1xuICAgIGNvbnNvbGUubG9nKHNoYWRlckluZm9Mb2cuc3BsaXQoJ1xcbicpWzBdKTtcbiAgICBjb25zb2xlLmxvZyhcIiVjIFwiICsgdXRpbC5yaWdodFBhZChlcnJvckxpbmVbMF0sIG1heExpbmVMZW5ndGgpLCAnYm9yZGVyOjFweCBzb2xpZCByZWQ7IGJhY2tncm91bmQtY29sb3I6I2UzZDJkMjsgY29sb3I6I2E2MTcxNycpO1xuICAgIGNvbnNvbGUubG9nKGFmdGVyRXJyb3JMaW5lcy5qb2luKCdcXG4nKSk7XG59XG5mdW5jdGlvbiBjcmVhdGVQcm9ncmFtKGdsKSB7XG4gICAgcmV0dXJuIHRocm93SWZOdWxsKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5jcmVhdGVQcm9ncmFtKCk7IH0sICdVbmFibGUgdG8gY3JlYXRlIFdlYkdMUHJvZ3JhbS4nKTtcbn1cbmV4cG9ydHMuY3JlYXRlUHJvZ3JhbSA9IGNyZWF0ZVByb2dyYW07XG5mdW5jdGlvbiBsaW5rUHJvZ3JhbShnbCwgcHJvZ3JhbSkge1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wubGlua1Byb2dyYW0ocHJvZ3JhbSk7IH0pO1xuICAgIGlmIChnbC5nZXRQcm9ncmFtUGFyYW1ldGVyKHByb2dyYW0sIGdsLkxJTktfU1RBVFVTKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2coZ2wuZ2V0UHJvZ3JhbUluZm9Mb2cocHJvZ3JhbSkpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBsaW5rIHZlcnRleCBhbmQgZnJhZ21lbnQgc2hhZGVycy4nKTtcbiAgICB9XG59XG5leHBvcnRzLmxpbmtQcm9ncmFtID0gbGlua1Byb2dyYW07XG5mdW5jdGlvbiB2YWxpZGF0ZVByb2dyYW0oZ2wsIHByb2dyYW0pIHtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLnZhbGlkYXRlUHJvZ3JhbShwcm9ncmFtKTsgfSk7XG4gICAgaWYgKGdsLmdldFByb2dyYW1QYXJhbWV0ZXIocHJvZ3JhbSwgZ2wuVkFMSURBVEVfU1RBVFVTKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2coZ2wuZ2V0UHJvZ3JhbUluZm9Mb2cocHJvZ3JhbSkpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NoYWRlciBwcm9ncmFtIHZhbGlkYXRpb24gZmFpbGVkLicpO1xuICAgIH1cbn1cbmV4cG9ydHMudmFsaWRhdGVQcm9ncmFtID0gdmFsaWRhdGVQcm9ncmFtO1xuZnVuY3Rpb24gY3JlYXRlU3RhdGljVmVydGV4QnVmZmVyKGdsLCBkYXRhKSB7XG4gICAgdmFyIGJ1ZmZlciA9IHRocm93SWZOdWxsKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5jcmVhdGVCdWZmZXIoKTsgfSwgJ1VuYWJsZSB0byBjcmVhdGUgV2ViR0xCdWZmZXInKTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXIpOyB9KTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJ1ZmZlckRhdGEoZ2wuQVJSQVlfQlVGRkVSLCBkYXRhLCBnbC5TVEFUSUNfRFJBVyk7IH0pO1xuICAgIHJldHVybiBidWZmZXI7XG59XG5leHBvcnRzLmNyZWF0ZVN0YXRpY1ZlcnRleEJ1ZmZlciA9IGNyZWF0ZVN0YXRpY1ZlcnRleEJ1ZmZlcjtcbmZ1bmN0aW9uIGNyZWF0ZVN0YXRpY0luZGV4QnVmZmVyKGdsLCBkYXRhKSB7XG4gICAgdmFyIGJ1ZmZlciA9IHRocm93SWZOdWxsKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5jcmVhdGVCdWZmZXIoKTsgfSwgJ1VuYWJsZSB0byBjcmVhdGUgV2ViR0xCdWZmZXInKTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRCdWZmZXIoZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIGJ1ZmZlcik7IH0pO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYnVmZmVyRGF0YShnbC5FTEVNRU5UX0FSUkFZX0JVRkZFUiwgZGF0YSwgZ2wuU1RBVElDX0RSQVcpOyB9KTtcbiAgICByZXR1cm4gYnVmZmVyO1xufVxuZXhwb3J0cy5jcmVhdGVTdGF0aWNJbmRleEJ1ZmZlciA9IGNyZWF0ZVN0YXRpY0luZGV4QnVmZmVyO1xuZnVuY3Rpb24gcXVlcnlNYXhUZXh0dXJlU2l6ZShnbCkge1xuICAgIGlmIChNQVhfVEVYVFVSRV9TSVpFICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIE1BWF9URVhUVVJFX1NJWkU7XG4gICAgfVxuICAgIE1BWF9URVhUVVJFX1NJWkUgPVxuICAgICAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmdldFBhcmFtZXRlcihnbC5NQVhfVEVYVFVSRV9TSVpFKTsgfSk7XG4gICAgcmV0dXJuIE1BWF9URVhUVVJFX1NJWkU7XG59XG5leHBvcnRzLnF1ZXJ5TWF4VGV4dHVyZVNpemUgPSBxdWVyeU1heFRleHR1cmVTaXplO1xuZnVuY3Rpb24gZ2V0Q2hhbm5lbHNQZXJUZXh0dXJlKCkge1xuICAgIGlmICghZW52aXJvbm1lbnRfMS5FTlYuZ2V0KCdXRUJHTF9GTE9BVF9URVhUVVJFX0VOQUJMRUQnKSkge1xuICAgICAgICByZXR1cm4gNDtcbiAgICB9XG4gICAgaWYgKGVudmlyb25tZW50XzEuRU5WLmdldCgnV0VCR0xfVkVSU0lPTicpID09PSAyKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gNDtcbn1cbmV4cG9ydHMuZ2V0Q2hhbm5lbHNQZXJUZXh0dXJlID0gZ2V0Q2hhbm5lbHNQZXJUZXh0dXJlO1xuZnVuY3Rpb24gY3JlYXRlVGV4dHVyZShnbCkge1xuICAgIHJldHVybiB0aHJvd0lmTnVsbChnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuY3JlYXRlVGV4dHVyZSgpOyB9LCAnVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTFRleHR1cmUuJyk7XG59XG5leHBvcnRzLmNyZWF0ZVRleHR1cmUgPSBjcmVhdGVUZXh0dXJlO1xuZnVuY3Rpb24gdmFsaWRhdGVUZXh0dXJlU2l6ZShnbCwgd2lkdGgsIGhlaWdodCkge1xuICAgIHZhciBtYXhUZXh0dXJlU2l6ZSA9IHF1ZXJ5TWF4VGV4dHVyZVNpemUoZ2wpO1xuICAgIGlmICgod2lkdGggPD0gMCkgfHwgKGhlaWdodCA8PSAwKSkge1xuICAgICAgICB2YXIgcmVxdWVzdGVkID0gXCJbXCIgKyB3aWR0aCArIFwieFwiICsgaGVpZ2h0ICsgXCJdXCI7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUmVxdWVzdGVkIHRleHR1cmUgc2l6ZSAnICsgcmVxdWVzdGVkICsgJyBpcyBpbnZhbGlkLicpO1xuICAgIH1cbiAgICBpZiAoKHdpZHRoID4gbWF4VGV4dHVyZVNpemUpIHx8IChoZWlnaHQgPiBtYXhUZXh0dXJlU2l6ZSkpIHtcbiAgICAgICAgdmFyIHJlcXVlc3RlZCA9IFwiW1wiICsgd2lkdGggKyBcInhcIiArIGhlaWdodCArIFwiXVwiO1xuICAgICAgICB2YXIgbWF4ID0gXCJbXCIgKyBtYXhUZXh0dXJlU2l6ZSArIFwieFwiICsgbWF4VGV4dHVyZVNpemUgKyBcIl1cIjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZXF1ZXN0ZWQgdGV4dHVyZSBzaXplICcgKyByZXF1ZXN0ZWQgK1xuICAgICAgICAgICAgJyBncmVhdGVyIHRoYW4gV2ViR0wgbWF4aW11bSBvbiB0aGlzIGJyb3dzZXIgLyBHUFUgJyArIG1heCArICcuJyk7XG4gICAgfVxufVxuZXhwb3J0cy52YWxpZGF0ZVRleHR1cmVTaXplID0gdmFsaWRhdGVUZXh0dXJlU2l6ZTtcbmZ1bmN0aW9uIGNyZWF0ZUZyYW1lYnVmZmVyKGdsKSB7XG4gICAgcmV0dXJuIHRocm93SWZOdWxsKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5jcmVhdGVGcmFtZWJ1ZmZlcigpOyB9LCAnVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTEZyYW1lYnVmZmVyLicpO1xufVxuZXhwb3J0cy5jcmVhdGVGcmFtZWJ1ZmZlciA9IGNyZWF0ZUZyYW1lYnVmZmVyO1xuZnVuY3Rpb24gYmluZFZlcnRleEJ1ZmZlclRvUHJvZ3JhbUF0dHJpYnV0ZShnbCwgcHJvZ3JhbSwgYXR0cmlidXRlLCBidWZmZXIsIGFycmF5RW50cmllc1Blckl0ZW0sIGl0ZW1TdHJpZGVJbkJ5dGVzLCBpdGVtT2Zmc2V0SW5CeXRlcywgYXR0cmliTG9jYXRpb25zKSB7XG4gICAgdmFyIGxvYyA9IC0xO1xuICAgIGlmICgoYXR0cmliTG9jYXRpb25zICE9IG51bGwpICYmIChhdHRyaWJ1dGUgaW4gYXR0cmliTG9jYXRpb25zKSkge1xuICAgICAgICBsb2MgPSBhdHRyaWJMb2NhdGlvbnNbYXR0cmlidXRlXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGxvYyA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByb2dyYW0sIGF0dHJpYnV0ZSk7XG4gICAgfVxuICAgIGlmIChsb2MgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgYnVmZmVyKTsgfSk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGxvYywgYXJyYXlFbnRyaWVzUGVySXRlbSwgZ2wuRkxPQVQsIGZhbHNlLCBpdGVtU3RyaWRlSW5CeXRlcywgaXRlbU9mZnNldEluQnl0ZXMpOyB9KTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGxvYyk7IH0pO1xufVxuZXhwb3J0cy5iaW5kVmVydGV4QnVmZmVyVG9Qcm9ncmFtQXR0cmlidXRlID0gYmluZFZlcnRleEJ1ZmZlclRvUHJvZ3JhbUF0dHJpYnV0ZTtcbmZ1bmN0aW9uIGJpbmRUZXh0dXJlVW5pdChnbCwgdGV4dHVyZSwgdGV4dHVyZVVuaXQpIHtcbiAgICB2YWxpZGF0ZVRleHR1cmVVbml0KGdsLCB0ZXh0dXJlVW5pdCk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5hY3RpdmVUZXh0dXJlKGdsLlRFWFRVUkUwICsgdGV4dHVyZVVuaXQpOyB9KTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHRleHR1cmUpOyB9KTtcbn1cbmV4cG9ydHMuYmluZFRleHR1cmVVbml0ID0gYmluZFRleHR1cmVVbml0O1xuZnVuY3Rpb24gdW5iaW5kVGV4dHVyZVVuaXQoZ2wsIHRleHR1cmVVbml0KSB7XG4gICAgdmFsaWRhdGVUZXh0dXJlVW5pdChnbCwgdGV4dHVyZVVuaXQpO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wuYWN0aXZlVGV4dHVyZShnbC5URVhUVVJFMCArIHRleHR1cmVVbml0KTsgfSk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTsgfSk7XG59XG5leHBvcnRzLnVuYmluZFRleHR1cmVVbml0ID0gdW5iaW5kVGV4dHVyZVVuaXQ7XG5mdW5jdGlvbiBnZXRQcm9ncmFtVW5pZm9ybUxvY2F0aW9uT3JUaHJvdyhnbCwgcHJvZ3JhbSwgdW5pZm9ybU5hbWUpIHtcbiAgICByZXR1cm4gdGhyb3dJZk51bGwoZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcm9ncmFtLCB1bmlmb3JtTmFtZSk7IH0sICd1bmlmb3JtIFwiJyArIHVuaWZvcm1OYW1lICsgJ1wiIG5vdCBwcmVzZW50IGluIHByb2dyYW0uJyk7XG59XG5leHBvcnRzLmdldFByb2dyYW1Vbmlmb3JtTG9jYXRpb25PclRocm93ID0gZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbk9yVGhyb3c7XG5mdW5jdGlvbiBiaW5kVGV4dHVyZVRvUHJvZ3JhbVVuaWZvcm1TYW1wbGVyKGdsLCBwcm9ncmFtLCB0ZXh0dXJlLCB1bmlmb3JtU2FtcGxlckxvY2F0aW9uLCB0ZXh0dXJlVW5pdCkge1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gYmluZFRleHR1cmVVbml0KGdsLCB0ZXh0dXJlLCB0ZXh0dXJlVW5pdCk7IH0pO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wudW5pZm9ybTFpKHVuaWZvcm1TYW1wbGVyTG9jYXRpb24sIHRleHR1cmVVbml0KTsgfSk7XG59XG5leHBvcnRzLmJpbmRUZXh0dXJlVG9Qcm9ncmFtVW5pZm9ybVNhbXBsZXIgPSBiaW5kVGV4dHVyZVRvUHJvZ3JhbVVuaWZvcm1TYW1wbGVyO1xuZnVuY3Rpb24gYmluZENhbnZhc1RvRnJhbWVidWZmZXIoZ2wpIHtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUiwgbnVsbCk7IH0pO1xuICAgIGNhbGxBbmRDaGVjayhnbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2wudmlld3BvcnQoMCwgMCwgZ2wuY2FudmFzLndpZHRoLCBnbC5jYW52YXMuaGVpZ2h0KTsgfSk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5zY2lzc29yKDAsIDAsIGdsLmNhbnZhcy53aWR0aCwgZ2wuY2FudmFzLmhlaWdodCk7IH0pO1xufVxuZXhwb3J0cy5iaW5kQ2FudmFzVG9GcmFtZWJ1ZmZlciA9IGJpbmRDYW52YXNUb0ZyYW1lYnVmZmVyO1xuZnVuY3Rpb24gYmluZENvbG9yVGV4dHVyZVRvRnJhbWVidWZmZXIoZ2wsIHRleHR1cmUsIGZyYW1lYnVmZmVyKSB7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsIGZyYW1lYnVmZmVyKTsgfSk7XG4gICAgY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiBnbC5mcmFtZWJ1ZmZlclRleHR1cmUyRChnbC5GUkFNRUJVRkZFUiwgZ2wuQ09MT1JfQVRUQUNITUVOVDAsIGdsLlRFWFRVUkVfMkQsIHRleHR1cmUsIDApOyB9KTtcbn1cbmV4cG9ydHMuYmluZENvbG9yVGV4dHVyZVRvRnJhbWVidWZmZXIgPSBiaW5kQ29sb3JUZXh0dXJlVG9GcmFtZWJ1ZmZlcjtcbmZ1bmN0aW9uIHVuYmluZENvbG9yVGV4dHVyZUZyb21GcmFtZWJ1ZmZlcihnbCwgZnJhbWVidWZmZXIpIHtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUiwgZnJhbWVidWZmZXIpOyB9KTtcbiAgICBjYWxsQW5kQ2hlY2soZ2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGdsLkZSQU1FQlVGRkVSLCBnbC5DT0xPUl9BVFRBQ0hNRU5UMCwgZ2wuVEVYVFVSRV8yRCwgbnVsbCwgMCk7IH0pO1xufVxuZXhwb3J0cy51bmJpbmRDb2xvclRleHR1cmVGcm9tRnJhbWVidWZmZXIgPSB1bmJpbmRDb2xvclRleHR1cmVGcm9tRnJhbWVidWZmZXI7XG5mdW5jdGlvbiB2YWxpZGF0ZUZyYW1lYnVmZmVyKGdsKSB7XG4gICAgdmFyIHN0YXR1cyA9IGdsLmNoZWNrRnJhbWVidWZmZXJTdGF0dXMoZ2wuRlJBTUVCVUZGRVIpO1xuICAgIGlmIChzdGF0dXMgIT09IGdsLkZSQU1FQlVGRkVSX0NPTVBMRVRFKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgYmluZGluZyBmcmFtZWJ1ZmZlcjogJyArIGdldEZyYW1lYnVmZmVyRXJyb3JNZXNzYWdlKGdsLCBzdGF0dXMpKTtcbiAgICB9XG59XG5leHBvcnRzLnZhbGlkYXRlRnJhbWVidWZmZXIgPSB2YWxpZGF0ZUZyYW1lYnVmZmVyO1xuZnVuY3Rpb24gZ2V0RnJhbWVidWZmZXJFcnJvck1lc3NhZ2UoZ2wsIHN0YXR1cykge1xuICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICAgIGNhc2UgZ2wuRlJBTUVCVUZGRVJfSU5DT01QTEVURV9BVFRBQ0hNRU5UOlxuICAgICAgICAgICAgcmV0dXJuICdGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0FUVEFDSE1FTlQnO1xuICAgICAgICBjYXNlIGdsLkZSQU1FQlVGRkVSX0lOQ09NUExFVEVfTUlTU0lOR19BVFRBQ0hNRU5UOlxuICAgICAgICAgICAgcmV0dXJuICdGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX01JU1NJTkdfQVRUQUNITUVOVCc7XG4gICAgICAgIGNhc2UgZ2wuRlJBTUVCVUZGRVJfSU5DT01QTEVURV9ESU1FTlNJT05TOlxuICAgICAgICAgICAgcmV0dXJuICdGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0RJTUVOU0lPTlMnO1xuICAgICAgICBjYXNlIGdsLkZSQU1FQlVGRkVSX1VOU1VQUE9SVEVEOlxuICAgICAgICAgICAgcmV0dXJuICdGUkFNRUJVRkZFUl9VTlNVUFBPUlRFRCc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gXCJ1bmtub3duIGVycm9yIFwiICsgc3RhdHVzO1xuICAgIH1cbn1cbmV4cG9ydHMuZ2V0RnJhbWVidWZmZXJFcnJvck1lc3NhZ2UgPSBnZXRGcmFtZWJ1ZmZlckVycm9yTWVzc2FnZTtcbmZ1bmN0aW9uIHRocm93SWZOdWxsKGdsLCByZXR1cm5UT3JOdWxsLCBmYWlsdXJlTWVzc2FnZSkge1xuICAgIHZhciB0T3JOdWxsID0gY2FsbEFuZENoZWNrKGdsLCBmdW5jdGlvbiAoKSB7IHJldHVybiByZXR1cm5UT3JOdWxsKCk7IH0pO1xuICAgIGlmICh0T3JOdWxsID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZhaWx1cmVNZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRPck51bGw7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVRleHR1cmVVbml0KGdsLCB0ZXh0dXJlVW5pdCkge1xuICAgIHZhciBtYXhUZXh0dXJlVW5pdCA9IGdsLk1BWF9DT01CSU5FRF9URVhUVVJFX0lNQUdFX1VOSVRTIC0gMTtcbiAgICB2YXIgZ2xUZXh0dXJlVW5pdCA9IHRleHR1cmVVbml0ICsgZ2wuVEVYVFVSRTA7XG4gICAgaWYgKGdsVGV4dHVyZVVuaXQgPCBnbC5URVhUVVJFMCB8fCBnbFRleHR1cmVVbml0ID4gbWF4VGV4dHVyZVVuaXQpIHtcbiAgICAgICAgdmFyIHRleHR1cmVVbml0UmFuZ2UgPSBcIltnbC5URVhUVVJFMCwgZ2wuVEVYVFVSRVwiICsgbWF4VGV4dHVyZVVuaXQgKyBcIl1cIjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGV4dHVyZVVuaXQgbXVzdCBiZSBpbiBcIiArIHRleHR1cmVVbml0UmFuZ2UgKyBcIi5cIik7XG4gICAgfVxufVxuZnVuY3Rpb24gZ2V0VGV4dHVyZVNoYXBlRnJvbUxvZ2ljYWxTaGFwZShnbCwgbG9nU2hhcGUpIHtcbiAgICBpZiAobG9nU2hhcGUubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHZhciBzcXVlZXplUmVzdWx0ID0gdXRpbC5zcXVlZXplU2hhcGUobG9nU2hhcGUpO1xuICAgICAgICBsb2dTaGFwZSA9IHNxdWVlemVSZXN1bHQubmV3U2hhcGU7XG4gICAgfVxuICAgIHZhciBtYXhUZXhTaXplID0gcXVlcnlNYXhUZXh0dXJlU2l6ZShnbCk7XG4gICAgdmFyIHNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUobG9nU2hhcGUpO1xuICAgIGlmIChsb2dTaGFwZS5sZW5ndGggPD0gMSAmJiBzaXplIDw9IG1heFRleFNpemUpIHtcbiAgICAgICAgcmV0dXJuIFtzaXplLCAxXTtcbiAgICB9XG4gICAgZWxzZSBpZiAobG9nU2hhcGUubGVuZ3RoID09PSAyICYmIGxvZ1NoYXBlWzBdIDw9IG1heFRleFNpemUgJiZcbiAgICAgICAgbG9nU2hhcGVbMV0gPD0gbWF4VGV4U2l6ZSkge1xuICAgICAgICByZXR1cm4gbG9nU2hhcGU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGxvZ1NoYXBlLmxlbmd0aCA9PT0gMyAmJiBsb2dTaGFwZVswXSA8PSBtYXhUZXhTaXplICYmXG4gICAgICAgIGxvZ1NoYXBlWzFdICogbG9nU2hhcGVbMl0gPD0gbWF4VGV4U2l6ZSkge1xuICAgICAgICByZXR1cm4gW2xvZ1NoYXBlWzBdLCBsb2dTaGFwZVsxXSAqIGxvZ1NoYXBlWzJdXTtcbiAgICB9XG4gICAgZWxzZSBpZiAobG9nU2hhcGUubGVuZ3RoID09PSA0ICYmIGxvZ1NoYXBlWzBdIDw9IG1heFRleFNpemUgJiZcbiAgICAgICAgbG9nU2hhcGVbMV0gKiBsb2dTaGFwZVsyXSAqIGxvZ1NoYXBlWzNdIDw9IG1heFRleFNpemUpIHtcbiAgICAgICAgcmV0dXJuIFtsb2dTaGFwZVswXSwgbG9nU2hhcGVbMV0gKiBsb2dTaGFwZVsyXSAqIGxvZ1NoYXBlWzNdXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB1dGlsLnNpemVUb1NxdWFyaXNoU2hhcGUoc2l6ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5nZXRUZXh0dXJlU2hhcGVGcm9tTG9naWNhbFNoYXBlID0gZ2V0VGV4dHVyZVNoYXBlRnJvbUxvZ2ljYWxTaGFwZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/backends/webgl/webgl_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/broadcast_util.js":
/*!************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/broadcast_util.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getBroadcastDims(inShape, outShape) {\n    var inRank = inShape.length;\n    var dims = [];\n    for (var i = 0; i < inRank; i++) {\n        var dim = inRank - 1 - i;\n        var a = inShape[dim] || 1;\n        var b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\nexports.getBroadcastDims = getBroadcastDims;\nfunction broadcastDimsAreOuter(dims) {\n    for (var i = 0; i < dims.length; i++) {\n        if (dims[i] !== i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.broadcastDimsAreOuter = broadcastDimsAreOuter;\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    var result = [];\n    var errMsg = \"Operands could not be broadcast together with shapes \" +\n        (shapeA + \" and \" + shapeB + \".\");\n    var l = Math.max(shapeA.length, shapeB.length);\n    for (var i = 0; i < l; i++) {\n        var a = shapeA[shapeA.length - i - 1] || 1;\n        var b = shapeB[shapeB.length - i - 1] || 1;\n        if (a > 1 && b > 1 && a !== b) {\n            throw Error(errMsg);\n        }\n        result.unshift(Math.max(a, b));\n    }\n    return result;\n}\nexports.assertAndGetBroadcastShape = assertAndGetBroadcastShape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9icm9hZGNhc3RfdXRpbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2Jyb2FkY2FzdF91dGlsLmpzP2QyZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBnZXRCcm9hZGNhc3REaW1zKGluU2hhcGUsIG91dFNoYXBlKSB7XG4gICAgdmFyIGluUmFuayA9IGluU2hhcGUubGVuZ3RoO1xuICAgIHZhciBkaW1zID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpblJhbms7IGkrKykge1xuICAgICAgICB2YXIgZGltID0gaW5SYW5rIC0gMSAtIGk7XG4gICAgICAgIHZhciBhID0gaW5TaGFwZVtkaW1dIHx8IDE7XG4gICAgICAgIHZhciBiID0gb3V0U2hhcGVbb3V0U2hhcGUubGVuZ3RoIC0gMSAtIGldIHx8IDE7XG4gICAgICAgIGlmIChiID4gMSAmJiBhID09PSAxKSB7XG4gICAgICAgICAgICBkaW1zLnVuc2hpZnQoZGltKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGltcztcbn1cbmV4cG9ydHMuZ2V0QnJvYWRjYXN0RGltcyA9IGdldEJyb2FkY2FzdERpbXM7XG5mdW5jdGlvbiBicm9hZGNhc3REaW1zQXJlT3V0ZXIoZGltcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGltcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZGltc1tpXSAhPT0gaSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5icm9hZGNhc3REaW1zQXJlT3V0ZXIgPSBicm9hZGNhc3REaW1zQXJlT3V0ZXI7XG5mdW5jdGlvbiBhc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZShzaGFwZUEsIHNoYXBlQikge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIgZXJyTXNnID0gXCJPcGVyYW5kcyBjb3VsZCBub3QgYmUgYnJvYWRjYXN0IHRvZ2V0aGVyIHdpdGggc2hhcGVzIFwiICtcbiAgICAgICAgKHNoYXBlQSArIFwiIGFuZCBcIiArIHNoYXBlQiArIFwiLlwiKTtcbiAgICB2YXIgbCA9IE1hdGgubWF4KHNoYXBlQS5sZW5ndGgsIHNoYXBlQi5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBhID0gc2hhcGVBW3NoYXBlQS5sZW5ndGggLSBpIC0gMV0gfHwgMTtcbiAgICAgICAgdmFyIGIgPSBzaGFwZUJbc2hhcGVCLmxlbmd0aCAtIGkgLSAxXSB8fCAxO1xuICAgICAgICBpZiAoYSA+IDEgJiYgYiA+IDEgJiYgYSAhPT0gYikge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoZXJyTXNnKTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQudW5zaGlmdChNYXRoLm1heChhLCBiKSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmFzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlID0gYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/broadcast_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/concat_util.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/concat_util.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nfunction assertParams(aShape, bShape, axis) {\n    var aRank = aShape.length;\n    var bRank = bShape.length;\n    util.assert(aShape.length === bShape.length, \"Error in concat\" + aRank + \"D: rank of x1 (\" + aRank + \") and x2 (\" + bRank + \") \" +\n        \"must be the same.\");\n    util.assert(axis >= 0 && axis < aRank, \"Error in concat\" + aRank + \"D: axis must be \" +\n        (\"between 0 and \" + (aRank - 1) + \".\"));\n    for (var i = 0; i < aRank; i++) {\n        util.assert((i === axis) || (aShape[i] === bShape[i]), \"Error in concat\" + aRank + \"D: Shape (\" + aShape + \") does not match \" +\n            (\"(\" + bShape + \") along the non-concatenated axis \" + i + \".\"));\n    }\n}\nexports.assertParams = assertParams;\nfunction computeOutShape(x1Shape, x2Shape, axis) {\n    util.assert(x1Shape.length === x2Shape.length, 'x1 and x2 should have the same rank.');\n    var outputShape = x1Shape.slice();\n    outputShape[axis] += x2Shape[axis];\n    return outputShape;\n}\nexports.computeOutShape = computeOutShape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9jb25jYXRfdXRpbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2NvbmNhdF91dGlsLmpzPzg0NjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdXRpbCA9IHJlcXVpcmUoXCIuLi91dGlsXCIpO1xuZnVuY3Rpb24gYXNzZXJ0UGFyYW1zKGFTaGFwZSwgYlNoYXBlLCBheGlzKSB7XG4gICAgdmFyIGFSYW5rID0gYVNoYXBlLmxlbmd0aDtcbiAgICB2YXIgYlJhbmsgPSBiU2hhcGUubGVuZ3RoO1xuICAgIHV0aWwuYXNzZXJ0KGFTaGFwZS5sZW5ndGggPT09IGJTaGFwZS5sZW5ndGgsIFwiRXJyb3IgaW4gY29uY2F0XCIgKyBhUmFuayArIFwiRDogcmFuayBvZiB4MSAoXCIgKyBhUmFuayArIFwiKSBhbmQgeDIgKFwiICsgYlJhbmsgKyBcIikgXCIgK1xuICAgICAgICBcIm11c3QgYmUgdGhlIHNhbWUuXCIpO1xuICAgIHV0aWwuYXNzZXJ0KGF4aXMgPj0gMCAmJiBheGlzIDwgYVJhbmssIFwiRXJyb3IgaW4gY29uY2F0XCIgKyBhUmFuayArIFwiRDogYXhpcyBtdXN0IGJlIFwiICtcbiAgICAgICAgKFwiYmV0d2VlbiAwIGFuZCBcIiArIChhUmFuayAtIDEpICsgXCIuXCIpKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFSYW5rOyBpKyspIHtcbiAgICAgICAgdXRpbC5hc3NlcnQoKGkgPT09IGF4aXMpIHx8IChhU2hhcGVbaV0gPT09IGJTaGFwZVtpXSksIFwiRXJyb3IgaW4gY29uY2F0XCIgKyBhUmFuayArIFwiRDogU2hhcGUgKFwiICsgYVNoYXBlICsgXCIpIGRvZXMgbm90IG1hdGNoIFwiICtcbiAgICAgICAgICAgIChcIihcIiArIGJTaGFwZSArIFwiKSBhbG9uZyB0aGUgbm9uLWNvbmNhdGVuYXRlZCBheGlzIFwiICsgaSArIFwiLlwiKSk7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnRQYXJhbXMgPSBhc3NlcnRQYXJhbXM7XG5mdW5jdGlvbiBjb21wdXRlT3V0U2hhcGUoeDFTaGFwZSwgeDJTaGFwZSwgYXhpcykge1xuICAgIHV0aWwuYXNzZXJ0KHgxU2hhcGUubGVuZ3RoID09PSB4MlNoYXBlLmxlbmd0aCwgJ3gxIGFuZCB4MiBzaG91bGQgaGF2ZSB0aGUgc2FtZSByYW5rLicpO1xuICAgIHZhciBvdXRwdXRTaGFwZSA9IHgxU2hhcGUuc2xpY2UoKTtcbiAgICBvdXRwdXRTaGFwZVtheGlzXSArPSB4MlNoYXBlW2F4aXNdO1xuICAgIHJldHVybiBvdXRwdXRTaGFwZTtcbn1cbmV4cG9ydHMuY29tcHV0ZU91dFNoYXBlID0gY29tcHV0ZU91dFNoYXBlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/concat_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/conv_util.js":
/*!*******************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/conv_util.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nfunction computePool2DInfo(inShape, filterSize, strides, pad, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = parseTupleParam(filterSize), filterHeight = _a[0], filterWidth = _a[1];\n    var filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, pad, false, dataFormat);\n}\nexports.computePool2DInfo = computePool2DInfo;\nfunction computeConv2DInfo(inShape, filterShape, strides, pad, depthwise, dataFormat) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1], batchSize = _a[0], inHeight = _a[1], inWidth = _a[2], inChannels = _a[3];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inHeight = inShape[1], inWidth = inShape[2], inChannels = inShape[3];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inHeight = inShape[2], inWidth = inShape[3];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterHeight = filterShape[0], filterWidth = filterShape[1], filterChannels = filterShape[3];\n    var _b = parseTupleParam(strides), strideHeight = _b[0], strideWidth = _b[1];\n    var _c = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth), padInfo = _c.padInfo, outHeight = _c.outHeight, outWidth = _c.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv2DInfo = computeConv2DInfo;\nfunction computeOutputShape3D(inShape, fieldSize, outDepth, stride, zeroPad) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputRows = inShape[0];\n    var inputCols = inShape[1];\n    var outputRows = (inputRows - fieldSize + 2 * zeroPad) / stride + 1;\n    util.assert(util.isInt(outputRows), \"The output # of rows (\" + outputRows + \") must be an integer. Change the \" +\n        \"stride and/or zero pad parameters\");\n    var outputCols = (inputCols - fieldSize + 2 * zeroPad) / stride + 1;\n    util.assert(util.isInt(outputCols), \"The output # of columns (\" + outputCols + \") must be an integer. Change \" +\n        \"the stride and/or zero pad parameters\");\n    return [outputRows, outputCols, outDepth];\n}\nexports.computeOutputShape3D = computeOutputShape3D;\nfunction computeDefaultPad(inputShape, fieldSize, stride) {\n    return Math.floor((inputShape[0] * (stride - 1) - stride + fieldSize) / 2);\n}\nexports.computeDefaultPad = computeDefaultPad;\nfunction computeWeightsShape4D(inputDepth, outputDepth, filterHeight, filterWidth) {\n    return [filterHeight, filterWidth, inputDepth, outputDepth];\n}\nexports.computeWeightsShape4D = computeWeightsShape4D;\nfunction computeDilatedRC(rc, origStride) {\n    var rowsDilated = (rc[0] - 1) * origStride + 1;\n    var colsDilated = (rc[1] - 1) * origStride + 1;\n    return [rowsDilated, colsDilated];\n}\nexports.computeDilatedRC = computeDilatedRC;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth) {\n    var padInfo;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad };\n        var outShape = computeOutputShape3D([inHeight, inWidth, 1], filterHeight, 1, strideHeight, pad);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        var top_1 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_1;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_1, bottom: bottom, left: left, right: right };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0 };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outHeight: outHeight, outWidth: outWidth };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/conv_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/cost_functions.js":
/*!************************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/cost_functions.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ndarray_1 = __webpack_require__(/*! ./ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar SquareCostFunc = (function () {\n    function SquareCostFunc() {\n        this.halfOne = ndarray_1.Scalar.new(0.5);\n    }\n    SquareCostFunc.prototype.cost = function (math, x1, x2) {\n        var diff = math.subStrict(x1, x2);\n        var diffSquared = math.elementWiseMul(diff, diff);\n        var result = math.scalarTimesArray(this.halfOne, diffSquared);\n        diff.dispose();\n        diffSquared.dispose();\n        return result;\n    };\n    SquareCostFunc.prototype.der = function (math, x1, x2) {\n        return math.subStrict(x1, x2);\n    };\n    SquareCostFunc.prototype.dispose = function () {\n        this.halfOne.dispose();\n    };\n    return SquareCostFunc;\n}());\nexports.SquareCostFunc = SquareCostFunc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9jb3N0X2Z1bmN0aW9ucy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL2Nvc3RfZnVuY3Rpb25zLmpzP2MxN2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbmRhcnJheV8xID0gcmVxdWlyZShcIi4vbmRhcnJheVwiKTtcbnZhciBTcXVhcmVDb3N0RnVuYyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3F1YXJlQ29zdEZ1bmMoKSB7XG4gICAgICAgIHRoaXMuaGFsZk9uZSA9IG5kYXJyYXlfMS5TY2FsYXIubmV3KDAuNSk7XG4gICAgfVxuICAgIFNxdWFyZUNvc3RGdW5jLnByb3RvdHlwZS5jb3N0ID0gZnVuY3Rpb24gKG1hdGgsIHgxLCB4Mikge1xuICAgICAgICB2YXIgZGlmZiA9IG1hdGguc3ViU3RyaWN0KHgxLCB4Mik7XG4gICAgICAgIHZhciBkaWZmU3F1YXJlZCA9IG1hdGguZWxlbWVudFdpc2VNdWwoZGlmZiwgZGlmZik7XG4gICAgICAgIHZhciByZXN1bHQgPSBtYXRoLnNjYWxhclRpbWVzQXJyYXkodGhpcy5oYWxmT25lLCBkaWZmU3F1YXJlZCk7XG4gICAgICAgIGRpZmYuZGlzcG9zZSgpO1xuICAgICAgICBkaWZmU3F1YXJlZC5kaXNwb3NlKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBTcXVhcmVDb3N0RnVuYy5wcm90b3R5cGUuZGVyID0gZnVuY3Rpb24gKG1hdGgsIHgxLCB4Mikge1xuICAgICAgICByZXR1cm4gbWF0aC5zdWJTdHJpY3QoeDEsIHgyKTtcbiAgICB9O1xuICAgIFNxdWFyZUNvc3RGdW5jLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhhbGZPbmUuZGlzcG9zZSgpO1xuICAgIH07XG4gICAgcmV0dXJuIFNxdWFyZUNvc3RGdW5jO1xufSgpKTtcbmV4cG9ydHMuU3F1YXJlQ29zdEZ1bmMgPSBTcXVhcmVDb3N0RnVuYztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/cost_functions.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/math.js":
/*!**************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/math.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar axis_util = __webpack_require__(/*! ./axis_util */ \"./node_modules/deeplearn/dist/math/axis_util.js\");\nvar backend_1 = __webpack_require__(/*! ./backends/backend */ \"./node_modules/deeplearn/dist/math/backends/backend.js\");\nvar backend_engine_1 = __webpack_require__(/*! ./backends/backend_engine */ \"./node_modules/deeplearn/dist/math/backends/backend_engine.js\");\nvar matmul_1 = __webpack_require__(/*! ./backends/types/matmul */ \"./node_modules/deeplearn/dist/math/backends/types/matmul.js\");\nvar broadcast_util = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/deeplearn/dist/math/broadcast_util.js\");\nvar concat_util = __webpack_require__(/*! ./concat_util */ \"./node_modules/deeplearn/dist/math/concat_util.js\");\nvar conv_util = __webpack_require__(/*! ./conv_util */ \"./node_modules/deeplearn/dist/math/conv_util.js\");\nvar ndarray_1 = __webpack_require__(/*! ./ndarray */ \"./node_modules/deeplearn/dist/math/ndarray.js\");\nvar slice_util = __webpack_require__(/*! ./slice_util */ \"./node_modules/deeplearn/dist/math/slice_util.js\");\nvar NDArrayMath = (function () {\n    function NDArrayMath(backend, safeMode) {\n        this.safeMode = safeMode;\n        this.numArrays = 0;\n        this.customBackend = false;\n        this.ndarrayScopes = [];\n        this.ndarraysToKeep = [];\n        this.activeScopeNDArraysToKeep = [];\n        if (typeof backend === 'string') {\n            this.backend = backend_1.BACKEND_REGISTRY[backend];\n        }\n        else {\n            this.customBackend = true;\n            this.backend = backend;\n        }\n        this.backendEngine = new backend_engine_1.BackendEngine(this.backend);\n        environment_1.ENV.setGlobalMath(this);\n    }\n    NDArrayMath.prototype.getNumArrays = function () {\n        return this.numArrays;\n    };\n    NDArrayMath.prototype.register = function (a) {\n        this.track(a);\n        this.numArrays++;\n    };\n    NDArrayMath.prototype.writePixels = function (id, pixels, numChannels) {\n        this.backend.writePixels(id, pixels, numChannels);\n    };\n    NDArrayMath.prototype.write = function (id, values, dtype, shape) {\n        this.backend.write(id, values, dtype, shape);\n    };\n    NDArrayMath.prototype.readSync = function (id) {\n        return this.backend.readSync(id);\n    };\n    NDArrayMath.prototype.read = function (id) {\n        return this.backend.read(id);\n    };\n    NDArrayMath.prototype.scope = function (scopeFn) {\n        var _this = this;\n        this.startScope();\n        var keepFn = function (ndarray) { return _this.keep(ndarray); };\n        var trackFn = function (ndarray) { return _this.track(ndarray); };\n        var result = scopeFn(keepFn, trackFn);\n        if (result instanceof Promise) {\n            result.then(function (r) { return _this.endScope(r); });\n            return result;\n        }\n        else {\n            this.endScope(result);\n            return result;\n        }\n    };\n    NDArrayMath.prototype.enableDebugMode = function () {\n        this.backendEngine.enableDebugMode();\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    };\n    NDArrayMath.prototype.startScope = function () {\n        var newScope = [];\n        this.ndarrayScopes.push(newScope);\n        this.activeScope = newScope;\n        var newNDArraysToKeep = [];\n        this.ndarraysToKeep.push(newNDArraysToKeep);\n        this.activeScopeNDArraysToKeep = newNDArraysToKeep;\n    };\n    NDArrayMath.prototype.extractNDArraysFromScopeResult = function (result) {\n        if (result == null) {\n            return [];\n        }\n        if (result instanceof ndarray_1.NDArray) {\n            return [result];\n        }\n        var list = [];\n        var resultObj = result;\n        for (var k in resultObj) {\n            var val = resultObj[k];\n            if (val instanceof ndarray_1.NDArray) {\n                list.push(val);\n            }\n        }\n        return list;\n    };\n    NDArrayMath.prototype.endScope = function (result) {\n        var _this = this;\n        var arraysToKeep = this.activeScopeNDArraysToKeep;\n        var resultArrays = this.extractNDArraysFromScopeResult(result);\n        arraysToKeep = arraysToKeep.concat(resultArrays);\n        for (var i = 0; i < this.activeScope.length; i++) {\n            var ndarray = this.activeScope[i];\n            if (this.isNDArrayDataInList(ndarray, arraysToKeep)) {\n                continue;\n            }\n            ndarray.dispose();\n        }\n        this.ndarrayScopes.pop();\n        this.activeScope = this.ndarrayScopes.length === 0 ?\n            null :\n            this.ndarrayScopes[this.ndarrayScopes.length - 1];\n        resultArrays.forEach(function (val) {\n            if (!_this.isNDArrayDataInList(val, _this.activeScopeNDArraysToKeep)) {\n                _this.track(val);\n            }\n        });\n        this.ndarraysToKeep.pop();\n        this.activeScopeNDArraysToKeep = this.ndarraysToKeep.length === 0 ?\n            null :\n            this.ndarraysToKeep[this.ndarraysToKeep.length - 1];\n    };\n    NDArrayMath.prototype.isNDArrayDataInList = function (ndarray, ndarrayList) {\n        for (var i = 0; i < ndarrayList.length; i++) {\n            if (ndarrayList[i].id === ndarray.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    NDArrayMath.prototype.keep = function (result) {\n        if (this.activeScope == null) {\n            if (this.safeMode) {\n                throw new Error('You are using math in safe mode. Enclose all ' +\n                    'math.method() calls inside a scope: ' +\n                    'math.scope(() => {math.method();...}) to avoid memory ' +\n                    'leaks.');\n            }\n            return result;\n        }\n        this.activeScopeNDArraysToKeep.push(result);\n        return result;\n    };\n    NDArrayMath.prototype.track = function (result) {\n        if (this.activeScope == null) {\n            if (this.safeMode) {\n                throw new Error('You are using math in safe mode. Enclose all ' +\n                    'math.method() calls inside a scope: ' +\n                    'math.scope(() => {math.method();...}) to avoid memory ' +\n                    'leaks.');\n            }\n            return result;\n        }\n        this.activeScope.push(result);\n        return result;\n    };\n    NDArrayMath.prototype.dispose = function () {\n        if (this.customBackend) {\n            this.backend.dispose();\n        }\n    };\n    NDArrayMath.prototype.matMul = function (a, b, aOrientation, bOrientation) {\n        if (aOrientation === void 0) { aOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        if (bOrientation === void 0) { bOrientation = matmul_1.MatrixOrientation.REGULAR; }\n        var innerShapeA = (aOrientation === matmul_1.MatrixOrientation.REGULAR) ? a.shape[1] : a.shape[0];\n        var innerShapeB = (bOrientation === matmul_1.MatrixOrientation.REGULAR) ? b.shape[0] : b.shape[1];\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\n            (\" and \" + b.rank + \".\"));\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n            (innerShapeB + \") of NDArrays with shapes \" + a.shape + \" and \") +\n            (b.shape + \" and orientations \" + matmul_1.MatrixOrientation[aOrientation]) +\n            (\" and \" + matmul_1.MatrixOrientation[bOrientation] + \" must match.\"));\n        return this.backendEngine.executeKernel('MatMul', { inputs: { a: a, b: b }, args: { aOrientation: aOrientation, bOrientation: bOrientation } });\n    };\n    NDArrayMath.prototype.executeOp = function (name, f) {\n        return f();\n    };\n    NDArrayMath.prototype.vectorTimesMatrix = function (v, matrix) {\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\n        return this.matMul(v.as2D(1, -1), matrix).as1D();\n    };\n    NDArrayMath.prototype.matrixTimesVector = function (matrix, v) {\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\n            \"must match inner dimension of second rank 2 input, but got \" +\n            (\"shape \" + matrix.shape + \".\"));\n        return this.matMul(matrix, v.as2D(-1, 1)).as1D();\n    };\n    NDArrayMath.prototype.dotProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\n            (v2.size + \") must match.\"));\n        return this.matMul(v1.as2D(1, -1), v2.as2D(-1, 1)).asScalar();\n    };\n    NDArrayMath.prototype.outerProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        return this.matMul(v1.as2D(-1, 1), v2.as2D(1, -1));\n    };\n    NDArrayMath.prototype.clone = function (x) {\n        return this.backendEngine.executeKernel('Clone', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.reshape = function (ndarray, newShape) {\n        console.warn('math.reshape() is deprecated. Please call reshape() ' +\n            'directly on the ndarray object');\n        return ndarray.reshape(newShape);\n    };\n    NDArrayMath.prototype.slice1D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, [begin], [size]);\n        return this.backendEngine.executeKernel('Slice1D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice2D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice2D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice3D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice3D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.slice4D = function (x, begin, size) {\n        slice_util.assertParamsValid(x, begin, size);\n        return this.backendEngine.executeKernel('Slice4D', { inputs: { x: x }, args: { begin: begin, size: size } });\n    };\n    NDArrayMath.prototype.concat1D = function (a, b) {\n        concat_util.assertParams(a.shape, b.shape, 0);\n        return this.backendEngine.executeKernel('Concat1D', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.concat2D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat2D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.concat3D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat3D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.concat4D = function (a, b, axis) {\n        concat_util.assertParams(a.shape, b.shape, axis);\n        return this.backendEngine.executeKernel('Concat4D', { inputs: { a: a, b: b }, args: { axis: axis } });\n    };\n    NDArrayMath.prototype.logSumExp = function (input, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, input.shape);\n        return this.executeOp('logSumExp', function () {\n            var xMax = _this.max(input, axes, true);\n            var a = _this.subtract(input, xMax);\n            var b = _this.exp(a);\n            var c = _this.sum(b, axes);\n            var d = _this.log(c);\n            var res = _this.add(xMax.reshape(d.shape), d);\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.sum = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('sum', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Sum', { inputs: { x: x }, args: { axes: axes } });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.mean = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\n        var reduceShape = shapes[1];\n        var reduceSize = util.sizeFromShape(reduceShape);\n        return this.executeOp('mean', function () {\n            return _this.scope(function (keep, track) {\n                var res = _this.divide(x, track(ndarray_1.Scalar.new(reduceSize)));\n                return _this.sum(res, axis, keepDims);\n            });\n        });\n    };\n    NDArrayMath.prototype.argMin = function (x, axis) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('argMin', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            return _this.backendEngine.executeKernel('ArgMin', { inputs: { x: x }, args: { axes: axes } });\n        });\n    };\n    NDArrayMath.prototype.argMax = function (x, axis) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('argMax', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            return _this.backendEngine.executeKernel('ArgMax', { inputs: { x: x }, args: { axes: axes } });\n        });\n    };\n    NDArrayMath.prototype.argMaxEquals = function (x1, x2) {\n        var _this = this;\n        util.assertShapesMatch(x1.shape, x2.shape, 'Error in argMaxEquals: ');\n        return this.executeOp('argMaxEquals', function () { return _this.scope(function () {\n            return _this.equal(_this.argMax(x1), _this.argMax(x2));\n        }); });\n    };\n    NDArrayMath.prototype.equal = function (a, b) {\n        return this.backendEngine.executeKernel('Equal', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.equalStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in equalStrict: ');\n        return this.equal(a, b);\n    };\n    NDArrayMath.prototype.topK = function (x, k) {\n        var _this = this;\n        util.assert(k <= x.size, \"Error in topK: k value (\" + k + \") must be less than size of input \" +\n            (\"ndarray, got shape \" + x.shape + \".\"));\n        var values;\n        var indices;\n        this.executeOp('topK', function () {\n            values = _this.backendEngine.executeKernel('TopKValues', { inputs: { x: x }, args: { k: k } });\n            indices = _this.backendEngine.executeKernel('TopKIndices', { inputs: { x: x }, args: { k: k } });\n            return values;\n        });\n        var result = { values: values, indices: indices };\n        return result;\n    };\n    NDArrayMath.prototype.min = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('min', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Min', { inputs: { x: x }, args: { axes: axes } });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.max = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getPermutedAxes(axes, x.rank);\n        return this.executeOp('max', function () {\n            if (permutedAxes != null) {\n                x = _this.transpose(x, permutedAxes);\n                axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n            }\n            var res = _this.backendEngine.executeKernel('Max', { inputs: { x: x }, args: { axes: axes } });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n                return res.reshape(newShape);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.softmax = function (logits, dim) {\n        var _this = this;\n        if (dim === void 0) { dim = -1; }\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error('Softmax along a non-last dimension is not yet supported. ' +\n                (\"Logits was rank \" + logits.rank + \" and dim was \" + dim));\n        }\n        return this.executeOp('softmax', function () {\n            return _this.scope(function () {\n                var lse = _this.logSumExp(logits, [dim], true);\n                var logResult = _this.subtract(logits, lse);\n                return _this.exp(logResult);\n            });\n        });\n    };\n    NDArrayMath.prototype.switchDim = function (a, newDim) {\n        return this.transpose(a, newDim);\n    };\n    NDArrayMath.prototype.tile = function (x, reps) {\n        util.assert(x.rank === reps.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of reps \" + reps + \".\"));\n        return this.backendEngine.executeKernel('Tile', { inputs: { x: x }, args: { reps: reps } });\n    };\n    NDArrayMath.prototype.transpose = function (x, perm) {\n        if (perm == null) {\n            perm = x.shape.map(function (s, i) { return i; }).reverse();\n        }\n        util.assert(x.rank === perm.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of perm \" + perm + \".\"));\n        return this.backendEngine.executeKernel('Transpose', { inputs: { x: x }, args: { perm: perm } });\n    };\n    NDArrayMath.prototype.scalarPlusArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarPlusArray: first argument must be rank 0, but got \" +\n            (\"rank \" + c.rank + \".\"));\n        return this.add(c, a);\n    };\n    NDArrayMath.prototype.scalarMinusArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarMinusArray: first argument must be rank 0, but got \" +\n            (\"rank \" + c.rank + \".\"));\n        return this.subtract(c, a);\n    };\n    NDArrayMath.prototype.arrayMinusScalar = function (a, c) {\n        util.assert(c.size === 1, \"Error in arrayMinusScalar: second argument must be rank 0, but \" +\n            (\"got rank \" + c.rank + \".\"));\n        return this.subtract(a, c);\n    };\n    NDArrayMath.prototype.neg = function (x) {\n        return this.backendEngine.executeKernel('Neg', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.add = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Add', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.addStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in addStrict: ');\n        return this.add(a, b);\n    };\n    NDArrayMath.prototype.subtract = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Sub', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.pow = function (a, b) {\n        util.assert(b.dtype === 'int32', 'only supports int32 data type for the exponent parameter.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Pow', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.powStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in powStrict: ');\n        return this.pow(a, b);\n    };\n    NDArrayMath.prototype.sub = function (a, b) {\n        return this.subtract(a, b);\n    };\n    NDArrayMath.prototype.subStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in subStrict: ');\n        return this.subtract(a, b);\n    };\n    NDArrayMath.prototype.multiply = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Mul', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.elementWiseMul = function (a, b) {\n        return this.multiplyStrict(a, b);\n    };\n    NDArrayMath.prototype.multiplyStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in multiplyStrict: ');\n        return this.multiply(a, b);\n    };\n    NDArrayMath.prototype.divide = function (a, b) {\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return this.backendEngine.executeKernel('Div', { inputs: { a: a, b: b } });\n    };\n    NDArrayMath.prototype.divideStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in divideStrict: ');\n        return this.divide(a, b);\n    };\n    NDArrayMath.prototype.scalarDividedByArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in scalarDividedByArray: first argument must be rank 0, but \" +\n            (\"got NDArray of rank \" + c.rank + \".\"));\n        return this.divide(c, a);\n    };\n    NDArrayMath.prototype.arrayDividedByScalar = function (a, c) {\n        util.assert(c.size === 1, \"Error in arrayDividedByScalar: second argument must be rank 0, \" +\n            (\"but got NDArray of rank \" + c.rank + \".\"));\n        return this.divide(a, c);\n    };\n    NDArrayMath.prototype.ceil = function (x) {\n        return this.backendEngine.executeKernel('Ceil', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.floor = function (x) {\n        return this.backendEngine.executeKernel('Floor', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.exp = function (x) {\n        return this.backendEngine.executeKernel('Exp', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.log = function (x) {\n        return this.backendEngine.executeKernel('Log', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sqrt = function (x) {\n        return this.backendEngine.executeKernel('Sqrt', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.square = function (x) {\n        return this.backendEngine.executeKernel('Square', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.abs = function (x) {\n        return this.backendEngine.executeKernel('Abs', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.clip = function (x, min, max) {\n        util.assert((min <= max), \"Error in clip: min (\" + min + \") must be\" +\n            (\"less than or equal to max (\" + max + \").\"));\n        return this.backendEngine.executeKernel('Clip', { inputs: { x: x }, args: { min: min, max: max } });\n    };\n    NDArrayMath.prototype.relu = function (x) {\n        return this.backendEngine.executeKernel('Relu', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.elu = function (x) {\n        return this.backendEngine.executeKernel('Elu', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.eluDer = function (x) {\n        return this.backendEngine.executeKernel('EluDer', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.selu = function (x) {\n        return this.backendEngine.executeKernel('Selu', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.leakyRelu = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        return this.backendEngine.executeKernel('LeakyRelu', { inputs: { x: x }, args: { alpha: alpha } });\n    };\n    NDArrayMath.prototype.sigmoid = function (x) {\n        return this.backendEngine.executeKernel('Sigmoid', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sin = function (x) {\n        return this.backendEngine.executeKernel('Sin', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.cos = function (x) {\n        return this.backendEngine.executeKernel('Cos', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.tan = function (x) {\n        return this.backendEngine.executeKernel('Tan', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.asin = function (x) {\n        return this.backendEngine.executeKernel('Asin', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.acos = function (x) {\n        return this.backendEngine.executeKernel('Acos', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.atan = function (x) {\n        return this.backendEngine.executeKernel('Atan', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.sinh = function (x) {\n        return this.backendEngine.executeKernel('Sinh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.cosh = function (x) {\n        return this.backendEngine.executeKernel('Cosh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.tanh = function (x) {\n        return this.backendEngine.executeKernel('Tanh', { inputs: { x: x } });\n    };\n    NDArrayMath.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        return this.backendEngine.executeKernel('Step', { inputs: { x: x }, args: { alpha: alpha } });\n    };\n    NDArrayMath.prototype.scaledArrayAdd = function (c1, a, c2, b) {\n        var _this = this;\n        util.assert(c1.size === 1, \"Error in scaledArrayAdd: first argument must rank 0, but got \" +\n            (\" rank \" + c1.rank + \".\"));\n        util.assert(c2.size === 1, \"Error in scaledArrayAdd: third argument must be rank 0, but got \" +\n            (\"NDArray of rank \" + c2.rank + \".\"));\n        util.assertShapesMatch(a.shape, b.shape, 'Error in scaledArrayAdd: ');\n        return this.executeOp('scaledArrayAdd', function () {\n            return _this.scope(function () {\n                return _this.add(_this.multiply(c1, a), _this.multiply(c2, b));\n            });\n        });\n    };\n    NDArrayMath.prototype.scalarTimesArray = function (c, a) {\n        util.assert(c.size === 1, \"Error in arrayDividedByScalar: first argument must be rank 0, but \" +\n            (\"got rank \" + c.rank + \".\"));\n        return this.multiply(c, a);\n    };\n    NDArrayMath.prototype.elementWiseMulBroadcast = function (a, b) {\n        util.assert(a.rank === 2, \"Error in elementWiseMulBroadcast: first argument must be \" +\n            (\"rank 2, but got rank \" + a.rank + \".\"));\n        util.assert(b.rank === 2, \"Error in elementWiseMulBroadcast: second argument must be \" +\n            (\"rank 2, but got rank \" + b.rank + \".\"));\n        return this.multiply(a, b);\n    };\n    NDArrayMath.prototype.conv1d = function (input, filter, bias, stride, pad) {\n        var _this = this;\n        var input3D = input;\n        var reshapedTo3D = false;\n        if (input.rank === 2) {\n            reshapedTo3D = true;\n            input3D = input.as3D(1, input.shape[0], input.shape[1]);\n        }\n        util.assert(input3D.rank === 3, \"Error in conv1d: input must be rank 3, but got rank \" + input3D.rank + \".\");\n        util.assert(filter.rank === 3, \"Error in conv1d: filter must be rank 3, but got rank \" +\n            (filter.rank + \".\"));\n        if (bias != null) {\n            util.assert(bias.rank === 1, \"Error in conv1d: bias must be rank 1, but got rank \" +\n                (bias.rank + \".\"));\n        }\n        util.assert(input3D.shape[2] === filter.shape[1], \"Error in conv1d: depth of input (\" + input3D.shape[2] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[1] + \".\"));\n        var filter4D = filter.as4D(1, filter.shape[0], filter.shape[1], filter.shape[2]);\n        var input4D = input3D.as4D(input3D.shape[0], 1, input3D.shape[1], input3D.shape[2]);\n        var strides = [1, stride];\n        return this.executeOp('Conv1D', function () {\n            var res = _this.conv2d(input4D, filter4D, bias, strides, pad);\n            if (reshapedTo3D) {\n                return res.as2D(res.shape[2], res.shape[3]);\n            }\n            return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\n        });\n    };\n    NDArrayMath.prototype.conv2d = function (input, filter, bias, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in conv2d: input must be rank 4, but got rank \" + input4D.rank + \".\");\n        util.assert(filter.rank === 4, \"Error in conv2d: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        if (bias != null) {\n            util.assert(bias.rank === 1, \"Error in conv2d: bias must be rank 1, but got rank \" +\n                (bias.rank + \".\"));\n        }\n        util.assert(input4D.shape[3] === filter.shape[2], \"Error in conv2d: depth of input (\" + input4D.shape[3] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[2] + \".\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filter.shape, strides, pad);\n        return this.executeOp('Conv2D', function () {\n            var res = _this.backendEngine.executeKernel('Conv2D', { inputs: { x: input4D, filter: filter, bias: bias }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.conv2dDerInput = function (inShape, dy, filter, strides, pad) {\n        var _this = this;\n        util.assert(inShape.length === dy.rank, \"Length of inShape \" +\n            (\"(\" + inShape.length + \") and rank of dy (\" + dy.rank + \") must match\"));\n        var inShape4D = inShape;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (dy.rank === 3) {\n            reshapedTo4D = true;\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n            inShape4D = [1, inShape[0], inShape[1], inShape[2]];\n        }\n        var inDepth = inShape4D[3];\n        var outDepth = dy4D.shape[3];\n        util.assert(inShape4D.length === 4, \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\n            (inShape4D.length + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerInput: dy must be rank 4, but got \" +\n            (\"rank \" + dy4D.rank));\n        util.assert(filter.rank === 4, \"Error in conv2dDerInput: filter must be rank 4, but got \" +\n            (\"rank \" + filter.rank));\n        util.assert(inDepth === filter.shape[2], \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\n            (\"match input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(outDepth === filter.shape[3], \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must\" +\n            (\"match output depth for filter \" + filter.shape[3] + \".\"));\n        var convInfo = conv_util.computeConv2DInfo(inShape4D, filter.shape, strides, pad);\n        return this.executeOp('conv2dDerInput', function () {\n            var res = _this.backendEngine.executeKernel('Conv2DDerInput', { inputs: { dy: dy4D, filter: filter }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.conv2dDerBias = function (dy) {\n        var dy4D = dy;\n        if (dy.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        return this.backendEngine.executeKernel('Conv2DDerBias', { inputs: { dy: dy4D } });\n    };\n    NDArrayMath.prototype.conv2dDerFilter = function (input, dy, filterShape, strides, pad) {\n        var input4D = input;\n        if (input.rank === 3) {\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        var dy4D = dy;\n        if (dy4D.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\n            (input4D.shape + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\n            (dy4D.shape + \".\"));\n        util.assert(filterShape.length === 4, \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\n            (filterShape + \".\"));\n        util.assert(input4D.shape[3] === filterShape[2], \"Error in conv2dDerFilter: depth of input \" + input4D.shape[3] + \") must \" +\n            (\"match input depth in filter (\" + filterShape[2] + \".\"));\n        util.assert(dy4D.shape[3] === filterShape[3], \"Error in conv2dDerFilter: depth of dy (\" + dy4D.shape[3] + \") must \" +\n            (\"match output depth for filter (\" + filterShape[3] + \").\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filterShape, strides, pad);\n        return this.backendEngine.executeKernel('Conv2DDerFilter', { inputs: { x: input4D, dy: dy4D }, args: { convInfo: convInfo } });\n    };\n    NDArrayMath.prototype.conv2dTranspose = function (x, filter, outputShape, strides, pad) {\n        return this.conv2dDerInput(outputShape, x, filter, strides, pad);\n    };\n    NDArrayMath.prototype.depthwiseConv2D = function (input, filter, strides, pad, rates) {\n        var _this = this;\n        if (rates === void 0) { rates = [1, 1]; }\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in depthwiseConv2D: input must be rank 4, but got \" +\n            (\"rank \" + input4D.rank + \".\"));\n        util.assert(filter.rank === 4, \"Error in depthwiseConv2D: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        util.assert(input4D.shape[3] === filter.shape[2], \"Error in depthwiseConv2D: number of input channels \" +\n            (\"(\" + input4D.shape[3] + \") must match the inChannels dimension in \") +\n            (\"filter \" + filter.shape[2] + \".\"));\n        rates = rates || [1, 1];\n        var _a = parseTupleParam(rates), rateHeight = _a[0], rateWidth = _a[1];\n        util.assert(rateHeight === 1 && rateWidth === 1, 'Error in depthwiseConv2D: rates greater than 1 are not yet ' +\n            (\"supported. Got rates '\" + rates + \"'\"));\n        var convInfo = conv_util.computeConv2DInfo(input4D.shape, filter.shape, strides, pad, true);\n        return this.executeOp('depthwiseConv2D', function () {\n            var res = _this.backendEngine.executeKernel('DepthwiseConv2D', { inputs: { x: input4D, filter: filter }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.maxPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in maxPool: input must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('maxPool', function () {\n            var res = _this.backendEngine.executeKernel('MaxPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.maxPoolBackprop = function (dy, input, filterSize, strides, pad) {\n        var _this = this;\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        var input4D = input;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(dy4D.rank === 4, \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy4D.rank + \".\"));\n        util.assert(input4D.rank === 4, \"Error in maxPoolBackprop: input must be rank 4 but got rank \" +\n            (input4D.rank + \".\"));\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('maxPoolBackprop', function () {\n            var res = _this.backendEngine.executeKernel('MaxPoolBackprop', { inputs: { dy: dy4D, x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.minPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in minPool: x must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('minPool', function () {\n            var res = _this.backendEngine.executeKernel('MinPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.avgPool = function (input, filterSize, strides, pad) {\n        var _this = this;\n        var input4D = input;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n        }\n        util.assert(input4D.rank === 4, \"Error in avgPool: x must be rank 4 but got rank \" + input4D.rank + \".\");\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        return this.executeOp('avgPool', function () {\n            var res = _this.backendEngine.executeKernel('AvgPool', { inputs: { x: input4D }, args: { convInfo: convInfo } });\n            if (reshapedTo4D) {\n                return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.resizeBilinear3D = function (x, newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assert(x.rank === 3, \"Error in resizeBilinear3D: x must be rank 3 but got rank \" + x.rank + \".\");\n        util.assert(newShape2D.length === 2, \"Error in resizeBilinear3D: new shape must 2D, but got shape \" +\n            (newShape2D + \".\"));\n        return this.backendEngine.executeKernel('ResizeBilinear3D', { inputs: { x: x }, args: { newShape2D: newShape2D, alignCorners: alignCorners } });\n    };\n    NDArrayMath.prototype.batchNormalization2D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 2, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 2 || mean.rank === 1, \"Error in batchNormalization2D: mean must be rank 2 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 2 || variance.rank === 1, \"Error in batchNormalization2D: variance must be rank 2 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 2 || scale.rank === 1, \"Error in batchNormalization2D: scale must be rank 2 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 2 || offset.rank === 1, \"Error in batchNormalization2D: offset must be rank 2 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return this.backendEngine.executeKernel('BatchNorm2D', { inputs: { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, args: { varianceEpsilon: varianceEpsilon } });\n    };\n    NDArrayMath.prototype.batchNormalization3D = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 3, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 3 || mean.rank === 1, \"Error in batchNormalization3D: mean must be rank 3 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 3 || variance.rank === 1, \"Error in batchNormalization3D: variance must be rank 3 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 3 || scale.rank === 1, \"Error in batchNormalization3D: scale must be rank 3 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 3 || offset.rank === 1, \"Error in batchNormalization3D: offset must be rank 3 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return this.backendEngine.executeKernel('BatchNorm3D', { inputs: { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, args: { varianceEpsilon: varianceEpsilon } });\n    };\n    NDArrayMath.prototype.multiRNNCell = function (lstmCells, data, c, h) {\n        var res = this.scope(function () {\n            var input = data;\n            var newStates = [];\n            for (var i = 0; i < lstmCells.length; i++) {\n                var output = lstmCells[i](input, c[i], h[i]);\n                newStates.push(output[0]);\n                newStates.push(output[1]);\n                input = output[1];\n            }\n            return newStates;\n        });\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < res.length; i += 2) {\n            newC.push(res[i]);\n            newH.push(res[i + 1]);\n        }\n        return [newC, newH];\n    };\n    NDArrayMath.prototype.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        var _this = this;\n        var res = this.scope(function () {\n            var combined = _this.concat2D(data, h, 1);\n            var weighted = _this.matMul(combined, lstmKernel);\n            var res = _this.add(weighted, lstmBias);\n            var batchSize = res.shape[0];\n            var sliceCols = res.shape[1] / 4;\n            var sliceSize = [batchSize, sliceCols];\n            var i = _this.slice2D(res, [0, 0], sliceSize);\n            var j = _this.slice2D(res, [0, sliceCols], sliceSize);\n            var f = _this.slice2D(res, [0, sliceCols * 2], sliceSize);\n            var o = _this.slice2D(res, [0, sliceCols * 3], sliceSize);\n            var newC = _this.addStrict(_this.multiplyStrict(c, _this.sigmoid(_this.scalarPlusArray(forgetBias, f))), _this.multiplyStrict(_this.sigmoid(i), _this.tanh(j)));\n            var newH = _this.multiplyStrict(_this.tanh(newC), _this.sigmoid(o));\n            return [newC, newH];\n        });\n        return [res[0], res[1]];\n    };\n    NDArrayMath.prototype.multinomial = function (probabilities, numSamples, seed) {\n        var _this = this;\n        var numOutcomes = probabilities.size;\n        if (numOutcomes < 2) {\n            throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" +\n                (numOutcomes + \".\"));\n        }\n        if (probabilities.rank > 2) {\n            throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + probabilities.rank);\n        }\n        seed = seed || Math.random();\n        var origRank = probabilities.rank;\n        if (probabilities.rank === 1) {\n            probabilities = probabilities.as2D(1, -1);\n        }\n        return this.executeOp('multinomial', function () {\n            var res = _this.backendEngine.executeKernel('Multinomial', {\n                inputs: { probs: probabilities },\n                args: { numSamples: numSamples, seed: seed }\n            });\n            if (origRank === 1) {\n                return res.as1D();\n            }\n            return res;\n        });\n    };\n    NDArrayMath.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        if (onValue === void 0) { onValue = 1; }\n        if (offValue === void 0) { offValue = 0; }\n        if (depth < 2) {\n            throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + depth);\n        }\n        return this.backendEngine.executeKernel('OneHot', { inputs: { indices: indices }, args: { depth: depth, onValue: onValue, offValue: offValue } });\n    };\n    NDArrayMath.prototype.moments = function (x, axis, keepDims) {\n        var _this = this;\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var result = this.scope(function () {\n            var mean = _this.mean(x, axes, keepDims);\n            var keepDimsShape = mean.shape;\n            if (!keepDims) {\n                keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n            }\n            var devSquared = _this.square(_this.subtract(x, mean.reshape(keepDimsShape)));\n            var variance = _this.mean(devSquared, axes, keepDims);\n            return { mean: mean, variance: variance };\n        });\n        return result;\n    };\n    NDArrayMath.prototype.disposeData = function (id) {\n        this.backend.disposeData(id);\n        this.numArrays--;\n    };\n    return NDArrayMath;\n}());\nexports.NDArrayMath = NDArrayMath;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/math.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/ndarray.js":
/*!*****************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/ndarray.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(/*! ../environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nvar rand_1 = __webpack_require__(/*! ./rand */ \"./node_modules/deeplearn/dist/math/rand.js\");\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar NDArray = (function () {\n    function NDArray(shape, dtype, values, id) {\n        this.isDisposed = false;\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            util.assert(this.size === values.length, \"Constructing ndarray of shape (\" + this.size + \") should match the \" +\n                (\"length of values (\" + values.length + \")\"));\n        }\n        this.shape = shape;\n        this.dtype = dtype || 'float32';\n        var dim = this.shape.length;\n        if (dim < 2) {\n            this.strides = [];\n        }\n        else {\n            this.strides = new Array(dim - 1);\n            this.strides[dim - 2] = this.shape[dim - 1];\n            for (var i = dim - 3; i >= 0; --i) {\n                this.strides[i] = this.strides[i + 1] * this.shape[i + 1];\n            }\n        }\n        this.id = id;\n        if (this.id == null) {\n            this.id = NDArray.nextId++;\n            environment_1.ENV.math.register(this);\n            environment_1.ENV.math.write(this.id, values, this.dtype, this.shape);\n        }\n    }\n    NDArray.ones = function (shape, dtype) {\n        var values = makeOnesTypedArray(util.sizeFromShape(shape), dtype);\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.zeros = function (shape, dtype) {\n        var values = makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.onesLike = function (another) {\n        return NDArray.ones(another.shape, another.dtype);\n    };\n    NDArray.zerosLike = function (another) {\n        return NDArray.zeros(another.shape, another.dtype);\n    };\n    NDArray.like = function (another) {\n        var newValues = copyTypedArray(another.getValues(), another.dtype);\n        return NDArray.make(another.shape, { values: newValues }, another.dtype);\n    };\n    NDArray.make = function (shape, data, dtype) {\n        switch (shape.length) {\n            case 0:\n                return new Scalar(shape, dtype, data.values, data.id);\n            case 1:\n                return new Array1D(shape, dtype, data.values, data.id);\n            case 2:\n                return new Array2D(shape, dtype, data.values, data.id);\n            case 3:\n                return new Array3D(shape, dtype, data.values, data.id);\n            case 4:\n                return new Array4D(shape, dtype, data.values, data.id);\n            default:\n                return new NDArray(shape, dtype, data.values, data.id);\n        }\n    };\n    NDArray.fromPixels = function (pixels, numChannels) {\n        if (numChannels === void 0) { numChannels = 3; }\n        if (numChannels > 4) {\n            throw new Error('Cannot construct NDArray with more than 4 channels from pixels.');\n        }\n        var ndarrayData = {};\n        var shape = [pixels.height, pixels.width, numChannels];\n        var res = NDArray.make(shape, ndarrayData, 'int32');\n        environment_1.ENV.math.writePixels(res.id, pixels, numChannels);\n        return res;\n    };\n    NDArray.prototype.reshape = function (newShape) {\n        this.throwIfDisposed();\n        newShape = util.inferFromImplicitShape(newShape, this.size);\n        if (util.arraysEqual(this.shape, newShape)) {\n            return this;\n        }\n        var data = { id: this.id };\n        util.assert(this.size === util.sizeFromShape(newShape), 'new shape and old shape must have the same number of elements.');\n        return NDArray.make(newShape, data, this.dtype);\n    };\n    NDArray.prototype.flatten = function () {\n        this.throwIfDisposed();\n        if (this instanceof Array1D) {\n            return this;\n        }\n        return this.as1D();\n    };\n    NDArray.prototype.asScalar = function () {\n        this.throwIfDisposed();\n        util.assert(this.size === 1, 'The array must have only 1 element.');\n        return this.reshape([]);\n    };\n    NDArray.prototype.as1D = function () {\n        this.throwIfDisposed();\n        return this.reshape([this.size]);\n    };\n    NDArray.prototype.as2D = function (rows, columns) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns]);\n    };\n    NDArray.prototype.as3D = function (rows, columns, depth) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth]);\n    };\n    NDArray.prototype.as4D = function (rows, columns, depth, depth2) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2]);\n    };\n    NDArray.prototype.asType = function (dtype) {\n        this.throwIfDisposed();\n        var vals = this.dataSync();\n        var newVals = toTypedArray(vals, dtype);\n        return NDArray.make(this.shape, { values: newVals }, dtype);\n    };\n    Object.defineProperty(NDArray.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NDArray.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.getValues()[index];\n    };\n    NDArray.prototype.add = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        this.set.apply(this, [this.get.apply(this, locs) + value].concat(locs));\n    };\n    NDArray.prototype.set = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        this.throwIfDisposed();\n        util.assert(locs.length === this.rank, \"The number of provided coordinates (\" + locs.length + \") must \" +\n            (\"match the rank (\" + this.rank + \")\"));\n        var index = locs.length > 0 ? locs[locs.length - 1] : 0;\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        var vals = this.getValues();\n        vals[index] = value;\n        environment_1.ENV.math.disposeData(this.id);\n        environment_1.ENV.math.write(this.id, vals, this.dtype, this.shape);\n    };\n    NDArray.prototype.val = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfDisposed();\n                        return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get.apply(this, locs)];\n                }\n            });\n        });\n    };\n    NDArray.prototype.locToIndex = function (locs) {\n        this.throwIfDisposed();\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    };\n    NDArray.prototype.indexToLoc = function (index) {\n        this.throwIfDisposed();\n        var locs = new Array(this.shape.length);\n        for (var i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    };\n    NDArray.prototype.fill = function (value) {\n        this.throwIfDisposed();\n        var vals = this.getValues();\n        vals.fill(value);\n        environment_1.ENV.math.disposeData(this.id);\n        environment_1.ENV.math.write(this.id, vals, this.dtype, this.shape);\n    };\n    NDArray.prototype.getValues = function () {\n        return this.dataSync();\n    };\n    NDArray.prototype.getValuesAsync = function () {\n        return this.data();\n    };\n    NDArray.prototype.data = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.throwIfDisposed();\n                return [2, environment_1.ENV.math.read(this.id)];\n            });\n        });\n    };\n    NDArray.prototype.dataSync = function () {\n        this.throwIfDisposed();\n        return environment_1.ENV.math.readSync(this.id);\n    };\n    NDArray.prototype.dispose = function () {\n        this.isDisposed = true;\n        environment_1.ENV.math.disposeData(this.id);\n    };\n    NDArray.prototype.equals = function (t) {\n        this.throwIfDisposed();\n        return this.dtype === t.dtype && util.arraysEqual(this.shape, t.shape) &&\n            util.arraysEqual(this.getValues(), t.getValues());\n    };\n    NDArray.rand = function (shape, randFunction, dtype) {\n        var size = util.sizeFromShape(shape);\n        var values = null;\n        if (dtype == null || dtype === 'float32') {\n            values = new Float32Array(size);\n        }\n        else if (dtype === 'int32') {\n            values = new Int32Array(size);\n        }\n        else if (dtype === 'bool') {\n            values = new Uint8Array(size);\n        }\n        else {\n            throw new Error(\"Unknown data type \" + dtype);\n        }\n        for (var i = 0; i < size; i++) {\n            values[i] = randFunction();\n        }\n        return NDArray.make(shape, { values: values }, dtype);\n    };\n    NDArray.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    NDArray.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    NDArray.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    NDArray.prototype.throwIfDisposed = function () {\n        if (this.isDisposed) {\n            throw new Error(\"NDArray is disposed.\");\n        }\n    };\n    NDArray.nextId = 0;\n    return NDArray;\n}());\nexports.NDArray = NDArray;\nvar Scalar = (function (_super) {\n    __extends(Scalar, _super);\n    function Scalar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Scalar.new = function (value, dtype) {\n        var values = [value];\n        return new Scalar([], dtype, toTypedArray(values, dtype));\n    };\n    Scalar.prototype.get = function () {\n        return this.getValues()[0];\n    };\n    Scalar.prototype.val = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get()];\n                }\n            });\n        });\n    };\n    Scalar.prototype.add = function (value) {\n        this.getValues()[0] += value;\n    };\n    Scalar.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Scalar.prototype.locToIndex = function (loc) {\n        return 0;\n    };\n    Scalar.prototype.indexToLoc = function (index) {\n        return [];\n    };\n    return Scalar;\n}(NDArray));\nexports.Scalar = Scalar;\nvar Array1D = (function (_super) {\n    __extends(Array1D, _super);\n    function Array1D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Array1D.new = function (values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            util.assert(inferredShape.length === 1, \"Error constructing Array1D. Shape of values \" + inferredShape + \" is \" +\n                \"not 1 dimensional.\");\n        }\n        return new Array1D([values.length], dtype, toTypedArray(values, dtype));\n    };\n    Array1D.prototype.get = function (i) {\n        return this.getValues()[i];\n    };\n    Array1D.prototype.val = function (i) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i)];\n                }\n            });\n        });\n    };\n    Array1D.prototype.add = function (value, i) {\n        this.getValues()[i] += value;\n    };\n    Array1D.prototype.locToIndex = function (loc) {\n        return loc[0];\n    };\n    Array1D.prototype.indexToLoc = function (index) {\n        return [index];\n    };\n    Array1D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array1D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array1D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array1D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array1D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array1D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array1D;\n}(NDArray));\nexports.Array1D = Array1D;\nvar Array2D = (function (_super) {\n    __extends(Array2D, _super);\n    function Array2D(shape, dtype, values, id) {\n        var _this = this;\n        util.assert(shape.length === 2, 'Shape should be of length 2');\n        _this = _super.call(this, shape, dtype, values, id) || this;\n        _this.stride0 = _this.strides[0];\n        return _this;\n    }\n    Array2D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array2D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array2D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array2D.prototype.get = function (i, j) {\n        return this.getValues()[this.stride0 * i + j];\n    };\n    Array2D.prototype.add = function (value, i, j) {\n        this.getValues()[this.stride0 * i + j] += value;\n    };\n    Array2D.prototype.val = function (i, j) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j)];\n                }\n            });\n        });\n    };\n    Array2D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + locs[1];\n    };\n    Array2D.prototype.indexToLoc = function (index) {\n        return [Math.floor(index / this.stride0), index % this.stride0];\n    };\n    Array2D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array2D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array2D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array2D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array2D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array2D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array2D;\n}(NDArray));\nexports.Array2D = Array2D;\nvar Array3D = (function (_super) {\n    __extends(Array3D, _super);\n    function Array3D(shape, dtype, values, id) {\n        var _this = this;\n        util.assert(shape.length === 3, 'Shape should be of length 3');\n        _this = _super.call(this, shape, dtype, values, id) || this;\n        _this.stride0 = _this.strides[0];\n        _this.stride1 = _this.strides[1];\n        return _this;\n    }\n    Array3D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array3D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array3D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array3D.prototype.get = function (i, j, k) {\n        return this.getValues()[this.stride0 * i + this.stride1 * j + k];\n    };\n    Array3D.prototype.val = function (i, j, k) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j, k)];\n                }\n            });\n        });\n    };\n    Array3D.prototype.add = function (value, i, j, k) {\n        this.getValues()[this.stride0 * i + this.stride1 * j + k] += value;\n    };\n    Array3D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + this.stride1 * locs[1] + locs[2];\n    };\n    Array3D.prototype.indexToLoc = function (index) {\n        var i = Math.floor(index / this.stride0);\n        index -= i * this.stride0;\n        return [i, Math.floor(index / this.stride1), index % this.stride1];\n    };\n    Array3D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array3D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array3D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array3D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array3D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array3D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array3D;\n}(NDArray));\nexports.Array3D = Array3D;\nvar Array4D = (function (_super) {\n    __extends(Array4D, _super);\n    function Array4D(shape, dtype, values, id) {\n        var _this = this;\n        util.assert(shape.length === 4, 'Shape should be of length 4');\n        _this = _super.call(this, shape, dtype, values, id) || this;\n        _this.stride0 = _this.strides[0];\n        _this.stride1 = _this.strides[1];\n        _this.stride2 = _this.strides[2];\n        return _this;\n    }\n    Array4D.new = function (shape, values, dtype) {\n        if (!instanceofTypedArray(values)) {\n            var inferredShape = util.inferShape(values);\n            if (inferredShape.length > 1) {\n                util.assertShapesMatch(shape, inferredShape, \"Error when constructing Array4D. Shape of values \" +\n                    (inferredShape + \" does not match the provided shape \") +\n                    (shape + \". \"));\n            }\n        }\n        return new Array4D(shape, dtype, toTypedArray(values, dtype));\n    };\n    Array4D.prototype.get = function (i, j, k, l) {\n        return this.getValues()[this.stride0 * i + this.stride1 * j + this.stride2 * k + l];\n    };\n    Array4D.prototype.val = function (i, j, k, l) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.data()];\n                    case 1:\n                        _a.sent();\n                        return [2, this.get(i, j, k, l)];\n                }\n            });\n        });\n    };\n    Array4D.prototype.add = function (value, i, j, k, l) {\n        this.getValues()[this.stride0 * i + this.stride1 * j + this.stride2 * k + l] += value;\n    };\n    Array4D.prototype.locToIndex = function (locs) {\n        return this.stride0 * locs[0] + this.stride1 * locs[1] +\n            this.stride2 * locs[2] + locs[3];\n    };\n    Array4D.prototype.indexToLoc = function (index) {\n        var i = Math.floor(index / this.stride0);\n        index -= i * this.stride0;\n        var j = Math.floor(index / this.stride1);\n        index -= j * this.stride1;\n        return [i, j, Math.floor(index / this.stride2), index % this.stride2];\n    };\n    Array4D.prototype.asType = function (dtype) {\n        return _super.prototype.asType.call(this, dtype);\n    };\n    Array4D.ones = function (shape, dtype) {\n        return NDArray.ones(shape, dtype);\n    };\n    Array4D.zeros = function (shape, dtype) {\n        return NDArray.zeros(shape, dtype);\n    };\n    Array4D.randNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array4D.randTruncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        return NDArray.rand(shape, function () { return randGauss.nextValue(); }, dtype);\n    };\n    Array4D.randUniform = function (shape, a, b, dtype) {\n        return NDArray.rand(shape, function () { return util.randUniform(a, b); }, dtype);\n    };\n    return Array4D;\n}(NDArray));\nexports.Array4D = Array4D;\nfunction copyTypedArray(array, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(array);\n    }\n    else if (dtype === 'int32') {\n        var vals = new Int32Array(array.length);\n        for (var i = 0; i < vals.length; ++i) {\n            var val = array[i];\n            if (util.isValNaN(val, 'int32')) {\n                vals[i] = util.getNaN('int32');\n            }\n            else {\n                vals[i] = val;\n            }\n        }\n        return vals;\n    }\n    else if (dtype === 'bool') {\n        var bool = new Uint8Array(array.length);\n        for (var i = 0; i < bool.length; ++i) {\n            var val = array[i];\n            if (util.isValNaN(val, 'bool')) {\n                bool[i] = util.getNaN('bool');\n            }\n            else if (Math.round(val) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nfunction instanceofTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nfunction toTypedArray(a, dtype) {\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        a = util.flatten(a);\n    }\n    return copyTypedArray(a, dtype);\n}\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nfunction makeOnesTypedArray(size, dtype) {\n    var array = makeZerosTypedArray(size, dtype);\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/ndarray.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/rand.js":
/*!**************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/rand.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\nvar MPRandGauss = (function () {\n    function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        var seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    MPRandGauss.prototype.nextValue = function () {\n        if (!isNaN(this.nextVal)) {\n            var value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        var resultX, resultY;\n        var isValid = false;\n        while (!isValid) {\n            var v1 = void 0, v2 = void 0, s = void 0;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    };\n    MPRandGauss.prototype.convertValue = function (value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    MPRandGauss.prototype.isValidTruncated = function (value) {\n        return value <= this.upper && value >= this.lower;\n    };\n    return MPRandGauss;\n}());\nexports.MPRandGauss = MPRandGauss;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9yYW5kLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvcmFuZC5qcz9jZjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNlZWRyYW5kb20gPSByZXF1aXJlKFwic2VlZHJhbmRvbVwiKTtcbnZhciBNUFJhbmRHYXVzcyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTVBSYW5kR2F1c3MobWVhbiwgc3RkRGV2aWF0aW9uLCBkdHlwZSwgdHJ1bmNhdGVkLCBzZWVkKSB7XG4gICAgICAgIHRoaXMubWVhbiA9IG1lYW47XG4gICAgICAgIHRoaXMuc3RkRGV2ID0gc3RkRGV2aWF0aW9uO1xuICAgICAgICB0aGlzLmR0eXBlID0gZHR5cGU7XG4gICAgICAgIHRoaXMubmV4dFZhbCA9IE5hTjtcbiAgICAgICAgdGhpcy50cnVuY2F0ZWQgPSB0cnVuY2F0ZWQ7XG4gICAgICAgIGlmICh0aGlzLnRydW5jYXRlZCkge1xuICAgICAgICAgICAgdGhpcy51cHBlciA9IHRoaXMubWVhbiArIHRoaXMuc3RkRGV2ICogMjtcbiAgICAgICAgICAgIHRoaXMubG93ZXIgPSB0aGlzLm1lYW4gLSB0aGlzLnN0ZERldiAqIDI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNlZWRWYWx1ZSA9IHNlZWQgPyBzZWVkIDogTWF0aC5yYW5kb20oKTtcbiAgICAgICAgdGhpcy5yYW5kb20gPSBzZWVkcmFuZG9tLmFsZWEoc2VlZFZhbHVlLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICBNUFJhbmRHYXVzcy5wcm90b3R5cGUubmV4dFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzTmFOKHRoaXMubmV4dFZhbCkpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXMubmV4dFZhbDtcbiAgICAgICAgICAgIHRoaXMubmV4dFZhbCA9IE5hTjtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzdWx0WCwgcmVzdWx0WTtcbiAgICAgICAgdmFyIGlzVmFsaWQgPSBmYWxzZTtcbiAgICAgICAgd2hpbGUgKCFpc1ZhbGlkKSB7XG4gICAgICAgICAgICB2YXIgdjEgPSB2b2lkIDAsIHYyID0gdm9pZCAwLCBzID0gdm9pZCAwO1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgIHYxID0gMiAqIHRoaXMucmFuZG9tKCkgLSAxO1xuICAgICAgICAgICAgICAgIHYyID0gMiAqIHRoaXMucmFuZG9tKCkgLSAxO1xuICAgICAgICAgICAgICAgIHMgPSB2MSAqIHYxICsgdjIgKiB2MjtcbiAgICAgICAgICAgIH0gd2hpbGUgKHMgPj0gMSB8fCBzID09PSAwKTtcbiAgICAgICAgICAgIHZhciBtdWwgPSBNYXRoLnNxcnQoLTIuMCAqIE1hdGgubG9nKHMpIC8gcyk7XG4gICAgICAgICAgICByZXN1bHRYID0gdGhpcy5tZWFuICsgdGhpcy5zdGREZXYgKiB2MSAqIG11bDtcbiAgICAgICAgICAgIHJlc3VsdFkgPSB0aGlzLm1lYW4gKyB0aGlzLnN0ZERldiAqIHYyICogbXVsO1xuICAgICAgICAgICAgaWYgKCF0aGlzLnRydW5jYXRlZCB8fCB0aGlzLmlzVmFsaWRUcnVuY2F0ZWQocmVzdWx0WCkpIHtcbiAgICAgICAgICAgICAgICBpc1ZhbGlkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMudHJ1bmNhdGVkIHx8IHRoaXMuaXNWYWxpZFRydW5jYXRlZChyZXN1bHRZKSkge1xuICAgICAgICAgICAgdGhpcy5uZXh0VmFsID0gdGhpcy5jb252ZXJ0VmFsdWUocmVzdWx0WSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY29udmVydFZhbHVlKHJlc3VsdFgpO1xuICAgIH07XG4gICAgTVBSYW5kR2F1c3MucHJvdG90eXBlLmNvbnZlcnRWYWx1ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZiAodGhpcy5kdHlwZSA9PSBudWxsIHx8IHRoaXMuZHR5cGUgPT09ICdmbG9hdDMyJykge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlKTtcbiAgICB9O1xuICAgIE1QUmFuZEdhdXNzLnByb3RvdHlwZS5pc1ZhbGlkVHJ1bmNhdGVkID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA8PSB0aGlzLnVwcGVyICYmIHZhbHVlID49IHRoaXMubG93ZXI7XG4gICAgfTtcbiAgICByZXR1cm4gTVBSYW5kR2F1c3M7XG59KCkpO1xuZXhwb3J0cy5NUFJhbmRHYXVzcyA9IE1QUmFuZEdhdXNzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/rand.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/reduce_util.js":
/*!*********************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/reduce_util.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9yZWR1Y2VfdXRpbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL3JlZHVjZV91dGlsLmpzPzEwNzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBBUkFMTEVMSVpFX1RIUkVTSE9MRCA9IDMwO1xuZnVuY3Rpb24gY29tcHV0ZU9wdGltYWxXaW5kb3dTaXplKGluU2l6ZSkge1xuICAgIGlmIChpblNpemUgPD0gZXhwb3J0cy5QQVJBTExFTElaRV9USFJFU0hPTEQpIHtcbiAgICAgICAgcmV0dXJuIGluU2l6ZTtcbiAgICB9XG4gICAgcmV0dXJuIG5lYXJlc3REaXZpc29yKGluU2l6ZSwgTWF0aC5mbG9vcihNYXRoLnNxcnQoaW5TaXplKSkpO1xufVxuZXhwb3J0cy5jb21wdXRlT3B0aW1hbFdpbmRvd1NpemUgPSBjb21wdXRlT3B0aW1hbFdpbmRvd1NpemU7XG5mdW5jdGlvbiBuZWFyZXN0RGl2aXNvcihzaXplLCBzdGFydCkge1xuICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IHNpemU7ICsraSkge1xuICAgICAgICBpZiAoc2l6ZSAlIGkgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzaXplO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/reduce_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/slice_util.js":
/*!********************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/slice_util.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/deeplearn/dist/util.js\");\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    util.assert(input.rank === size.length, \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    for (var i = 0; i < input.rank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"));\n    }\n}\nexports.assertParamsValid = assertParamsValid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC9zbGljZV91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXBsZWFybi9kaXN0L21hdGgvc2xpY2VfdXRpbC5qcz9iNzU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHV0aWwgPSByZXF1aXJlKFwiLi4vdXRpbFwiKTtcbmZ1bmN0aW9uIGFzc2VydFBhcmFtc1ZhbGlkKGlucHV0LCBiZWdpbiwgc2l6ZSkge1xuICAgIHV0aWwuYXNzZXJ0KGlucHV0LnJhbmsgPT09IGJlZ2luLmxlbmd0aCwgXCJFcnJvciBpbiBzbGljZVwiICsgaW5wdXQucmFuayArIFwiRDogTGVuZ3RoIG9mIGJlZ2luIFwiICsgYmVnaW4gKyBcIiBtdXN0IFwiICtcbiAgICAgICAgKFwibWF0Y2ggdGhlIHJhbmsgb2YgdGhlIGFycmF5IChcIiArIGlucHV0LnJhbmsgKyBcIikuXCIpKTtcbiAgICB1dGlsLmFzc2VydChpbnB1dC5yYW5rID09PSBzaXplLmxlbmd0aCwgXCJFcnJvciBpbiBzbGljZVwiICsgaW5wdXQucmFuayArIFwiRDogTGVuZ3RoIG9mIHNpemUgXCIgKyBzaXplICsgXCIgbXVzdCBcIiArXG4gICAgICAgIChcIm1hdGNoIHRoZSByYW5rIG9mIHRoZSBhcnJheSAoXCIgKyBpbnB1dC5yYW5rICsgXCIpLlwiKSk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnB1dC5yYW5rOyArK2kpIHtcbiAgICAgICAgdXRpbC5hc3NlcnQoYmVnaW5baV0gKyBzaXplW2ldIDw9IGlucHV0LnNoYXBlW2ldLCBcIkVycm9yIGluIHNsaWNlXCIgKyBpbnB1dC5yYW5rICsgXCJEOiBiZWdpbltcIiArIGkgKyBcIl0gKyBzaXplW1wiICsgaSArIFwiXSBcIiArXG4gICAgICAgICAgICAoXCIoXCIgKyAoYmVnaW5baV0gKyBzaXplW2ldKSArIFwiKSB3b3VsZCBvdmVyZmxvdyBpbnB1dC5zaGFwZVtcIiArIGkgKyBcIl0gKFwiICsgaW5wdXQuc2hhcGVbaV0gKyBcIilcIikpO1xuICAgIH1cbn1cbmV4cG9ydHMuYXNzZXJ0UGFyYW1zVmFsaWQgPSBhc3NlcnRQYXJhbXNWYWxpZDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/slice_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/math/types.js":
/*!***************************************************!*\
  !*** ./node_modules/deeplearn/dist/math/types.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SumTypesMap;\n(function (SumTypesMap) {\n    SumTypesMap[\"float32\"] = \"float32\";\n    SumTypesMap[\"int32\"] = \"int32\";\n    SumTypesMap[\"bool\"] = \"int32\";\n})(SumTypesMap = exports.SumTypesMap || (exports.SumTypesMap = {}));\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n})(UpcastInt32AndMap = exports.UpcastInt32AndMap || (exports.UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n})(UpcastBoolAndMap = exports.UpcastBoolAndMap || (exports.UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n})(UpcastFloat32AndMap = exports.UpcastFloat32AndMap || (exports.UpcastFloat32AndMap = {}));\nvar upcastTypeMap = {\n    float32: UpcastFloat32AndMap,\n    int32: UpcastInt32AndMap,\n    bool: UpcastBoolAndMap\n};\nfunction upcastType(typeA, typeB) {\n    return upcastTypeMap[typeA][typeB];\n}\nexports.upcastType = upcastType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvbWF0aC90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC9tYXRoL3R5cGVzLmpzP2Y1YzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgU3VtVHlwZXNNYXA7XG4oZnVuY3Rpb24gKFN1bVR5cGVzTWFwKSB7XG4gICAgU3VtVHlwZXNNYXBbXCJmbG9hdDMyXCJdID0gXCJmbG9hdDMyXCI7XG4gICAgU3VtVHlwZXNNYXBbXCJpbnQzMlwiXSA9IFwiaW50MzJcIjtcbiAgICBTdW1UeXBlc01hcFtcImJvb2xcIl0gPSBcImludDMyXCI7XG59KShTdW1UeXBlc01hcCA9IGV4cG9ydHMuU3VtVHlwZXNNYXAgfHwgKGV4cG9ydHMuU3VtVHlwZXNNYXAgPSB7fSkpO1xudmFyIFVwY2FzdEludDMyQW5kTWFwO1xuKGZ1bmN0aW9uIChVcGNhc3RJbnQzMkFuZE1hcCkge1xuICAgIFVwY2FzdEludDMyQW5kTWFwW1wiZmxvYXQzMlwiXSA9IFwiZmxvYXQzMlwiO1xuICAgIFVwY2FzdEludDMyQW5kTWFwW1wiaW50MzJcIl0gPSBcImludDMyXCI7XG4gICAgVXBjYXN0SW50MzJBbmRNYXBbXCJib29sXCJdID0gXCJpbnQzMlwiO1xufSkoVXBjYXN0SW50MzJBbmRNYXAgPSBleHBvcnRzLlVwY2FzdEludDMyQW5kTWFwIHx8IChleHBvcnRzLlVwY2FzdEludDMyQW5kTWFwID0ge30pKTtcbnZhciBVcGNhc3RCb29sQW5kTWFwO1xuKGZ1bmN0aW9uIChVcGNhc3RCb29sQW5kTWFwKSB7XG4gICAgVXBjYXN0Qm9vbEFuZE1hcFtcImZsb2F0MzJcIl0gPSBcImZsb2F0MzJcIjtcbiAgICBVcGNhc3RCb29sQW5kTWFwW1wiaW50MzJcIl0gPSBcImludDMyXCI7XG4gICAgVXBjYXN0Qm9vbEFuZE1hcFtcImJvb2xcIl0gPSBcImJvb2xcIjtcbn0pKFVwY2FzdEJvb2xBbmRNYXAgPSBleHBvcnRzLlVwY2FzdEJvb2xBbmRNYXAgfHwgKGV4cG9ydHMuVXBjYXN0Qm9vbEFuZE1hcCA9IHt9KSk7XG52YXIgVXBjYXN0RmxvYXQzMkFuZE1hcDtcbihmdW5jdGlvbiAoVXBjYXN0RmxvYXQzMkFuZE1hcCkge1xuICAgIFVwY2FzdEZsb2F0MzJBbmRNYXBbXCJmbG9hdDMyXCJdID0gXCJmbG9hdDMyXCI7XG4gICAgVXBjYXN0RmxvYXQzMkFuZE1hcFtcImludDMyXCJdID0gXCJmbG9hdDMyXCI7XG4gICAgVXBjYXN0RmxvYXQzMkFuZE1hcFtcImJvb2xcIl0gPSBcImZsb2F0MzJcIjtcbn0pKFVwY2FzdEZsb2F0MzJBbmRNYXAgPSBleHBvcnRzLlVwY2FzdEZsb2F0MzJBbmRNYXAgfHwgKGV4cG9ydHMuVXBjYXN0RmxvYXQzMkFuZE1hcCA9IHt9KSk7XG52YXIgdXBjYXN0VHlwZU1hcCA9IHtcbiAgICBmbG9hdDMyOiBVcGNhc3RGbG9hdDMyQW5kTWFwLFxuICAgIGludDMyOiBVcGNhc3RJbnQzMkFuZE1hcCxcbiAgICBib29sOiBVcGNhc3RCb29sQW5kTWFwXG59O1xuZnVuY3Rpb24gdXBjYXN0VHlwZSh0eXBlQSwgdHlwZUIpIHtcbiAgICByZXR1cm4gdXBjYXN0VHlwZU1hcFt0eXBlQV1bdHlwZUJdO1xufVxuZXhwb3J0cy51cGNhc3RUeXBlID0gdXBjYXN0VHlwZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/math/types.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/test_util.js":
/*!**************************************************!*\
  !*** ./node_modules/deeplearn/dist/test_util.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment = __webpack_require__(/*! ./environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar environment_1 = __webpack_require__(/*! ./environment */ \"./node_modules/deeplearn/dist/environment.js\");\nvar backend_cpu_1 = __webpack_require__(/*! ./math/backends/backend_cpu */ \"./node_modules/deeplearn/dist/math/backends/backend_cpu.js\");\nvar backend_webgl_1 = __webpack_require__(/*! ./math/backends/backend_webgl */ \"./node_modules/deeplearn/dist/math/backends/backend_webgl.js\");\nvar math_1 = __webpack_require__(/*! ./math/math */ \"./node_modules/deeplearn/dist/math/math.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/deeplearn/dist/util.js\");\nexports.TEST_EPSILON = 1e-2;\nfunction mean(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n}\nexports.mean = mean;\nfunction standardDeviation(values, mean) {\n    var squareDiffSum = 0;\n    for (var i = 0; i < values.length; i++) {\n        var diff = values[i] - mean;\n        squareDiffSum += diff * diff;\n    }\n    return Math.sqrt(squareDiffSum / values.length);\n}\nexports.standardDeviation = standardDeviation;\nfunction kurtosis(values) {\n    var valuesMean = mean(values);\n    var n = values.length;\n    var sum2 = 0;\n    var sum4 = 0;\n    for (var i = 0; i < n; i++) {\n        var v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum4 += Math.pow(v, 4);\n    }\n    return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\nexports.kurtosis = kurtosis;\nfunction skewness(values) {\n    var valuesMean = mean(values);\n    var n = values.length;\n    var sum2 = 0;\n    var sum3 = 0;\n    for (var i = 0; i < n; i++) {\n        var v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum3 += Math.pow(v, 3);\n    }\n    return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\nexports.skewness = skewness;\nfunction jarqueBeraNormalityTest(values) {\n    var n = values.length;\n    var s = skewness(values);\n    var k = kurtosis(values);\n    var jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n    var CHI_SQUARE_2DEG = 5.991;\n    if (jb > CHI_SQUARE_2DEG) {\n        throw new Error(\"Invalid p-value for JB: \" + jb);\n    }\n}\nexports.jarqueBeraNormalityTest = jarqueBeraNormalityTest;\nfunction expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    var actualMean = mean(actual);\n    expectNumbersClose(actualMean, expectedMean, epsilon);\n    expectNumbersClose(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\nexports.expectArrayInMeanStdRange = expectArrayInMeanStdRange;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    var aType = actual.constructor.name;\n    var bType = expected.constructor.name;\n    if (aType !== bType) {\n        throw new Error(\"Arrays are of different type \" + aType + \" vs \" + bType);\n    }\n    if (actual.length !== expected.length) {\n        throw new Error(\"Matrices have different lengths (\" + actual.length + \" vs \" +\n            (expected.length + \").\"));\n    }\n    for (var i = 0; i < expected.length; ++i) {\n        var a = actual[i];\n        var e = expected[i];\n        if (!areClose(a, e, epsilon)) {\n            var actualStr = \"actual[\" + i + \"] === \" + a;\n            var expectedStr = \"expected[\" + i + \"] === \" + e;\n            throw new Error('Arrays differ: ' + actualStr + ', ' + expectedStr);\n        }\n    }\n}\nexports.expectArraysClose = expectArraysClose;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (isNaN(a) && isNaN(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    for (var i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(\"Value out of range:\" + actual[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\nfunction randomArrayInRange(n, minValue, maxValue) {\n    var v = new Float32Array(n);\n    var range = maxValue - minValue;\n    for (var i = 0; i < n; ++i) {\n        v[i] = (Math.random() * range) + minValue;\n    }\n    return v;\n}\nexports.randomArrayInRange = randomArrayInRange;\nfunction makeIdentity(n) {\n    var i = new Float32Array(n * n);\n    for (var j = 0; j < n; ++j) {\n        i[(j * n) + j] = 1;\n    }\n    return i;\n}\nexports.makeIdentity = makeIdentity;\nfunction cpuMultiplyMatrix(a, aRow, aCol, b, bRow, bCol) {\n    var result = new Float32Array(aRow * bCol);\n    for (var r = 0; r < aRow; ++r) {\n        var aOffset = (r * aCol);\n        var cOffset = (r * bCol);\n        for (var c = 0; c < bCol; ++c) {\n            var d = 0;\n            for (var k = 0; k < aCol; ++k) {\n                d += a[aOffset + k] * b[(k * bCol) + c];\n            }\n            result[cOffset + c] = d;\n        }\n    }\n    return result;\n}\nexports.cpuMultiplyMatrix = cpuMultiplyMatrix;\nfunction cpuDotProduct(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('cpuDotProduct: incompatible vectors.');\n    }\n    var d = 0;\n    for (var i = 0; i < a.length; ++i) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\nexports.cpuDotProduct = cpuDotProduct;\nfunction describeMathCPU(name, tests, featuresList) {\n    var testNameBase = 'CPU: math.' + name;\n    describeWithFeaturesAndExecutor(testNameBase, tests, function (testName, tests, features) { return executeMathTests(testName, tests, function () {\n        var safeMode = true;\n        return new math_1.NDArrayMath(new backend_cpu_1.MathBackendCPU(), safeMode);\n    }, features); }, featuresList);\n}\nexports.describeMathCPU = describeMathCPU;\nfunction describeMathGPU(name, tests, featuresList) {\n    var testNameBase = 'WebGL: math.' + name;\n    describeWithFeaturesAndExecutor(testNameBase, tests, function (testName, tests, features) { return executeMathTests(testName, tests, function () {\n        var safeMode = true;\n        return new math_1.NDArrayMath(new backend_webgl_1.MathBackendWebGL(), safeMode);\n    }, features); }, featuresList);\n}\nexports.describeMathGPU = describeMathGPU;\nfunction describeCustom(name, tests, featuresList, customBeforeEach, customAfterEach) {\n    describeWithFeaturesAndExecutor(name, [tests], function (testName, tests, features) { return executeTests(testName, tests, features, customBeforeEach, customAfterEach); }, featuresList);\n}\nexports.describeCustom = describeCustom;\nfunction describeWithFeaturesAndExecutor(testNameBase, tests, executor, featuresList) {\n    if (featuresList != null) {\n        featuresList.forEach(function (features) {\n            var testName = testNameBase + ' ' + JSON.stringify(features);\n            executor(testName, tests, features);\n        });\n    }\n    else {\n        executor(testNameBase, tests);\n    }\n}\nvar PROMISE_IT = function (name, testFunc) {\n    it(name, function (done) {\n        var result = testFunc();\n        if (result instanceof Promise) {\n            result.then(done, function (e) {\n                fail(e);\n                done();\n            });\n        }\n        else {\n            done();\n        }\n    });\n};\nfunction executeMathTests(testName, tests, mathFactory, features) {\n    var math;\n    var oldMath;\n    var customBeforeEach = function () {\n        oldMath = environment_1.ENV.math;\n        math = mathFactory();\n        math.startScope();\n    };\n    var customAfterEach = function () {\n        math.endScope(null);\n        math.dispose();\n        environment_1.ENV.setGlobalMath(oldMath);\n    };\n    var customIt = function (name, testFunc) {\n        PROMISE_IT(name, function () { return testFunc(math); });\n    };\n    executeTests(testName, tests, features, customBeforeEach, customAfterEach, customIt);\n}\nexports.executeMathTests = executeMathTests;\nfunction executeTests(testName, tests, features, customBeforeEach, customAfterEach, customIt) {\n    if (customIt === void 0) { customIt = PROMISE_IT; }\n    describe(testName, function () {\n        beforeEach(function () {\n            if (features != null) {\n                environment.setEnvironment(new environment_1.Environment(features));\n            }\n            if (customBeforeEach != null) {\n                customBeforeEach();\n            }\n        });\n        afterEach(function () {\n            if (customAfterEach != null) {\n                customAfterEach();\n            }\n            if (features != null) {\n                environment.setEnvironment(new environment_1.Environment());\n            }\n        });\n        tests.forEach(function (test) { return test(customIt); });\n    });\n}\nexports.executeTests = executeTests;\nfunction assertIsNan(val, dtype) {\n    if (!util.isValNaN(val, dtype)) {\n        throw new Error(\"Value \" + val + \" does not represent NaN for dtype \" + dtype);\n    }\n}\nexports.assertIsNan = assertIsNan;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/test_util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/util.js":
/*!*********************************************!*\
  !*** ./node_modules/deeplearn/dist/util.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction shuffle(array) {\n    var counter = array.length;\n    var temp = 0;\n    var index = 0;\n    while (counter > 0) {\n        index = (Math.random() * counter) | 0;\n        counter--;\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\nexports.shuffle = shuffle;\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexports.clamp = clamp;\nfunction randUniform(a, b) {\n    return Math.random() * (b - a) + a;\n}\nexports.randUniform = randUniform;\nfunction distSquared(a, b) {\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        var diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\nexports.distSquared = distSquared;\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(msg);\n    }\n}\nexports.assert = assert;\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix) {\n    if (errorMessagePrefix === void 0) { errorMessagePrefix = ''; }\n    assert(arraysEqual(shapeA, shapeB), errorMessagePrefix + (\"Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n}\nexports.assertShapesMatch = assertShapesMatch;\nfunction flatten(arr, ret) {\n    if (ret === void 0) { ret = []; }\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; ++i) {\n            flatten(arr[i], ret);\n        }\n    }\n    else {\n        ret.push(arr);\n    }\n    return ret;\n}\nexports.flatten = flatten;\nfunction inferShape(arr) {\n    var shape = [];\n    while (arr instanceof Array) {\n        shape.push(arr.length);\n        arr = arr[0];\n    }\n    return shape;\n}\nexports.inferShape = inferShape;\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        return 1;\n    }\n    var size = shape[0];\n    for (var i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexports.sizeFromShape = sizeFromShape;\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nexports.isScalarShape = isScalarShape;\nfunction arraysEqual(n1, n2) {\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (var i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.arraysEqual = arraysEqual;\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nexports.isInt = isInt;\nfunction tanh(x) {\n    if (Math.tanh != null) {\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        var e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexports.tanh = tanh;\nfunction sizeToSquarishShape(size) {\n    for (var a = Math.floor(Math.sqrt(size)); a > 1; --a) {\n        if (size % a === 0) {\n            return [a, size / a];\n        }\n    }\n    return [1, size];\n}\nexports.sizeToSquarishShape = sizeToSquarishShape;\nfunction createShuffledIndices(n) {\n    var shuffledIndices = new Uint32Array(n);\n    for (var i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexports.createShuffledIndices = createShuffledIndices;\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexports.rightPad = rightPad;\nfunction repeatedTry(checkFn, delayFn, maxCounter) {\n    if (delayFn === void 0) { delayFn = function (counter) { return 0; }; }\n    return new Promise(function (resolve, reject) {\n        var tryCount = 0;\n        var tryFn = function () {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            var nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        setTimeout(tryFn, 0);\n    });\n}\nexports.repeatedTry = repeatedTry;\nfunction getQueryParams(queryString) {\n    var params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n        var t = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            t[_i - 1] = arguments[_i];\n        }\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nexports.getQueryParams = getQueryParams;\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction inferFromImplicitShape(shape, size) {\n    var shapeProd = 1;\n    var implicitIdx = -1;\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(\"Shapes can only have 1 implicit size. \" +\n                    (\"Found -1 at dim \" + implicitIdx + \" and dim \" + i));\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] <= 0) {\n            throw Error(\"Shapes can not be <= 0. Found \" + shape[i] + \" at dim \" + i);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(\"Size (\" + size + \") must match the product of shape \" + shape);\n        }\n        return shape;\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(\"The implicit shape can't be a fractional number. \" +\n            (\"Got \" + size + \" / \" + shapeProd));\n    }\n    var newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexports.inferFromImplicitShape = inferFromImplicitShape;\nexports.NAN_INT32 = 1 << 31;\nexports.NAN_BOOL = 255;\nexports.NAN_FLOAT32 = NaN;\nfunction getNaN(dtype) {\n    if (dtype === 'float32') {\n        return exports.NAN_FLOAT32;\n    }\n    else if (dtype === 'int32') {\n        return exports.NAN_INT32;\n    }\n    else if (dtype === 'bool') {\n        return exports.NAN_BOOL;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.getNaN = getNaN;\nfunction isValNaN(val, dtype) {\n    if (isNaN(val)) {\n        return true;\n    }\n    if (dtype === 'float32') {\n        return false;\n    }\n    else if (dtype === 'int32') {\n        return val === exports.NAN_INT32;\n    }\n    else if (dtype === 'bool') {\n        return val === exports.NAN_BOOL;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.isValNaN = isValNaN;\nfunction squeezeShape(shape) {\n    var newShape = [];\n    var keptDims = [];\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape: newShape, keptDims: keptDims };\n}\nexports.squeezeShape = squeezeShape;\nfunction getTypedArrayFromDType(dtype, size) {\n    var values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n    return values;\n}\nexports.getTypedArrayFromDType = getTypedArrayFromDType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/util.js\n");

/***/ }),

/***/ "./node_modules/deeplearn/dist/version.js":
/*!************************************************!*\
  !*** ./node_modules/deeplearn/dist/version.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.3.14';\nexports.version = version;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVlcGxlYXJuL2Rpc3QvdmVyc2lvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwbGVhcm4vZGlzdC92ZXJzaW9uLmpzPzliZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdmVyc2lvbiA9ICcwLjMuMTQnO1xuZXhwb3J0cy52ZXJzaW9uID0gdmVyc2lvbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/deeplearn/dist/version.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2luZGV4LmpzPzYxMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBsaWJyYXJ5IG9mIHNlZWRhYmxlIFJOR3MgaW1wbGVtZW50ZWQgaW4gSmF2YXNjcmlwdC5cbi8vXG4vLyBVc2FnZTpcbi8vXG4vLyB2YXIgc2VlZHJhbmRvbSA9IHJlcXVpcmUoJ3NlZWRyYW5kb20nKTtcbi8vIHZhciByYW5kb20gPSBzZWVkcmFuZG9tKDEpOyAvLyBvciBhbnkgc2VlZC5cbi8vIHZhciB4ID0gcmFuZG9tKCk7ICAgICAgIC8vIDAgPD0geCA8IDEuICBFdmVyeSBiaXQgaXMgcmFuZG9tLlxuLy8gdmFyIHggPSByYW5kb20ucXVpY2soKTsgLy8gMCA8PSB4IDwgMS4gIDMyIGJpdHMgb2YgcmFuZG9tbmVzcy5cblxuLy8gYWxlYSwgYSA1My1iaXQgbXVsdGlwbHktd2l0aC1jYXJyeSBnZW5lcmF0b3IgYnkgSm9oYW5uZXMgQmFhZ8O4ZS5cbi8vIFBlcmlvZDogfjJeMTE2XG4vLyBSZXBvcnRlZCB0byBwYXNzIGFsbCBCaWdDcnVzaCB0ZXN0cy5cbnZhciBhbGVhID0gcmVxdWlyZSgnLi9saWIvYWxlYScpO1xuXG4vLyB4b3IxMjgsIGEgcHVyZSB4b3Itc2hpZnQgZ2VuZXJhdG9yIGJ5IEdlb3JnZSBNYXJzYWdsaWEuXG4vLyBQZXJpb2Q6IDJeMTI4LTEuXG4vLyBSZXBvcnRlZCB0byBmYWlsOiBNYXRyaXhSYW5rIGFuZCBMaW5lYXJDb21wLlxudmFyIHhvcjEyOCA9IHJlcXVpcmUoJy4vbGliL3hvcjEyOCcpO1xuXG4vLyB4b3J3b3csIEdlb3JnZSBNYXJzYWdsaWEncyAxNjAtYml0IHhvci1zaGlmdCBjb21iaW5lZCBwbHVzIHdleWwuXG4vLyBQZXJpb2Q6IDJeMTkyLTJeMzJcbi8vIFJlcG9ydGVkIHRvIGZhaWw6IENvbGxpc2lvbk92ZXIsIFNpbXBQb2tlciwgYW5kIExpbmVhckNvbXAuXG52YXIgeG9yd293ID0gcmVxdWlyZSgnLi9saWIveG9yd293Jyk7XG5cbi8vIHhvcnNoaWZ0NywgYnkgRnJhbsOnb2lzIFBhbm5ldG9uIGFuZCBQaWVycmUgTCdlY3V5ZXIsIHRha2VzXG4vLyBhIGRpZmZlcmVudCBhcHByb2FjaDogaXQgYWRkcyByb2J1c3RuZXNzIGJ5IGFsbG93aW5nIG1vcmUgc2hpZnRzXG4vLyB0aGFuIE1hcnNhZ2xpYSdzIG9yaWdpbmFsIHRocmVlLiAgSXQgaXMgYSA3LXNoaWZ0IGdlbmVyYXRvclxuLy8gd2l0aCAyNTYgYml0cywgdGhhdCBwYXNzZXMgQmlnQ3J1c2ggd2l0aCBubyBzeXN0bWF0aWMgZmFpbHVyZXMuXG4vLyBQZXJpb2QgMl4yNTYtMS5cbi8vIE5vIHN5c3RlbWF0aWMgQmlnQ3J1c2ggZmFpbHVyZXMgcmVwb3J0ZWQuXG52YXIgeG9yc2hpZnQ3ID0gcmVxdWlyZSgnLi9saWIveG9yc2hpZnQ3Jyk7XG5cbi8vIHhvcjQwOTYsIGJ5IFJpY2hhcmQgQnJlbnQsIGlzIGEgNDA5Ni1iaXQgeG9yLXNoaWZ0IHdpdGggYVxuLy8gdmVyeSBsb25nIHBlcmlvZCB0aGF0IGFsc28gYWRkcyBhIFdleWwgZ2VuZXJhdG9yLiBJdCBhbHNvIHBhc3Nlc1xuLy8gQmlnQ3J1c2ggd2l0aCBubyBzeXN0ZW1hdGljIGZhaWx1cmVzLiAgSXRzIGxvbmcgcGVyaW9kIG1heVxuLy8gYmUgdXNlZnVsIGlmIHlvdSBoYXZlIG1hbnkgZ2VuZXJhdG9ycyBhbmQgbmVlZCB0byBhdm9pZFxuLy8gY29sbGlzaW9ucy5cbi8vIFBlcmlvZDogMl40MTI4LTJeMzIuXG4vLyBObyBzeXN0ZW1hdGljIEJpZ0NydXNoIGZhaWx1cmVzIHJlcG9ydGVkLlxudmFyIHhvcjQwOTYgPSByZXF1aXJlKCcuL2xpYi94b3I0MDk2Jyk7XG5cbi8vIFR5Y2hlLWksIGJ5IFNhbXVlbCBOZXZlcyBhbmQgRmlsaXBlIEFyYXVqbywgaXMgYSBiaXQtc2hpZnRpbmcgcmFuZG9tXG4vLyBudW1iZXIgZ2VuZXJhdG9yIGRlcml2ZWQgZnJvbSBDaGFDaGEsIGEgbW9kZXJuIHN0cmVhbSBjaXBoZXIuXG4vLyBodHRwczovL2VkZW4uZGVpLnVjLnB0L35zbmV2ZXMvcHVicy8yMDExLXNuZmEyLnBkZlxuLy8gUGVyaW9kOiB+Ml4xMjdcbi8vIE5vIHN5c3RlbWF0aWMgQmlnQ3J1c2ggZmFpbHVyZXMgcmVwb3J0ZWQuXG52YXIgdHljaGVpID0gcmVxdWlyZSgnLi9saWIvdHljaGVpJyk7XG5cbi8vIFRoZSBvcmlnaW5hbCBBUkM0LWJhc2VkIHBybmcgaW5jbHVkZWQgaW4gdGhpcyBsaWJyYXJ5LlxuLy8gUGVyaW9kOiB+Ml4xNjAwXG52YXIgc3IgPSByZXF1aXJlKCcuL3NlZWRyYW5kb20nKTtcblxuc3IuYWxlYSA9IGFsZWE7XG5zci54b3IxMjggPSB4b3IxMjg7XG5zci54b3J3b3cgPSB4b3J3b3c7XG5zci54b3JzaGlmdDcgPSB4b3JzaGlmdDc7XG5zci54b3I0MDk2ID0geG9yNDA5NjtcbnNyLnR5Y2hlaSA9IHR5Y2hlaTtcblxubW9kdWxlLmV4cG9ydHMgPSBzcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/index.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIvYWxlYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2xpYi9hbGVhLmpzPzEyMTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBwb3J0IG9mIGFuIGFsZ29yaXRobSBieSBKb2hhbm5lcyBCYWFnw7hlIDxiYWFnb2VAYmFhZ29lLmNvbT4sIDIwMTBcbi8vIGh0dHA6Ly9iYWFnb2UuY29tL2VuL1JhbmRvbU11c2luZ3MvamF2YXNjcmlwdC9cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ucXVpbmxhbi9iZXR0ZXItcmFuZG9tLW51bWJlcnMtZm9yLWphdmFzY3JpcHQtbWlycm9yXG4vLyBPcmlnaW5hbCB3b3JrIGlzIHVuZGVyIE1JVCBsaWNlbnNlIC1cblxuLy8gQ29weXJpZ2h0IChDKSAyMDEwIGJ5IEpvaGFubmVzIEJhYWfDuGUgPGJhYWdvZUBiYWFnb2Uub3JnPlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vIFxuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy8gXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIEFsZWEoc2VlZCkge1xuICB2YXIgbWUgPSB0aGlzLCBtYXNoID0gTWFzaCgpO1xuXG4gIG1lLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdCA9IDIwOTE2MzkgKiBtZS5zMCArIG1lLmMgKiAyLjMyODMwNjQzNjUzODY5NjNlLTEwOyAvLyAyXi0zMlxuICAgIG1lLnMwID0gbWUuczE7XG4gICAgbWUuczEgPSBtZS5zMjtcbiAgICByZXR1cm4gbWUuczIgPSB0IC0gKG1lLmMgPSB0IHwgMCk7XG4gIH07XG5cbiAgLy8gQXBwbHkgdGhlIHNlZWRpbmcgYWxnb3JpdGhtIGZyb20gQmFhZ29lLlxuICBtZS5jID0gMTtcbiAgbWUuczAgPSBtYXNoKCcgJyk7XG4gIG1lLnMxID0gbWFzaCgnICcpO1xuICBtZS5zMiA9IG1hc2goJyAnKTtcbiAgbWUuczAgLT0gbWFzaChzZWVkKTtcbiAgaWYgKG1lLnMwIDwgMCkgeyBtZS5zMCArPSAxOyB9XG4gIG1lLnMxIC09IG1hc2goc2VlZCk7XG4gIGlmIChtZS5zMSA8IDApIHsgbWUuczEgKz0gMTsgfVxuICBtZS5zMiAtPSBtYXNoKHNlZWQpO1xuICBpZiAobWUuczIgPCAwKSB7IG1lLnMyICs9IDE7IH1cbiAgbWFzaCA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIGNvcHkoZiwgdCkge1xuICB0LmMgPSBmLmM7XG4gIHQuczAgPSBmLnMwO1xuICB0LnMxID0gZi5zMTtcbiAgdC5zMiA9IGYuczI7XG4gIHJldHVybiB0O1xufVxuXG5mdW5jdGlvbiBpbXBsKHNlZWQsIG9wdHMpIHtcbiAgdmFyIHhnID0gbmV3IEFsZWEoc2VlZCksXG4gICAgICBzdGF0ZSA9IG9wdHMgJiYgb3B0cy5zdGF0ZSxcbiAgICAgIHBybmcgPSB4Zy5uZXh0O1xuICBwcm5nLmludDMyID0gZnVuY3Rpb24oKSB7IHJldHVybiAoeGcubmV4dCgpICogMHgxMDAwMDAwMDApIHwgMDsgfVxuICBwcm5nLmRvdWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBwcm5nKCkgKyAocHJuZygpICogMHgyMDAwMDAgfCAwKSAqIDEuMTEwMjIzMDI0NjI1MTU2NWUtMTY7IC8vIDJeLTUzXG4gIH07XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAodHlwZW9mKHN0YXRlKSA9PSAnb2JqZWN0JykgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5mdW5jdGlvbiBNYXNoKCkge1xuICB2YXIgbiA9IDB4ZWZjODI0OWQ7XG5cbiAgdmFyIG1hc2ggPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgZGF0YSA9IGRhdGEudG9TdHJpbmcoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIG4gKz0gZGF0YS5jaGFyQ29kZUF0KGkpO1xuICAgICAgdmFyIGggPSAwLjAyNTE5NjAzMjgyNDE2OTM4ICogbjtcbiAgICAgIG4gPSBoID4+PiAwO1xuICAgICAgaCAtPSBuO1xuICAgICAgaCAqPSBuO1xuICAgICAgbiA9IGggPj4+IDA7XG4gICAgICBoIC09IG47XG4gICAgICBuICs9IGggKiAweDEwMDAwMDAwMDsgLy8gMl4zMlxuICAgIH1cbiAgICByZXR1cm4gKG4gPj4+IDApICogMi4zMjgzMDY0MzY1Mzg2OTYzZS0xMDsgLy8gMl4tMzJcbiAgfTtcblxuICByZXR1cm4gbWFzaDtcbn1cblxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLmFsZWEgPSBpbXBsO1xufVxuXG59KShcbiAgdGhpcyxcbiAgKHR5cGVvZiBtb2R1bGUpID09ICdvYmplY3QnICYmIG1vZHVsZSwgICAgLy8gcHJlc2VudCBpbiBub2RlLmpzXG4gICh0eXBlb2YgZGVmaW5lKSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZSAgIC8vIHByZXNlbnQgd2l0aCBhbiBBTUQgbG9hZGVyXG4pO1xuXG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/alea.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIvdHljaGVpLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NlZWRyYW5kb20vbGliL3R5Y2hlaS5qcz84OWVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEEgSmF2YXNjcmlwdCBpbXBsZW1lbnRhaW9uIG9mIHRoZSBcIlR5Y2hlLWlcIiBwcm5nIGFsZ29yaXRobSBieVxuLy8gU2FtdWVsIE5ldmVzIGFuZCBGaWxpcGUgQXJhdWpvLlxuLy8gU2VlIGh0dHBzOi8vZWRlbi5kZWkudWMucHQvfnNuZXZlcy9wdWJzLzIwMTEtc25mYTIucGRmXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIFhvckdlbihzZWVkKSB7XG4gIHZhciBtZSA9IHRoaXMsIHN0cnNlZWQgPSAnJztcblxuICAvLyBTZXQgdXAgZ2VuZXJhdG9yIGZ1bmN0aW9uLlxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGIgPSBtZS5iLCBjID0gbWUuYywgZCA9IG1lLmQsIGEgPSBtZS5hO1xuICAgIGIgPSAoYiA8PCAyNSkgXiAoYiA+Pj4gNykgXiBjO1xuICAgIGMgPSAoYyAtIGQpIHwgMDtcbiAgICBkID0gKGQgPDwgMjQpIF4gKGQgPj4+IDgpIF4gYTtcbiAgICBhID0gKGEgLSBiKSB8IDA7XG4gICAgbWUuYiA9IGIgPSAoYiA8PCAyMCkgXiAoYiA+Pj4gMTIpIF4gYztcbiAgICBtZS5jID0gYyA9IChjIC0gZCkgfCAwO1xuICAgIG1lLmQgPSAoZCA8PCAxNikgXiAoYyA+Pj4gMTYpIF4gYTtcbiAgICByZXR1cm4gbWUuYSA9IChhIC0gYikgfCAwO1xuICB9O1xuXG4gIC8qIFRoZSBmb2xsb3dpbmcgaXMgbm9uLWludmVydGVkIHR5Y2hlLCB3aGljaCBoYXMgYmV0dGVyIGludGVybmFsXG4gICAqIGJpdCBkaWZmdXNpb24sIGJ1dCB3aGljaCBpcyBhYm91dCAyNSUgc2xvd2VyIHRoYW4gdHljaGUtaSBpbiBKUy5cbiAgbWUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhID0gbWUuYSwgYiA9IG1lLmIsIGMgPSBtZS5jLCBkID0gbWUuZDtcbiAgICBhID0gKG1lLmEgKyBtZS5iIHwgMCkgPj4+IDA7XG4gICAgZCA9IG1lLmQgXiBhOyBkID0gZCA8PCAxNiBeIGQgPj4+IDE2O1xuICAgIGMgPSBtZS5jICsgZCB8IDA7XG4gICAgYiA9IG1lLmIgXiBjOyBiID0gYiA8PCAxMiBeIGQgPj4+IDIwO1xuICAgIG1lLmEgPSBhID0gYSArIGIgfCAwO1xuICAgIGQgPSBkIF4gYTsgbWUuZCA9IGQgPSBkIDw8IDggXiBkID4+PiAyNDtcbiAgICBtZS5jID0gYyA9IGMgKyBkIHwgMDtcbiAgICBiID0gYiBeIGM7XG4gICAgcmV0dXJuIG1lLmIgPSAoYiA8PCA3IF4gYiA+Pj4gMjUpO1xuICB9XG4gICovXG5cbiAgbWUuYSA9IDA7XG4gIG1lLmIgPSAwO1xuICBtZS5jID0gMjY1NDQzNTc2OSB8IDA7XG4gIG1lLmQgPSAxMzY3MTMwNTUxO1xuXG4gIGlmIChzZWVkID09PSBNYXRoLmZsb29yKHNlZWQpKSB7XG4gICAgLy8gSW50ZWdlciBzZWVkLlxuICAgIG1lLmEgPSAoc2VlZCAvIDB4MTAwMDAwMDAwKSB8IDA7XG4gICAgbWUuYiA9IHNlZWQgfCAwO1xuICB9IGVsc2Uge1xuICAgIC8vIFN0cmluZyBzZWVkLlxuICAgIHN0cnNlZWQgKz0gc2VlZDtcbiAgfVxuXG4gIC8vIE1peCBpbiBzdHJpbmcgc2VlZCwgdGhlbiBkaXNjYXJkIGFuIGluaXRpYWwgYmF0Y2ggb2YgNjQgdmFsdWVzLlxuICBmb3IgKHZhciBrID0gMDsgayA8IHN0cnNlZWQubGVuZ3RoICsgMjA7IGsrKykge1xuICAgIG1lLmIgXj0gc3Ryc2VlZC5jaGFyQ29kZUF0KGspIHwgMDtcbiAgICBtZS5uZXh0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29weShmLCB0KSB7XG4gIHQuYSA9IGYuYTtcbiAgdC5iID0gZi5iO1xuICB0LmMgPSBmLmM7XG4gIHQuZCA9IGYuZDtcbiAgcmV0dXJuIHQ7XG59O1xuXG5mdW5jdGlvbiBpbXBsKHNlZWQsIG9wdHMpIHtcbiAgdmFyIHhnID0gbmV3IFhvckdlbihzZWVkKSxcbiAgICAgIHN0YXRlID0gb3B0cyAmJiBvcHRzLnN0YXRlLFxuICAgICAgcHJuZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMDsgfTtcbiAgcHJuZy5kb3VibGUgPSBmdW5jdGlvbigpIHtcbiAgICBkbyB7XG4gICAgICB2YXIgdG9wID0geGcubmV4dCgpID4+PiAxMSxcbiAgICAgICAgICBib3QgPSAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwLFxuICAgICAgICAgIHJlc3VsdCA9ICh0b3AgKyBib3QpIC8gKDEgPDwgMjEpO1xuICAgIH0gd2hpbGUgKHJlc3VsdCA9PT0gMCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcHJuZy5pbnQzMiA9IHhnLm5leHQ7XG4gIHBybmcucXVpY2sgPSBwcm5nO1xuICBpZiAoc3RhdGUpIHtcbiAgICBpZiAodHlwZW9mKHN0YXRlKSA9PSAnb2JqZWN0JykgY29weShzdGF0ZSwgeGcpO1xuICAgIHBybmcuc3RhdGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvcHkoeGcsIHt9KTsgfVxuICB9XG4gIHJldHVybiBwcm5nO1xufVxuXG5pZiAobW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gaW1wbDtcbn0gZWxzZSBpZiAoZGVmaW5lICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gaW1wbDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLnR5Y2hlaSA9IGltcGw7XG59XG5cbn0pKFxuICB0aGlzLFxuICAodHlwZW9mIG1vZHVsZSkgPT0gJ29iamVjdCcgJiYgbW9kdWxlLCAgICAvLyBwcmVzZW50IGluIG5vZGUuanNcbiAgKHR5cGVvZiBkZWZpbmUpID09ICdmdW5jdGlvbicgJiYgZGVmaW5lICAgLy8gcHJlc2VudCB3aXRoIGFuIEFNRCBsb2FkZXJcbik7XG5cblxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/tychei.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yMTI4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NlZWRyYW5kb20vbGliL3hvcjEyOC5qcz9iODM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEEgSmF2YXNjcmlwdCBpbXBsZW1lbnRhaW9uIG9mIHRoZSBcInhvcjEyOFwiIHBybmcgYWxnb3JpdGhtIGJ5XG4vLyBHZW9yZ2UgTWFyc2FnbGlhLiAgU2VlIGh0dHA6Ly93d3cuanN0YXRzb2Z0Lm9yZy92MDgvaTE0L3BhcGVyXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIFhvckdlbihzZWVkKSB7XG4gIHZhciBtZSA9IHRoaXMsIHN0cnNlZWQgPSAnJztcblxuICBtZS54ID0gMDtcbiAgbWUueSA9IDA7XG4gIG1lLnogPSAwO1xuICBtZS53ID0gMDtcblxuICAvLyBTZXQgdXAgZ2VuZXJhdG9yIGZ1bmN0aW9uLlxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHQgPSBtZS54IF4gKG1lLnggPDwgMTEpO1xuICAgIG1lLnggPSBtZS55O1xuICAgIG1lLnkgPSBtZS56O1xuICAgIG1lLnogPSBtZS53O1xuICAgIHJldHVybiBtZS53IF49IChtZS53ID4+PiAxOSkgXiB0IF4gKHQgPj4+IDgpO1xuICB9O1xuXG4gIGlmIChzZWVkID09PSAoc2VlZCB8IDApKSB7XG4gICAgLy8gSW50ZWdlciBzZWVkLlxuICAgIG1lLnggPSBzZWVkO1xuICB9IGVsc2Uge1xuICAgIC8vIFN0cmluZyBzZWVkLlxuICAgIHN0cnNlZWQgKz0gc2VlZDtcbiAgfVxuXG4gIC8vIE1peCBpbiBzdHJpbmcgc2VlZCwgdGhlbiBkaXNjYXJkIGFuIGluaXRpYWwgYmF0Y2ggb2YgNjQgdmFsdWVzLlxuICBmb3IgKHZhciBrID0gMDsgayA8IHN0cnNlZWQubGVuZ3RoICsgNjQ7IGsrKykge1xuICAgIG1lLnggXj0gc3Ryc2VlZC5jaGFyQ29kZUF0KGspIHwgMDtcbiAgICBtZS5uZXh0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29weShmLCB0KSB7XG4gIHQueCA9IGYueDtcbiAgdC55ID0gZi55O1xuICB0LnogPSBmLno7XG4gIHQudyA9IGYudztcbiAgcmV0dXJuIHQ7XG59XG5cbmZ1bmN0aW9uIGltcGwoc2VlZCwgb3B0cykge1xuICB2YXIgeGcgPSBuZXcgWG9yR2VuKHNlZWQpLFxuICAgICAgc3RhdGUgPSBvcHRzICYmIG9wdHMuc3RhdGUsXG4gICAgICBwcm5nID0gZnVuY3Rpb24oKSB7IHJldHVybiAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwOyB9O1xuICBwcm5nLmRvdWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIGRvIHtcbiAgICAgIHZhciB0b3AgPSB4Zy5uZXh0KCkgPj4+IDExLFxuICAgICAgICAgIGJvdCA9ICh4Zy5uZXh0KCkgPj4+IDApIC8gMHgxMDAwMDAwMDAsXG4gICAgICAgICAgcmVzdWx0ID0gKHRvcCArIGJvdCkgLyAoMSA8PCAyMSk7XG4gICAgfSB3aGlsZSAocmVzdWx0ID09PSAwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBwcm5nLmludDMyID0geGcubmV4dDtcbiAgcHJuZy5xdWljayA9IHBybmc7XG4gIGlmIChzdGF0ZSkge1xuICAgIGlmICh0eXBlb2Yoc3RhdGUpID09ICdvYmplY3QnKSBjb3B5KHN0YXRlLCB4Zyk7XG4gICAgcHJuZy5zdGF0ZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29weSh4Zywge30pOyB9XG4gIH1cbiAgcmV0dXJuIHBybmc7XG59XG5cbmlmIChtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBpbXBsO1xufSBlbHNlIGlmIChkZWZpbmUgJiYgZGVmaW5lLmFtZCkge1xuICBkZWZpbmUoZnVuY3Rpb24oKSB7IHJldHVybiBpbXBsOyB9KTtcbn0gZWxzZSB7XG4gIHRoaXMueG9yMTI4ID0gaW1wbDtcbn1cblxufSkoXG4gIHRoaXMsXG4gICh0eXBlb2YgbW9kdWxlKSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUsICAgIC8vIHByZXNlbnQgaW4gbm9kZS5qc1xuICAodHlwZW9mIGRlZmluZSkgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUgICAvLyBwcmVzZW50IHdpdGggYW4gQU1EIGxvYWRlclxuKTtcblxuXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xor128.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yNDA5Ni5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zZWVkcmFuZG9tL2xpYi94b3I0MDk2LmpzPzdhZWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBKYXZhc2NyaXB0IGltcGxlbWVudGFpb24gb2YgUmljaGFyZCBCcmVudCdzIFhvcmdlbnMgeG9yNDA5NiBhbGdvcml0aG0uXG4vL1xuLy8gVGhpcyBmYXN0IG5vbi1jcnlwdG9ncmFwaGljIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yIGlzIGRlc2lnbmVkIGZvclxuLy8gdXNlIGluIE1vbnRlLUNhcmxvIGFsZ29yaXRobXMuIEl0IGNvbWJpbmVzIGEgbG9uZy1wZXJpb2QgeG9yc2hpZnRcbi8vIGdlbmVyYXRvciB3aXRoIGEgV2V5bCBnZW5lcmF0b3IsIGFuZCBpdCBwYXNzZXMgYWxsIGNvbW1vbiBiYXR0ZXJpZXNcbi8vIG9mIHN0YXN0aWNpYWwgdGVzdHMgZm9yIHJhbmRvbW5lc3Mgd2hpbGUgY29uc3VtaW5nIG9ubHkgYSBmZXcgbmFub3NlY29uZHNcbi8vIGZvciBlYWNoIHBybmcgZ2VuZXJhdGVkLiAgRm9yIGJhY2tncm91bmQgb24gdGhlIGdlbmVyYXRvciwgc2VlIEJyZW50J3Ncbi8vIHBhcGVyOiBcIlNvbWUgbG9uZy1wZXJpb2QgcmFuZG9tIG51bWJlciBnZW5lcmF0b3JzIHVzaW5nIHNoaWZ0cyBhbmQgeG9ycy5cIlxuLy8gaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTAwNC4zMTE1djEucGRmXG4vL1xuLy8gVXNhZ2U6XG4vL1xuLy8gdmFyIHhvcjQwOTYgPSByZXF1aXJlKCd4b3I0MDk2Jyk7XG4vLyByYW5kb20gPSB4b3I0MDk2KDEpOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNlZWQgd2l0aCBpbnQzMiBvciBzdHJpbmcuXG4vLyBhc3NlcnQuZXF1YWwocmFuZG9tKCksIDAuMTUyMDQzNjQ1MDUzODU0Nyk7IC8vICgwLCAxKSByYW5nZSwgNTMgYml0cy5cbi8vIGFzc2VydC5lcXVhbChyYW5kb20uaW50MzIoKSwgMTgwNjUzNDg5Nyk7ICAgLy8gc2lnbmVkIGludDMyLCAzMiBiaXRzLlxuLy9cbi8vIEZvciBub256ZXJvIG51bWVyaWMga2V5cywgdGhpcyBpbXBlbGVtZW50YXRpb24gcHJvdmlkZXMgYSBzZXF1ZW5jZVxuLy8gaWRlbnRpY2FsIHRvIHRoYXQgYnkgQnJlbnQncyB4b3JnZW5zIDMgaW1wbGVtZW50YWlvbiBpbiBDLiAgVGhpc1xuLy8gaW1wbGVtZW50YXRpb24gYWxzbyBwcm92aWRlcyBmb3IgaW5pdGFsaXppbmcgdGhlIGdlbmVyYXRvciB3aXRoXG4vLyBzdHJpbmcgc2VlZHMsIG9yIGZvciBzYXZpbmcgYW5kIHJlc3RvcmluZyB0aGUgc3RhdGUgb2YgdGhlIGdlbmVyYXRvci5cbi8vXG4vLyBPbiBDaHJvbWUsIHRoaXMgcHJuZyBiZW5jaG1hcmtzIGFib3V0IDIuMSB0aW1lcyBzbG93ZXIgdGhhblxuLy8gSmF2YXNjcmlwdCdzIGJ1aWx0LWluIE1hdGgucmFuZG9tKCkuXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIFhvckdlbihzZWVkKSB7XG4gIHZhciBtZSA9IHRoaXM7XG5cbiAgLy8gU2V0IHVwIGdlbmVyYXRvciBmdW5jdGlvbi5cbiAgbWUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB3ID0gbWUudyxcbiAgICAgICAgWCA9IG1lLlgsIGkgPSBtZS5pLCB0LCB2O1xuICAgIC8vIFVwZGF0ZSBXZXlsIGdlbmVyYXRvci5cbiAgICBtZS53ID0gdyA9ICh3ICsgMHg2MWM4ODY0NykgfCAwO1xuICAgIC8vIFVwZGF0ZSB4b3IgZ2VuZXJhdG9yLlxuICAgIHYgPSBYWyhpICsgMzQpICYgMTI3XTtcbiAgICB0ID0gWFtpID0gKChpICsgMSkgJiAxMjcpXTtcbiAgICB2IF49IHYgPDwgMTM7XG4gICAgdCBePSB0IDw8IDE3O1xuICAgIHYgXj0gdiA+Pj4gMTU7XG4gICAgdCBePSB0ID4+PiAxMjtcbiAgICAvLyBVcGRhdGUgWG9yIGdlbmVyYXRvciBhcnJheSBzdGF0ZS5cbiAgICB2ID0gWFtpXSA9IHYgXiB0O1xuICAgIG1lLmkgPSBpO1xuICAgIC8vIFJlc3VsdCBpcyB0aGUgY29tYmluYXRpb24uXG4gICAgcmV0dXJuICh2ICsgKHcgXiAodyA+Pj4gMTYpKSkgfCAwO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGluaXQobWUsIHNlZWQpIHtcbiAgICB2YXIgdCwgdiwgaSwgaiwgdywgWCA9IFtdLCBsaW1pdCA9IDEyODtcbiAgICBpZiAoc2VlZCA9PT0gKHNlZWQgfCAwKSkge1xuICAgICAgLy8gTnVtZXJpYyBzZWVkcyBpbml0aWFsaXplIHYsIHdoaWNoIGlzIHVzZWQgdG8gZ2VuZXJhdGVzIFguXG4gICAgICB2ID0gc2VlZDtcbiAgICAgIHNlZWQgPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdHJpbmcgc2VlZHMgYXJlIG1peGVkIGludG8gdiBhbmQgWCBvbmUgY2hhcmFjdGVyIGF0IGEgdGltZS5cbiAgICAgIHNlZWQgPSBzZWVkICsgJ1xcMCc7XG4gICAgICB2ID0gMDtcbiAgICAgIGxpbWl0ID0gTWF0aC5tYXgobGltaXQsIHNlZWQubGVuZ3RoKTtcbiAgICB9XG4gICAgLy8gSW5pdGlhbGl6ZSBjaXJjdWxhciBhcnJheSBhbmQgd2V5bCB2YWx1ZS5cbiAgICBmb3IgKGkgPSAwLCBqID0gLTMyOyBqIDwgbGltaXQ7ICsraikge1xuICAgICAgLy8gUHV0IHRoZSB1bmljb2RlIGNoYXJhY3RlcnMgaW50byB0aGUgYXJyYXksIGFuZCBzaHVmZmxlIHRoZW0uXG4gICAgICBpZiAoc2VlZCkgdiBePSBzZWVkLmNoYXJDb2RlQXQoKGogKyAzMikgJSBzZWVkLmxlbmd0aCk7XG4gICAgICAvLyBBZnRlciAzMiBzaHVmZmxlcywgdGFrZSB2IGFzIHRoZSBzdGFydGluZyB3IHZhbHVlLlxuICAgICAgaWYgKGogPT09IDApIHcgPSB2O1xuICAgICAgdiBePSB2IDw8IDEwO1xuICAgICAgdiBePSB2ID4+PiAxNTtcbiAgICAgIHYgXj0gdiA8PCA0O1xuICAgICAgdiBePSB2ID4+PiAxMztcbiAgICAgIGlmIChqID49IDApIHtcbiAgICAgICAgdyA9ICh3ICsgMHg2MWM4ODY0NykgfCAwOyAgICAgLy8gV2V5bC5cbiAgICAgICAgdCA9IChYW2ogJiAxMjddIF49ICh2ICsgdykpOyAgLy8gQ29tYmluZSB4b3IgYW5kIHdleWwgdG8gaW5pdCBhcnJheS5cbiAgICAgICAgaSA9ICgwID09IHQpID8gaSArIDEgOiAwOyAgICAgLy8gQ291bnQgemVyb2VzLlxuICAgICAgfVxuICAgIH1cbiAgICAvLyBXZSBoYXZlIGRldGVjdGVkIGFsbCB6ZXJvZXM7IG1ha2UgdGhlIGtleSBub256ZXJvLlxuICAgIGlmIChpID49IDEyOCkge1xuICAgICAgWFsoc2VlZCAmJiBzZWVkLmxlbmd0aCB8fCAwKSAmIDEyN10gPSAtMTtcbiAgICB9XG4gICAgLy8gUnVuIHRoZSBnZW5lcmF0b3IgNTEyIHRpbWVzIHRvIGZ1cnRoZXIgbWl4IHRoZSBzdGF0ZSBiZWZvcmUgdXNpbmcgaXQuXG4gICAgLy8gRmFjdG9yaW5nIHRoaXMgYXMgYSBmdW5jdGlvbiBzbG93cyB0aGUgbWFpbiBnZW5lcmF0b3IsIHNvIGl0IGlzIGp1c3RcbiAgICAvLyB1bnJvbGxlZCBoZXJlLiAgVGhlIHdleWwgZ2VuZXJhdG9yIGlzIG5vdCBhZHZhbmNlZCB3aGlsZSB3YXJtaW5nIHVwLlxuICAgIGkgPSAxMjc7XG4gICAgZm9yIChqID0gNCAqIDEyODsgaiA+IDA7IC0taikge1xuICAgICAgdiA9IFhbKGkgKyAzNCkgJiAxMjddO1xuICAgICAgdCA9IFhbaSA9ICgoaSArIDEpICYgMTI3KV07XG4gICAgICB2IF49IHYgPDwgMTM7XG4gICAgICB0IF49IHQgPDwgMTc7XG4gICAgICB2IF49IHYgPj4+IDE1O1xuICAgICAgdCBePSB0ID4+PiAxMjtcbiAgICAgIFhbaV0gPSB2IF4gdDtcbiAgICB9XG4gICAgLy8gU3RvcmluZyBzdGF0ZSBhcyBvYmplY3QgbWVtYmVycyBpcyBmYXN0ZXIgdGhhbiB1c2luZyBjbG9zdXJlIHZhcmlhYmxlcy5cbiAgICBtZS53ID0gdztcbiAgICBtZS5YID0gWDtcbiAgICBtZS5pID0gaTtcbiAgfVxuXG4gIGluaXQobWUsIHNlZWQpO1xufVxuXG5mdW5jdGlvbiBjb3B5KGYsIHQpIHtcbiAgdC5pID0gZi5pO1xuICB0LncgPSBmLnc7XG4gIHQuWCA9IGYuWC5zbGljZSgpO1xuICByZXR1cm4gdDtcbn07XG5cbmZ1bmN0aW9uIGltcGwoc2VlZCwgb3B0cykge1xuICBpZiAoc2VlZCA9PSBudWxsKSBzZWVkID0gKyhuZXcgRGF0ZSk7XG4gIHZhciB4ZyA9IG5ldyBYb3JHZW4oc2VlZCksXG4gICAgICBzdGF0ZSA9IG9wdHMgJiYgb3B0cy5zdGF0ZSxcbiAgICAgIHBybmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuICh4Zy5uZXh0KCkgPj4+IDApIC8gMHgxMDAwMDAwMDA7IH07XG4gIHBybmcuZG91YmxlID0gZnVuY3Rpb24oKSB7XG4gICAgZG8ge1xuICAgICAgdmFyIHRvcCA9IHhnLm5leHQoKSA+Pj4gMTEsXG4gICAgICAgICAgYm90ID0gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMCxcbiAgICAgICAgICByZXN1bHQgPSAodG9wICsgYm90KSAvICgxIDw8IDIxKTtcbiAgICB9IHdoaWxlIChyZXN1bHQgPT09IDApO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHBybmcuaW50MzIgPSB4Zy5uZXh0O1xuICBwcm5nLnF1aWNrID0gcHJuZztcbiAgaWYgKHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlLlgpIGNvcHkoc3RhdGUsIHhnKTtcbiAgICBwcm5nLnN0YXRlID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb3B5KHhnLCB7fSk7IH1cbiAgfVxuICByZXR1cm4gcHJuZztcbn1cblxuaWYgKG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGltcGw7XG59IGVsc2UgaWYgKGRlZmluZSAmJiBkZWZpbmUuYW1kKSB7XG4gIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIGltcGw7IH0pO1xufSBlbHNlIHtcbiAgdGhpcy54b3I0MDk2ID0gaW1wbDtcbn1cblxufSkoXG4gIHRoaXMsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdpbmRvdyBvYmplY3Qgb3IgZ2xvYmFsXG4gICh0eXBlb2YgbW9kdWxlKSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUsICAgIC8vIHByZXNlbnQgaW4gbm9kZS5qc1xuICAodHlwZW9mIGRlZmluZSkgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUgICAvLyBwcmVzZW50IHdpdGggYW4gQU1EIGxvYWRlclxuKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xor4096.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yc2hpZnQ3LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NlZWRyYW5kb20vbGliL3hvcnNoaWZ0Ny5qcz9jYWUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEEgSmF2YXNjcmlwdCBpbXBsZW1lbnRhaW9uIG9mIHRoZSBcInhvcnNoaWZ0N1wiIGFsZ29yaXRobSBieVxuLy8gRnJhbsOnb2lzIFBhbm5ldG9uIGFuZCBQaWVycmUgTCdlY3V5ZXI6XG4vLyBcIk9uIHRoZSBYb3Jnc2hpZnQgUmFuZG9tIE51bWJlciBHZW5lcmF0b3JzXCJcbi8vIGh0dHA6Ly9zYWx1Yy5lbmdyLnVjb25uLmVkdS9yZWZzL2NyeXB0by9ybmcvcGFubmV0b24wNW9udGhleG9yc2hpZnQucGRmXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIFhvckdlbihzZWVkKSB7XG4gIHZhciBtZSA9IHRoaXM7XG5cbiAgLy8gU2V0IHVwIGdlbmVyYXRvciBmdW5jdGlvbi5cbiAgbWUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIFVwZGF0ZSB4b3IgZ2VuZXJhdG9yLlxuICAgIHZhciBYID0gbWUueCwgaSA9IG1lLmksIHQsIHYsIHc7XG4gICAgdCA9IFhbaV07IHQgXj0gKHQgPj4+IDcpOyB2ID0gdCBeICh0IDw8IDI0KTtcbiAgICB0ID0gWFsoaSArIDEpICYgN107IHYgXj0gdCBeICh0ID4+PiAxMCk7XG4gICAgdCA9IFhbKGkgKyAzKSAmIDddOyB2IF49IHQgXiAodCA+Pj4gMyk7XG4gICAgdCA9IFhbKGkgKyA0KSAmIDddOyB2IF49IHQgXiAodCA8PCA3KTtcbiAgICB0ID0gWFsoaSArIDcpICYgN107IHQgPSB0IF4gKHQgPDwgMTMpOyB2IF49IHQgXiAodCA8PCA5KTtcbiAgICBYW2ldID0gdjtcbiAgICBtZS5pID0gKGkgKyAxKSAmIDc7XG4gICAgcmV0dXJuIHY7XG4gIH07XG5cbiAgZnVuY3Rpb24gaW5pdChtZSwgc2VlZCkge1xuICAgIHZhciBqLCB3LCBYID0gW107XG5cbiAgICBpZiAoc2VlZCA9PT0gKHNlZWQgfCAwKSkge1xuICAgICAgLy8gU2VlZCBzdGF0ZSBhcnJheSB1c2luZyBhIDMyLWJpdCBpbnRlZ2VyLlxuICAgICAgdyA9IFhbMF0gPSBzZWVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTZWVkIHN0YXRlIHVzaW5nIGEgc3RyaW5nLlxuICAgICAgc2VlZCA9ICcnICsgc2VlZDtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBzZWVkLmxlbmd0aDsgKytqKSB7XG4gICAgICAgIFhbaiAmIDddID0gKFhbaiAmIDddIDw8IDE1KSBeXG4gICAgICAgICAgICAoc2VlZC5jaGFyQ29kZUF0KGopICsgWFsoaiArIDEpICYgN10gPDwgMTMpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBFbmZvcmNlIGFuIGFycmF5IGxlbmd0aCBvZiA4LCBub3QgYWxsIHplcm9lcy5cbiAgICB3aGlsZSAoWC5sZW5ndGggPCA4KSBYLnB1c2goMCk7XG4gICAgZm9yIChqID0gMDsgaiA8IDggJiYgWFtqXSA9PT0gMDsgKytqKTtcbiAgICBpZiAoaiA9PSA4KSB3ID0gWFs3XSA9IC0xOyBlbHNlIHcgPSBYW2pdO1xuXG4gICAgbWUueCA9IFg7XG4gICAgbWUuaSA9IDA7XG5cbiAgICAvLyBEaXNjYXJkIGFuIGluaXRpYWwgMjU2IHZhbHVlcy5cbiAgICBmb3IgKGogPSAyNTY7IGogPiAwOyAtLWopIHtcbiAgICAgIG1lLm5leHQoKTtcbiAgICB9XG4gIH1cblxuICBpbml0KG1lLCBzZWVkKTtcbn1cblxuZnVuY3Rpb24gY29weShmLCB0KSB7XG4gIHQueCA9IGYueC5zbGljZSgpO1xuICB0LmkgPSBmLmk7XG4gIHJldHVybiB0O1xufVxuXG5mdW5jdGlvbiBpbXBsKHNlZWQsIG9wdHMpIHtcbiAgaWYgKHNlZWQgPT0gbnVsbCkgc2VlZCA9ICsobmV3IERhdGUpO1xuICB2YXIgeGcgPSBuZXcgWG9yR2VuKHNlZWQpLFxuICAgICAgc3RhdGUgPSBvcHRzICYmIG9wdHMuc3RhdGUsXG4gICAgICBwcm5nID0gZnVuY3Rpb24oKSB7IHJldHVybiAoeGcubmV4dCgpID4+PiAwKSAvIDB4MTAwMDAwMDAwOyB9O1xuICBwcm5nLmRvdWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgIGRvIHtcbiAgICAgIHZhciB0b3AgPSB4Zy5uZXh0KCkgPj4+IDExLFxuICAgICAgICAgIGJvdCA9ICh4Zy5uZXh0KCkgPj4+IDApIC8gMHgxMDAwMDAwMDAsXG4gICAgICAgICAgcmVzdWx0ID0gKHRvcCArIGJvdCkgLyAoMSA8PCAyMSk7XG4gICAgfSB3aGlsZSAocmVzdWx0ID09PSAwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBwcm5nLmludDMyID0geGcubmV4dDtcbiAgcHJuZy5xdWljayA9IHBybmc7XG4gIGlmIChzdGF0ZSkge1xuICAgIGlmIChzdGF0ZS54KSBjb3B5KHN0YXRlLCB4Zyk7XG4gICAgcHJuZy5zdGF0ZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29weSh4Zywge30pOyB9XG4gIH1cbiAgcmV0dXJuIHBybmc7XG59XG5cbmlmIChtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBpbXBsO1xufSBlbHNlIGlmIChkZWZpbmUgJiYgZGVmaW5lLmFtZCkge1xuICBkZWZpbmUoZnVuY3Rpb24oKSB7IHJldHVybiBpbXBsOyB9KTtcbn0gZWxzZSB7XG4gIHRoaXMueG9yc2hpZnQ3ID0gaW1wbDtcbn1cblxufSkoXG4gIHRoaXMsXG4gICh0eXBlb2YgbW9kdWxlKSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUsICAgIC8vIHByZXNlbnQgaW4gbm9kZS5qc1xuICAodHlwZW9mIGRlZmluZSkgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUgICAvLyBwcmVzZW50IHdpdGggYW4gQU1EIGxvYWRlclxuKTtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xorshift7.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\") && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\")   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VlZHJhbmRvbS9saWIveG9yd293LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NlZWRyYW5kb20vbGliL3hvcndvdy5qcz9hNDllIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEEgSmF2YXNjcmlwdCBpbXBsZW1lbnRhaW9uIG9mIHRoZSBcInhvcndvd1wiIHBybmcgYWxnb3JpdGhtIGJ5XG4vLyBHZW9yZ2UgTWFyc2FnbGlhLiAgU2VlIGh0dHA6Ly93d3cuanN0YXRzb2Z0Lm9yZy92MDgvaTE0L3BhcGVyXG5cbihmdW5jdGlvbihnbG9iYWwsIG1vZHVsZSwgZGVmaW5lKSB7XG5cbmZ1bmN0aW9uIFhvckdlbihzZWVkKSB7XG4gIHZhciBtZSA9IHRoaXMsIHN0cnNlZWQgPSAnJztcblxuICAvLyBTZXQgdXAgZ2VuZXJhdG9yIGZ1bmN0aW9uLlxuICBtZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHQgPSAobWUueCBeIChtZS54ID4+PiAyKSk7XG4gICAgbWUueCA9IG1lLnk7IG1lLnkgPSBtZS56OyBtZS56ID0gbWUudzsgbWUudyA9IG1lLnY7XG4gICAgcmV0dXJuIChtZS5kID0gKG1lLmQgKyAzNjI0MzcgfCAwKSkgK1xuICAgICAgIChtZS52ID0gKG1lLnYgXiAobWUudiA8PCA0KSkgXiAodCBeICh0IDw8IDEpKSkgfCAwO1xuICB9O1xuXG4gIG1lLnggPSAwO1xuICBtZS55ID0gMDtcbiAgbWUueiA9IDA7XG4gIG1lLncgPSAwO1xuICBtZS52ID0gMDtcblxuICBpZiAoc2VlZCA9PT0gKHNlZWQgfCAwKSkge1xuICAgIC8vIEludGVnZXIgc2VlZC5cbiAgICBtZS54ID0gc2VlZDtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdHJpbmcgc2VlZC5cbiAgICBzdHJzZWVkICs9IHNlZWQ7XG4gIH1cblxuICAvLyBNaXggaW4gc3RyaW5nIHNlZWQsIHRoZW4gZGlzY2FyZCBhbiBpbml0aWFsIGJhdGNoIG9mIDY0IHZhbHVlcy5cbiAgZm9yICh2YXIgayA9IDA7IGsgPCBzdHJzZWVkLmxlbmd0aCArIDY0OyBrKyspIHtcbiAgICBtZS54IF49IHN0cnNlZWQuY2hhckNvZGVBdChrKSB8IDA7XG4gICAgaWYgKGsgPT0gc3Ryc2VlZC5sZW5ndGgpIHtcbiAgICAgIG1lLmQgPSBtZS54IDw8IDEwIF4gbWUueCA+Pj4gNDtcbiAgICB9XG4gICAgbWUubmV4dCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNvcHkoZiwgdCkge1xuICB0LnggPSBmLng7XG4gIHQueSA9IGYueTtcbiAgdC56ID0gZi56O1xuICB0LncgPSBmLnc7XG4gIHQudiA9IGYudjtcbiAgdC5kID0gZi5kO1xuICByZXR1cm4gdDtcbn1cblxuZnVuY3Rpb24gaW1wbChzZWVkLCBvcHRzKSB7XG4gIHZhciB4ZyA9IG5ldyBYb3JHZW4oc2VlZCksXG4gICAgICBzdGF0ZSA9IG9wdHMgJiYgb3B0cy5zdGF0ZSxcbiAgICAgIHBybmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuICh4Zy5uZXh0KCkgPj4+IDApIC8gMHgxMDAwMDAwMDA7IH07XG4gIHBybmcuZG91YmxlID0gZnVuY3Rpb24oKSB7XG4gICAgZG8ge1xuICAgICAgdmFyIHRvcCA9IHhnLm5leHQoKSA+Pj4gMTEsXG4gICAgICAgICAgYm90ID0gKHhnLm5leHQoKSA+Pj4gMCkgLyAweDEwMDAwMDAwMCxcbiAgICAgICAgICByZXN1bHQgPSAodG9wICsgYm90KSAvICgxIDw8IDIxKTtcbiAgICB9IHdoaWxlIChyZXN1bHQgPT09IDApO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHBybmcuaW50MzIgPSB4Zy5uZXh0O1xuICBwcm5nLnF1aWNrID0gcHJuZztcbiAgaWYgKHN0YXRlKSB7XG4gICAgaWYgKHR5cGVvZihzdGF0ZSkgPT0gJ29iamVjdCcpIGNvcHkoc3RhdGUsIHhnKTtcbiAgICBwcm5nLnN0YXRlID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb3B5KHhnLCB7fSk7IH1cbiAgfVxuICByZXR1cm4gcHJuZztcbn1cblxuaWYgKG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGltcGw7XG59IGVsc2UgaWYgKGRlZmluZSAmJiBkZWZpbmUuYW1kKSB7XG4gIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIGltcGw7IH0pO1xufSBlbHNlIHtcbiAgdGhpcy54b3J3b3cgPSBpbXBsO1xufVxuXG59KShcbiAgdGhpcyxcbiAgKHR5cGVvZiBtb2R1bGUpID09ICdvYmplY3QnICYmIG1vZHVsZSwgICAgLy8gcHJlc2VudCBpbiBub2RlLmpzXG4gICh0eXBlb2YgZGVmaW5lKSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZSAgIC8vIHByZXNlbnQgd2l0aCBhbiBBTUQgbG9hZGVyXG4pO1xuXG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/lib/xorwow.js\n");

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ 0);\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/seedrandom/seedrandom.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-define.js":
/*!***************************************!*\
  !*** (webpack)/buildin/amd-define.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2FtZC1kZWZpbmUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLWRlZmluZS5qcz9kYThiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG5cdHRocm93IG5ldyBFcnJvcihcImRlZmluZSBjYW5ub3QgYmUgdXNlZCBpbmRpcmVjdFwiKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/amd-define.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2FtZC1vcHRpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2FtZC1vcHRpb25zLmpzPzAwODYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyAqL1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/amd-options.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9jcnlwdG8gKGlnbm9yZWQpP2I2NTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ })

/******/ });
